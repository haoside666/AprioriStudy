{"a655410e4f0c7cdd9acf9823d65fc207": "FROM golang:alpine3.8 as builder", "267794dc2009034354e97dbbe03ce090": "RUN apk --update upgrade", "3b0dac2aebb078da3867e4671a7a7fbf": "RUN apk --no-cache --no-progress add make git gcc musl-dev", "c7ee7213130eec517f74d450a8cdbd3a": "RUN rm -rf /var/cache/apk/*", "8a0cce29ab09a6edfba0db9bd9083343": "WORKDIR /go/src/github.com/ldez/gha-mjolnir", "9492a220dcfe5eba58d5c534eef91d8b": "COPY . .", "d920e8f70fbd5a4686776b3ebb3067f4": "RUN make build", "f86efb38411611c319b2dacb964bea2b": "FROM alpine:3.8", "00330e8f7089319b566ef464fb6af6a5": "RUN apk update", "e7f019266d11bb99448541d071b54ca3": "RUN apk add --no-cache --virtual ca-certificates", "0ccfad18210d6f7414f2c2b2a7829f03": "COPY /go/src/github.com/ldez/gha-mjolnir/mjolnir /usr/bin/", "90508643f78c54c20970734400a5ea68": "LABEL \"name\"=\"Mjolnir\"", "bfb25a8fb55b1fd01bfaea987b9b7ae1": "LABEL \"com.github.actions.name\"=\"Closes issues related to a merged pull request.\"", "eb01e3072ebedf7f2ef6b5ab1702ba46": "LABEL \"com.github.actions.description\"=\"This is an Action to close issues related to a merged pull request.\"", "e85a7913bbc117ab37d4bcc7381ca7c8": "LABEL \"com.github.actions.icon\"=\"package\"", "7cd1e938bbdf9e8b548d7b304b797b88": "LABEL \"com.github.actions.color\"=\"green\"", "394d390a4f9d437a5ec96a94ea04b0e9": "LABEL \"repository\"=\"http://github.com/ldez/gha-mjolnir\"", "fe08a539178492dfac8ca55235858ee5": "LABEL \"homepage\"=\"http://github.com/ldez/gha-mjolnir\"", "76b6ee8cea426c64a291ce3787457a42": "LABEL \"maintainer\"=\"ldez <ldez@users.noreply.github.com>\"", "f8cb63c41428417c2b6576139f7cc51d": "ENTRYPOINT [ \"/usr/bin/mjolnir\" ]", "fd6f244c201bed85be811cbeed478597": "FROM golang:1.9.3-alpine3.7", "7d6a0137f0294f7d7eef4459f4e83aeb": "ADD . /go/src/github.com/banzaicloud/spot-recommender", "e62aa5386eea156ceaf28db109f63e9f": "WORKDIR /go/src/github.com/banzaicloud/spot-recommender", "b0b6c8cf942dfd812a1a2cf719f84ad6": "RUN go build -o /bin/spot-recommender .", "e191360a45648ecf60e0776ce60556a4": "FROM alpine:latest", "97df2bdf2afbcec6e998889cb78e1297": "RUN apk add ca-certificates", "911f350ee2c43ea688ce42921cc29454": "COPY /bin/spot-recommender /bin", "c9e606c0270026c7eae8b366100e64ef": "ENTRYPOINT [\"/bin/spot-recommender\"]", "06bf049374e2031349c1a873543180ef": "FROM golang:alpine AS builder", "050148469ed02499a03214d07562a3f9": "WORKDIR /build", "4f9a8e960082a8b4e9d510fbcdc88213": "RUN apk add --update make", "9d2511a2b759582cf39067203586d009": "WORKDIR /app", "93d2f4d2475527100a2c86140238e9d7": "COPY /build/mclogger /app", "5094b34be2ef3cf0a8ff9b86bf7ecb88": "CMD [\"./mclogger\"]", "8897204b58966bdf6beb35c34096af4a": "FROM golang:1.13", "acd137580f274a89d6eafc0295117613": "WORKDIR /go/src/github.com/huangjunwen/docker-maxwell/controller", "58db9a46a4e9c97332b224e786dcf764": "ADD controller .", "5816e5e4c31468d933915772cb463a48": "RUN CGO_ENABLED=0 go build -o controller", "5cb64a32c125cac005ae97ee233e7464": "FROM ubuntu:disco", "1249b5f5bb6b13f3e797377cdc7bbf0e": "ENV MAXWELL_VER=\"1.23.5\"", "b2c4dafd3fb6da05e4db0e27c4504f52": "ENV PATH=\"/usr/local/maxwell/bin:$PATH\"", "9c83eb409a28ab7a0d5b12bc2751ea6f": "RUN apt-get update", "de4434312761f21e87e8bb91afd320af": "RUN apt-get install -y --no-install-recommends wget default-jre-headless redis-server", "b00412b25e8ee6a1ff54652af5d7f390": "RUN cd /tmp", "929e47c2e08cf5d2579e66fc3fcb22d3": "RUN wget https://github.com/zendesk/maxwell/releases/download/v$MAXWELL_VER/maxwell-$MAXWELL_VER.tar.gz", "ca37112d1c7763770d8c526be4878130": "RUN tar xfz maxwell-$MAXWELL_VER.tar.gz", "e84572a8edf3ff7309c7b69fee3ee1ef": "RUN mv maxwell-$MAXWELL_VER /usr/local/maxwell", "a8f42ef9986052e185f6b6c70a840834": "RUN rm /tmp/maxwell-$MAXWELL_VER.tar.gz", "d697be90a124ed36bd51bea4d4f4d4a4": "RUN chmod 644 /etc/redis/redis.conf", "53e3dc9a2b4c4743ba02043831bb6d51": "COPY /go/src/github.com/huangjunwen/docker-maxwell/controller/controller /usr/local/bin", "8c44b0fa132ed282c0154e7f90356b17": "WORKDIR /root/run", "e1f3db62407c42e61f6c3a8fef8f6388": "EXPOSE 6379", "f0d03d9a61d1ad09bac782d1900227a8": "ENTRYPOINT [\"controller\"]", "67be7e74a818bd3c557d3936d2944067": "FROM golang:1.15-alpine as builder", "470544fabcb552b7439c0739b07acf4c": "ARG VERSION=\"\"", "f3fddcd05e339ea2f740ee6473c01b70": "ARG TARGETOS=\"\"", "f128dae9a978f39a658fbbd0ebbd7a61": "ARG TARGETARCH=\"\"", "313d9fb85b3e2a6c2befe949c410d302": "ARG TARGETVARIANT=\"\"", "11ee73d7adf305e3627b143df7dc65d5": "ENV GO111MODULE=\"on\" CGO_ENABLED=\"0\" GOOS=\"${TARGETOS}\" GOARCH=\"${TARGETARCH}\" GOARM=\"${TARGETVARIANT}\"", "f53adfc615f9fdc4f239b9963c306e98": "WORKDIR /go/src/github.com/thanos-io/thanos", "216fe0e7994251124404e5c15e13f78e": "RUN apk upgrade", "06bcb1c71c5cc223cb51281cdb9e8f2a": "RUN apk add --no-cache alpine-sdk git make patch", "16c104b96f35e1a94195d1b389dce444": "COPY build.make.patch /", "ecf829ef3ca0b0bbbe08bd8e79c921b1": "RUN git clone --depth 1 -b \"${VERSION}\" https://github.com/thanos-io/thanos.git .", "f91ccd309fbe37f38d21fb09463496c8": "RUN patch -u Makefile -i /build.make.patch", "bcded324c5c9c1bcbb90d487b81903d9": "FROM quay.io/prometheus/busybox:latest", "bc9eb43d669427b29110f824b760fae8": "LABEL maintainer=\"The Thanos Authors\"", "12a8c9d1ebc8358436c59612823d164f": "COPY /go/bin/thanos /bin/", "8a230b2e2f33478601cbb2de66442d4d": "ENTRYPOINT [ \"/bin/thanos\" ]", "1ee60717a5d1be516366da42df13d16c": "FROM golang:1.12", "d22dc4d1d1b5fc222fa95c4708045460": "RUN mkdir -p /go/src/golang-chatbot", "cc02e6a7e5f05381b7f57323a13dcfaa": "WORKDIR /go/src/golang-chatbot", "9106825f8a6da459d74f4467139d24e9": "ADD . /go/src/golang-chatbot", "bb4a7074573b4cda126956151a861c55": "RUN go get -v", "2b59913b2f83eacc79c023fb209896b1": "RUN go get github.com/githubnemo/CompileDaemon", "2c417caa91e4f089eded80ad487b67fe": "EXPOSE 8080", "61bdfab9df6578e91ce6d4ccb0dfacf6": "ENTRYPOINT CompileDaemon -log-prefix=false -build=\"go build -o golang-chatbot\" -command=\"./golang-chatbot\"", "a4ec0fe7985e5a678e7ad2b08dde87fe": "FROM golang", "fc1576ec78ee3068ef79131e8ea97a9e": "ENV API_INSECURE=\"false\"", "a0c4e1dc5f2ba56ebd5f4b5374cf7c00": "RUN apt-get install -y git", "37db75b8a552cbe7919547faaa459f96": "RUN go get github.com/czerwonk/ovirt_exporter", "66c0435c52e67ccfe59739d1381af60a": "CMD ovirt_exporter -api.url=$API_URL -api.username=$API_USER -api.password=$API_PASS -api.insecure-cert=$API_INSECURE", "dba0a71181f230fbe037f298ff3bfb01": "EXPOSE 9325", "63b79f8f0aa31cc04bd03a3b1df09cd3": "ENV PKGVER=\"1.2.2\"", "285c025694f1fb55ff52aa88918a57e2": "RUN apk add --no-cache ca-certificates curl", "74854e6ab36fded95af7e755dc1e79aa": "RUN mkdir -p /go", "be55379f0ef4f4229b1125ef7443ea87": "RUN cd /go", "0a4929001a96141231b91f84ccd8c032": "RUN mkdir -p src/github.com/syncthing", "ef8b6a7d023c2d215719a14b340319ef": "RUN export SRCDIR=$PWD", "02682e36f360ad307cb7e36d1339395f": "RUN cd src/github.com/syncthing", "bbc62fc4c5ec1475a62dc8cafa36635c": "RUN curl -L https://github.com/syncthing/syncthing/releases/download/v${PKGVER}/syncthing-source-v${PKGVER}.tar.gz | tar xzf -", "c158bd44746160291aa8699979ec05fd": "RUN cd syncthing", "b09ab099d9341e6ceab82af0509b4e64": "RUN export GOPATH=\"$SRCDIR\" GOROOT_FINAL=\"/usr/bin\"", "a17339c0805898d6859118057d9c7758": "RUN go run build.go -no-upgrade -version v${PKGVER} build strelaysrv", "ad6e67778e709cb372f6a3b9d83079c1": "RUN go run build.go -no-upgrade -version v${PKGVER} build stdiscosrv", "c103811d52c3b5fef14606bb8ce7d5a9": "RUN apk add --no-cache bash ca-certificates", "81a15ea5dc74dd65fc73cf078eaa3e5e": "COPY /go/src/github.com/syncthing/syncthing/strelaysrv /usr/bin/", "6992539d6764166f1ca34a15f414478a": "COPY /go/src/github.com/syncthing/syncthing/stdiscosrv /usr/bin/", "49389948bf04a0ab27ec577b77ac3074": "RUN mkdir -p /strelaysrv", "d4a35938dd521a25205cfd756b6217ff": "RUN mkdir -p /stdiscosrv", "05a91b513203d48c2a93249d2c20cb3d": "VOLUME /strelaysrv", "4189f3b3811aebedfd1612edc9b98b03": "VOLUME /stdiscosrv", "e0c4aac495a3d0be36b2276b0f9adf05": "EXPOSE 22067", "b11d204e230ed7f3eb3978d0da0c9d7e": "EXPOSE 8443", "9edeb6af54a4cd9cf943e190fb895d27": "COPY entrypoint.sh /", "9f229bfb8ec2d4975f30535ac0e7bb8e": "ENTRYPOINT [ \"/entrypoint.sh\" ]", "9652cd30eaf16ccf685aa1eb24894988": "FROM golang:alpine as builder", "b7ef11dee19110efa1d64733d88a4119": "ENV GOROOT=\"/usr/local/go\"", "ec53ebd217b521e8db2c096f7485dffb": "RUN apk -U --no-cache add git make tzdata", "c5b26b114dd6e2d57882cb23a34b2fd5": "ADD . /src", "a4a19337568efdddf1906bb4d83f7081": "WORKDIR /src", "38365c17979a8fbc61416e6161b3b1be": "RUN make binary", "a874d74569088f4ec419c84211ab1de3": "FROM alpine", "813e068fe6af567a1a23bb18a2347e02": "COPY /src/build/entrypoint.sh /app/", "0b30538cb813325f65090d1a74641307": "COPY /src/bin/claim-parser /app/", "a5d1595525e05d3fd7ae3233a00faf58": "COPY /usr/share/zoneinfo /usr/share/", "61ac1710a676f286602762b2d8ebff3b": "ENV TZ=\"Europe/Moscow\"", "3e18a12beb72e5489857dae9fc9afcbf": "RUN apk -U --no-cache add bash ca-certificates", "0ed7d1fa960cb0c3d0a9601b5119f71b": "RUN chmod +x /app/claim-parser", "4b3ef97b0baa084fb285972b95e88dcf": "RUN chmod +x /app/entrypoint.sh", "78c70946f4f7dd1706ee2d98de8a2015": "VOLUME [\"/app/config\"]", "a82ec90617c98dfeab90f31e03b92f1e": "ENTRYPOINT [\"/app/entrypoint.sh\"]", "245069f56a8f4ca9822a4dcc9382e9ce": "FROM golang:1.12.6", "85e953d005dea00445177cea918127a0": "LABEL name=\"Go Node Bedrock\"", "71ef59899a869b7962681c270c909b76": "LABEL maintainer=\"mlussier@gmail.com\"", "6590f5c45de26684450fec7c264dd72b": "ENV DEBIAN_FRONTEND=\"noninteractive\"", "4fdb8f027ecf1cc1ebbfc6db84e38046": "RUN apt-get upgrade -y", "2d5d84aaed152b0fb0df01c89aee9d7c": "RUN apt-get install -y --no-install-recommends g++ gcc libc6-dev make pkg-config xz-utils software-properties-common apt-transport-https netcat", "6a2c88d4e9ae7661851b8b5b536fe1f8": "RUN apt-get clean", "8bff1dca6d2e9649bd91c34846ca4e6a": "RUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*", "b74ca96af249fc9f1ba879ee66687e54": "RUN wget http://security.debian.org/debian-security/pool/updates/main/o/openssl/libssl1.0.0_1.0.1t-1+deb8u11_amd64.deb", "2a98d95b477eba863117113facd9615e": "RUN dpkg --install libssl1.0.0_1.0.1t-1+deb8u11_amd64.deb", "f9a9ce132b19522b297d5286522c68b0": "RUN wget -qO - https://packages.confluent.io/deb/5.2/archive.key | apt-key add -", "46433951c3b60a624a00fd3c7d4aa2e1": "RUN add-apt-repository \"deb [arch=amd64] https://packages.confluent.io/deb/5.2 stable main\"", "20fa37b9a13b6dbab2586a9fcf85a167": "RUN apt-get install -y librdkafka1 librdkafka-dev", "9ec485c70def04b027ed6607b49001cd": "ENV NPM_CONFIG_LOGLEVEL=\"info\"", "44e8f7d890ef0304d82c9cec5b2954a5": "ENV NODE_VERSION=\"12.5.0\"", "91bbcbc4d984be40c84d07bbbda625dc": "RUN set -ex", "ab4ea466e34a42931d8184bad712c260": "RUN for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 77984A986EBC2AA786BC0F66B01FBB92821C587A 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 4ED778F539E3634C779C87C6D7062848A1AB005C A48C2BEE680E841632CD4E44F07496B3EB3C1762 B9E2F5981AA6E0CD28160D9FF13993A75599653C ; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done", "7457ddd839dc6788d540289a7f1ad14f": "RUN ARCH=", "a623d10918692c3faf84b7dcfdb73843": "RUN dpkgArch=\"$(dpkg --print-architecture)\"", "58ad193235154ae2774ef272fb210b18": "RUN case \"${dpkgArch##*-}\" in amd64) ARCH='x64';; ppc64el) ARCH='ppc64le';; s390x) ARCH='s390x';; arm64) ARCH='arm64';; armhf) ARCH='armv7l';; i386) ARCH='x86';; *) echo \"unsupported architecture\"; exit 1 ;; esac", "2181b3c621289017b274601fce15173d": "RUN curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\"", "0870e2039cadefe0fbf39f986046a936": "RUN curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"", "d4befde37937cfadfba5500a7eae5710": "RUN gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc", "ac357d30a9b86482e98cc0fbbc5407e7": "RUN grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -", "5d8c3e5a596b91c03ee7f2907aef2a31": "RUN tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner", "c8069cfbb101eb09addd1b9ced6f6a5c": "RUN rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt", "ff8de94a6b83083b40f63bcd907e1307": "RUN apt-get purge -y --auto-remove $buildDeps", "48746e09e2c629795b1596a266f44925": "RUN ln -s /usr/local/bin/node /usr/local/bin/nodejs", "761d0c06eaaf3a0ae62cf5616868d4ec": "RUN go get -u github.com/golang/dep/cmd/dep", "caf8404e60e68eee7c38bdf5ef60a751": "RUN go get -u github.com/gobuffalo/packr/packr", "c4369d250dae1010f85b7d37f3f4d581": "RUN /usr/local/bin/npm set progress=false", "4fddbd4afbc5876df1c6863dfd11b311": "RUN /usr/local/bin/npm config set loglevel warn", "4863c6e496ad11daf79b70c8940b9e6d": "RUN npm install yarn prettier -g", "33b91b8287ae34899c8522dd65df3867": "FROM golang as build", "66ab86bd795c8749646639ea219dbf5f": "WORKDIR /workdir", "47c570be929ce6c9621cf7ba9b03b01a": "COPY . ./", "0240caabadbf472ac45adade0cf88dce": "RUN go build -o kubefate kubefate.go", "91520901ab799a691ace061d0c445eff": "FROM scratch", "d6325cdae306336ac9f854c72d5f6919": "COPY /workdir/kubefate /workdir/", "d7fc35bacdd59ef285d098ad4315ac38": "CMD [\"/workdir/kubefate\"]", "f5d2047ab88fbfc0fe27f6d6c7be44f2": "FROM golang:alpine", "dbb4dc923ee20bef8202c67b60e16ef3": "ADD main.go /tmp/", "ea1cc650c152ac062c179f5096a84870": "RUN apk add --no-cache --update git", "e84ffaa90b907cbe8a5a4f27a41da156": "RUN go get github.com/garyburd/redigo/redis github.com/gorilla/mux", "4c89bc677ffca6858ff258b8d3eeedc5": "RUN CGO_ENABLED=0 GOOS=linux go build -o /usr/bin/redis_mon_exporter /tmp/main.go", "fffb68f48f4ee0fb5ef25f11f8d560af": "RUN apk --no-cache add ca-certificates", "7e1c066bb5b4a8c88e3cd06c5bfc9c1b": "WORKDIR /usr/bin/", "2aabfd9621a9599d30711504e8f2af7e": "COPY /usr/bin/redis_mon_exporter .", "0dcc467c3459f0d42050d1fbe0acac64": "ENTRYPOINT [\"/usr/bin/redis_mon_exporter\"]", "25bd79de9c9ce46edb7aaad2bb55c023": "FROM golang:alpine AS build", "60a663e0a291a091e3fcbfc68ea02483": "RUN apk add --no-cache ca-certificates", "93930645596112b266c0aa01a5ff13ec": "RUN update-ca-certificates", "c6f856a9e8113d90606ac751f5c8f446": "RUN apk --no-cache add build-base git", "d5c569483539697673abd89a669d9c73": "RUN cd /src", "363cb1f3b608a0466c8ba6ace529c82b": "RUN make deps", "dc94a8c04640d9e7a96c632a32f23ed4": "WORKDIR /usr/sbin", "f24c8c7505baee58d07802e690204591": "COPY /src/dist/productd_linux_amd64/productd /usr/sbin/", "bfe4d5c2a39128a2acb98e5a5bc2598e": "ENTRYPOINT [\"/usr/sbin/productd\"]", "b62908d1925da3706520ce04261ce25b": "CMD [\"help\"]", "efc36954a3238c68dc0a393557463f10": "FROM golang:1.12.5 AS build", "a67246e01fd8a4797a487471d9eac4b3": "ENV REPOSITORY=\"github.com/reud/plathome-backend\"", "44a99e200a82abe985c52eaba5f98c8d": "WORKDIR $GOPATH/src/$REPOSITORY", "5c1968ad3fc3aadc414bf7a69fb0d23c": "ENV GO111MODULE=\"on\"", "0db124a8abe077b88d3640c7635af32c": "COPY go.mod go.sum ./", "3e3b6cb8eee001c0ba03c99da8395921": "RUN go mod download", "518844ebecda93581b4871a7a8cf8ab8": "ADD . $GOPATH/src/$REPOSITORY", "e92d136ff7bff83a0bf13aafb081eeca": "RUN GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags '-s -w' -a -installsuffix cgo -o /plathome plathome.go", "f557436a47b5e08c42c5bf88b4ef3444": "FROM alpine:3.10.1", "88eecf36f5540c0bd08f72594625c19c": "COPY /plathome .", "20402a35e65b4535b59c82e345e6424d": "CMD [\"./plathome\"]", "b3f8ac3366b4bd8a96bf0484f596ded5": "FROM golang:1.10.4-alpine3.7 as builder", "7ada3bdb94211e0441b1c6c7ce7aac45": "COPY . /go/src/github.com/haad/event-exporter", "b19377334f04ee0ce4fb66d0a6d99a1a": "WORKDIR /go/src/github.com/haad/event-exporter", "68f8c97987e59a65d97c4ad97d214a69": "RUN apk add --update git make", "89e3a5ed20619131940f4d7549dfc942": "RUN dep ensure", "285dc5f59ebe0d18e1ed8d757b907f4d": "FROM alpine:3.7", "7435e75033d6e0c22e863faa8fce41db": "COPY /go/src/github.com/haad/event-exporter/bin/event-exporter /usr/bin/", "c75e3ae940d3d901cdadd24f27da4065": "ENTRYPOINT [\"/usr/bin/event-exporter\"]", "0c97b4b263ba7bd3c6dbe56f5aface01": "CMD [\"-v\", \"4\"]", "fe0bd9584f45ea741f90037e9cae7f20": "FROM golang:1.13-alpine3.11 AS builder", "948ae7805e463a0f794ca27ef222baef": "WORKDIR /go/src/github.com/pidster/dummy-concourse-resource", "6178c9eb67829d7387f9ca6eca7a9de9": "RUN GOARCH=amd64 GOOS=linux", "14057975009ac66b4143b4c5dec746a5": "RUN go build -o outputs/in in/in.go", "2c0f8dc57b3ba7b6d1ff20c754f09145": "RUN go build -o outputs/out out/out.go", "e95b2a6b0da58722dac62e8f2a3c44c3": "RUN go build -o outputs/check check/check.go", "b46bdb9a1bd30cd877765af8d11c1680": "FROM alpine:3.11", "c7ce7d57f022c30a7f5afc8d22a49cd2": "RUN apk -U update", "d5093f84e4e6318df6d18a5aeef6ece4": "RUN apk upgrade --purge", "0af28b460e7a8c1cc86a148af9087566": "RUN rm -rf /var/cache/apk/* COPY --from=builder /go/src/github.com/pidster/dummy-concourse-resource/outputs/* /opt/resource/", "3e44e00c1f2e19534ee8e78c1c9f0007": "FROM golang:1.11 as builder", "ca06aa05fd9da6633c7168d87baaef26": "WORKDIR $GOPATH/src/goload", "527332f0df1458784534410fc43678f1": "COPY vendor/", "af3becad42db472e026f2c46476d95a6": "COPY *.go ./", "6471c5b5edc9178da39bea6d65408870": "RUN go test", "a2a65250c84314ab98036c1a5da200d3": "RUN CGO_ENABLED=0 GOOS=linux go build", "fe79445a482242a331fce83504d433e0": "COPY /go/src/goload/goload /usr/bin/", "5b1ad96282702b2db7a5e682cd78532a": "COPY entrypoint.sh /usr/sbin", "7611dac92251180d57fb6f9e07868e53": "RUN chmod +x /usr/sbin/entrypoint.sh", "adc54fa76776e112166a9ef70c071589": "ENV HOST=\"0.0.0.0\"", "fa41ab085643281bb41bb195d155a426": "ENV PORT=\"9115\"", "90fddd52b286fe8e025fbedfb0eee4ca": "ENV LOG_LEVEL=\"ERROR\"", "fd87ae5f5623aa015415d361616d8e3c": "ENV CONCURRENCY=\"1\"", "b280143caca32a8b30699113f1036c7c": "ENV SLEEP=\"1\"", "66bd43eac147dce7c7850cc705992abe": "ENV REPEAT=\"-1\"", "54a6c2a9b55dacb0c87671a5afcd0e96": "ENV TARGETS=\"\"", "72edd9175533af435b4c95019ec275f8": "ENTRYPOINT [\"entrypoint.sh\"]", "cf144d2e65ae3f5b4537caf254a0fd49": "FROM golang:alpine AS buildoc", "e561e89848da17ae9fb93e72097f3165": "RUN apk add --no-cache git", "bc37d7da14f8d5bc5012bac79f8e20af": "RUN go get -v github.com/openchirp/oc", "000ae8a9afbdb09923759b99c62a7ea9": "FROM node:alpine", "503baa5d6c80256cb40d6cf7dae34e0f": "COPY /go/bin/oc /usr/local/bin", "f3881298ca9ca2b84fba2a5f5cb7ff6d": "ENV FRAMEWORK_SERVER=\"http://localhost:7000\"", "27c80dda3be9d522a2a99413432403cf": "ADD src /home/node/openchirp/", "b00f6a9e2f34d0329e53e489314f792a": "ADD config /home/node/openchirp/", "aba93de3cfda7bcde39b6e28ec6ddec0": "ADD bin /home/node/openchirp/", "dfa634dbbf01801ea0d025719cacd1c4": "ADD package.json /home/node/openchirp", "ce95c5b83760111c2213b4c56d0e81cf": "WORKDIR /home/node/openchirp", "cd020edcc3e11022bdf2f6606ace4e19": "RUN npm install", "110ff622e746f1ae0c3757afe17b2c22": "ENV NODE_ENV=\"production\"", "9ceedeb1407ad913f3e92e1edc76a99b": "ENV PORT=\"7000\"", "00c56f43533f94fdc104a9e485096cac": "EXPOSE 7000", "c06e838b8ad188d768e74abb23e1f74f": "HEALTHCHECK CMD oc check -e || exit 1", "63c0799927f300398c09b9176b90280e": "CMD [ \"./bin/www\" ]", "82771342408d34f05aaa322e43590845": "FROM golang:latest", "67a0c5068d9a51d91999db2f432f258b": "RUN mkdir /app", "14934a1123a74fed38ce04090685432e": "ADD . /app/", "807e33df0d8f40254927a43e44195939": "RUN go get -v github.com/mattn/go-sqlite3", "d40fe1fc67d81814719c4cc21b172df8": "RUN go get -v github.com/go-chi/chi", "6d9ee117353ec6b558b67f293840444d": "RUN go get -v github.com/go-chi/cors", "039a6bb1b2361a455e4a0fa4231ddc4c": "RUN go build -o main .", "f5dc17ccedcfd9c472ac40b14d42b583": "CMD [\"./main\"]", "409139ab10a2f6babe9e7d69ac51fb59": "ARG debian_version=\"\"", "2c1004624810833b41e7a5c7bcc4c3ce": "ARG golang_version=\"\"", "0d8374c33b22da550c6319e7657af6c3": "FROM golang:${golang_version:-1.13}-${debian_version:-buster}", "01257e78dc3c15029e56b9787e543440": "ARG ansible_version=\"\"", "a42cb0c500adef24ee763752044de245": "ARG awscli_version=\"\"", "f8ad2cbad6af9012caff22fe5b92fd89": "ARG terraform_version=\"\"", "0583d3ced73a8ed09fc33381cd400082": "ENV TERRAFORM_VERSION=\"${terraform_version:-0.12.12}\"", "3966a6fda26b78970940408487de1b1c": "ENV ANSIBLE_VERSION=\"${ansible_version:-2.8.6}\"", "dc4e34e66cf6a34af0d14de5eef20cd3": "ENV AWSCLI_VERSION=\"${awscli_version:-1.16.266}\"", "adf07f28240689df61843eb9e720c14a": "ENV SCRIPT_MAIN=\"'/tmp/main_script.sh'\"", "0483f050e7f5cc708511d858b5b497e9": "ENV SCRIPT_LOCATION=\"'/tmp/script/script.sh'\"", "cba6332f6eaeec1060b2d8a694575f3c": "ENV EC2_INI_PATH=\"/etc/ansible/ec2.ini\"", "00c140d51b397d55eb410451937e12ab": "LABEL maintainer=\"salvatore181@gmail.com\"", "c4aef6bad0e8a3c2e7c68ac20217d5d5": "COPY script/ /tmp", "c85e36bdbeb86c68a5bb4683e7b97ed8": "COPY ec2/ /etc/ansible/ec2", "44cb95fe7530013624b100ed20e5d30a": "RUN set -xe", "6256948714b33ff497a7c9c79808131b": "RUN apt-get install -y sudo curl ca-certificates openssh-client unzip python3-dev python3 libffi-dev openssl git vim build-essential python3-pip python3-setuptools software-properties-common", "c38fc96fd84b5103c897a712cc7105f3": "RUN pip3 install --upgrade boto3 pip setuptools", "1c62af4a1fd64412699ec69a7d5d0420": "RUN if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi", "ff015ec87acd1b781c4b959960f69815": "RUN if [[ ! -e /usr/bin/python ]]; then ln -sf /usr/bin/python3 /usr/bin/python; fi", "3826f498cfba5b4d23f9eb118c8b2cd9": "RUN pip install --no-cache --upgrade ansible==${ANSIBLE_VERSION} awscli==${AWSCLI_VERSION}", "190a5173855905513b4fd5c1afea0b2b": "RUN wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip", "7bf7bc33f4244d5976a36386b7de5f10": "RUN unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip", "fd903313704d1df93fbf5424cd677c17": "RUN rm -f terraform_${TERRAFORM_VERSION}_linux_amd64.zip", "bdf89eeeae0eacf9dbed5152c1620446": "RUN mv terraform /usr/local/bin", "4d41fe2cbfc5daf855a156bfb1828a51": "RUN rm -r /root/.cache", "2a4f64c5c956510fef0f3bbf71044a38": "RUN chmod +x ${SCRIPT_MAIN}", "717095673d30df1c742442c1b04a79f7": "RUN wget -qO - https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public | apt-key add -", "a3ed857360b8377605f163314a75bd2b": "RUN add-apt-repository --yes https://adoptopenjdk.jfrog.io/adoptopenjdk/deb/", "66573e23686e649b5749218d5e96fc52": "RUN apt update", "961f3ae249e46b5b308870144d792325": "RUN apt install -y adoptopenjdk-8-hotspot", "03343d3cabcfd79bd8e9e4480f753e23": "CMD sh +x ${SCRIPT_MAIN}; /bin/sh", "dc273ddd580d3c6d98981818f5f01a76": "FROM golang:1.9-alpine3.7", "fb4b93926e1f35625fda92ef5efdf594": "RUN apk add --no-cache imagemagick git", "d9f9c3a5711e47deb8ce2409e30fbacc": "RUN go get github.com/golang/dep/cmd/dep", "f6bf8666a909c8ae0aa636448fa4fdf2": "RUN mkdir -p /go/src/github.com/Pixboost/", "2186f4f287e00c6bab92ca894d4ce6c8": "WORKDIR /go/src/github.com/Pixboost/", "21e36e9856a1c6622b46f14b1763174b": "RUN git clone https://github.com/Pixboost/transformimgs.git", "88350c4bc5458c5a48407dbe004c6e26": "WORKDIR /go/src/github.com/Pixboost/transformimgs/", "ffba278c077061c55d10b03be1be90fa": "WORKDIR /go/src/github.com/Pixboost/transformimgs/cmd", "7c04c185d1ec6730e98140bab63f9546": "ENTRYPOINT [\"go\", \"run\", \"main.go\", \"-imConvert=/usr/bin/convert\", \"-imIdentify=/usr/bin/identify\"]", "906631829d0b95d710384437e1c13ddc": "FROM golang:1-alpine as builder", "ab760f612e4969b4633fd74ec41a5b7d": "RUN apk --no-cache --no-progress add git make", "6fa988b3b7ee3d75f12e65e7ee8bf0b1": "WORKDIR /go/src/github.com/containous/lobicornis", "e07258193955308fdae76fca96882ec9": "RUN make dependencies", "dd715334750feb8e04801176874b13ec": "FROM alpine:3.6", "ee58fce849f120692cdac83f42740faf": "RUN apk --no-cache --no-progress add ca-certificates git", "9155809cd3d9604c849c57aa27c5372c": "COPY /go/src/github.com/containous/lobicornis/lobicornis .", "2d9003154c37e819d8875d0b8a27f652": "CMD [\"./lobicornis\", \"-h\"]", "5992c9881432f7bed0aec7fac817ff22": "FROM golang:1.10-alpine3.7", "438ce79d78733a18069490cb3dd46361": "WORKDIR /go/src/go-drone/main", "36bdf1e41ddc63daf667c5eb57afd240": "RUN go get -d ./...", "d160dbec39c84dd61f0b74e1d6292b52": "ENTRYPOINT ./main", "ededb141413d00e6f2dba7c45cc88fbd": "FROM golang:onbuild", "e704c17bf9904a6c4dcda6e911fa68ef": "RUN mkdir /gen", "ba0b3af020ae01790ed51c218565fcdf": "ADD ./gen /gen/", "f04ecb7731dfa267c3a8e87afeff3baf": "WORKDIR /gen", "32cf8e9ebb2d67834715b8a66af50df1": "CMD [\"/gen/main\"]", "989149b33d6a11996eabd83dee950f0b": "ADD . /go/src/leogregianin/brcep", "b6089a50c2e5b0494af242b3c9cf54bf": "RUN go install leogregianin/brcep", "943b2fb75b40006b1bf04a07355a2302": "CMD [\"/go/bin/brcep\"]", "c14274a5eee17aa5aa1b721c6a21c52e": "EXPOSE 8000", "814d224fe52e88372e41f25fc2a403c3": "ADD . /go/src/github.com/zchrykng/caster", "65bdce0fc553d8c51f7eae665f20a4ce": "RUN go get github.com/zchrykng/caster", "5824574ca27c4c5f5b4f699997afb67f": "RUN go install github.com/zchrykng/caster", "d21f476fe425e174d9ad97ca0443dc02": "ENTRYPOINT [\"/go/bin/caster\", \"-root=/casts\", \"-userfile=/users.json\"]", "4bc745d48c67df7c9b69e5b7a627bc23": "FROM golang:1.14.1", "5e8ea879210cb51ee14ba137342b1e60": "ARG TOAD_VERSION=0.1.4", "1e17c63defb094f9004dfb5ed97bb01c": "RUN mkdir -p /app", "611a29ad73237bb9f5af47e860d1a510": "RUN curl -sL https://github.com/Clivern/Toad/releases/download/${TOAD_VERSION}/Toad_${TOAD_VERSION}_Linux_x86_64.tar.gz | tar xz", "d28dd094a694848f9621b21d331e53a0": "RUN rm LICENSE", "e3e419a0fa2568a91424ce41935a818e": "RUN rm README.md", "d1c29ad05212fc792fa91e6ca991055f": "RUN mv Toad toad", "91cd4dca68d0b418816f715f9a3e737f": "RUN ./toad --get=release", "bd256f7f423cf776a80ebb20e64f3360": "CMD [\"./toad\", \"--port\", \"8080\"]", "eff3217b1c7dda1bb6ce5dda8f6f9891": "FROM golang:1.13-alpine", "f02a43781fc9ffb34a9f574c56d394e8": "ARG golangci_version=\"v1.18.0\"", "fb01b6c266046c03a4329cb1900cf960": "RUN apk add --update make git gcc curl libc-dev", "c41ca3c4f9c84d0de244d888903b684c": "RUN git config --global url.\"https://github.com/vimeda\".insteadOf git@github.com/vimeda", "fc35eb222a9d6148e42d3dc81a9f040e": "RUN curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $GOPATH/bin $golangci_version", "5e3e15fde4726aa5f92ef211ea11a38b": "ENV LANG=\"C.UTF-8\"", "b6bb16c35c72a6c4a571277b10a8ac29": "ENV LC_ALL=\"C.UTF-8\"", "0e8143ab933c053e4011ce2496b72931": "RUN apt-get install -yqq git python3-pip", "872775e2c02ca7282226519b2f46f8c6": "RUN pip3 install yamllint", "c0bf026910b6f2f0e11a825779f3b1f9": "WORKDIR /exercises-go", "5844737f1dac39e2568a15778ab5c477": "COPY . /exercises-go", "f70fd02c1f015e93358fe1f559d38bf2": "RUN apk apk -U upgrade --no-cache", "ced9a01247a2fcbbf6501c454cde82e9": "RUN apk add git --no-cache", "8f83e513f116cc9b0ccc2e1b045aac2b": "RUN go get -u -v github.com/shadowsocks/go-shadowsocks2", "f87793727bb75c73c16a309feceecc4e": "RUN apk apk -U upgrade --no-cache WORKDIR /app", "c7747ba60d2d3a8a403c504a4d807951": "COPY /go/bin/go-shadowsocks2 /app/", "a2cd6d20a377f32aded6ea1cf56ea83a": "ENTRYPOINT [\"./go-shadowsocks2\"]", "d9cc3077e7548e8dca04e791294ddf28": "FROM golang:1.11-alpine as builder", "d08f9df1fbe5e42cca96e5d3e5de50fb": "RUN apk --no-cache add git", "7dbd1128ce677e95eb493f6df723bf51": "ENV CGO_ENABLED=\"0\"", "8c51724af4dac11256c8446a1704ae25": "WORKDIR /vgo/", "bc0f3f6e27df9df12d8a4466cfec972d": "RUN go get ./...", "5487596dccc47c2b2a860b94d9094503": "RUN go test ./...", "8528d6acec7c0e50efc245540de978f8": "RUN go build -o /bin/kubenurse .", "3d1d2b1bfb4a127d8173a2589dfa03c7": "FROM alpine:3.8 as runtime", "c38659cf682bc7a5c9e1cfa6262bff67": "MAINTAINER OpenSource PF <opensource@postfinance.ch>", "07cdffcf2957bc17970fe1aa01ae7f32": "COPY /bin/kubenurse /bin/", "8a12bf4b6f48d0defc374ddb55f4fb6a": "USER 65534", "18438e0047598a9775ff903cfa3fbcfa": "CMD [\"/bin/kubenurse\"]", "9df46e97ac3bd82a49f04e2d29f920c3": "CMD [\"/app/main\"]", "421dc52766f20dd7c5006fddc63656a8": "EXPOSE 9091", "a4f04eaa96d94ea5b9d4ab2af9497cfb": "FROM golang:1.13-alpine3.10 AS build-env", "ca31489ec3e19643a2ccf8250719e9db": "COPY . /src/gitea-group-sync", "807b21e825dad5e1ce6e7f08410a8592": "WORKDIR /src/gitea-group-sync", "29ea9c4d9cc8db5d16d1726b6ca8247e": "RUN go get gopkg.in/ldap.v3", "c9463937b968acfe5d3f4065151fef88": "RUN go get gopkg.in/robfig/cron.v3", "5f034d4587bb2dce1a2aef48c07d23a5": "RUN go build", "35a378f910fbebac42e48f5734165612": "FROM alpine:3.10", "14b5ffb009e6be41bf6be869310bdec1": "COPY /src/gitea-group-sync/gitea-group-sync /app/gitea-group-sync/", "4007a707c4bad4aaa8e868b9eba37fb5": "RUN ln -s /app/gitea-group-sync/gitea-group-sync /usr/local/bin/gitea-group-sync", "754b047bbff4859e073d5894a7b492c2": "ENTRYPOINT [\"/usr/local/bin/gitea-group-sync\"]", "7efe2bf06f5642e3224c936405a0ab94": "FROM golang:1.13-alpine AS build", "1f9a486c1a2a785dd5a089d05bc6c15e": "RUN apk --no-cache add --update git", "40a2d303951bd4bd0c4de69dd9da8890": "RUN mkdir -p /go/src/github.com/arbourd/concourse-slack-alert-resource", "9ed621a3ae0aa04a69eda2dbc43fce2c": "WORKDIR /go/src/github.com/arbourd/concourse-slack-alert-resource", "7a8e2684b2fba7db24fd1c3070ece057": "COPY go.mod go.sum /go/src/github.com/arbourd/concourse-slack-alert-resource/", "7690e1a44b090aa59b8e0dac8544843d": "COPY . /go/src/github.com/arbourd/concourse-slack-alert-resource", "b571c900c09ea9b858b34290f964aae6": "RUN go build -o /check github.com/arbourd/concourse-slack-alert-resource/check", "58ab25613435d7b0c97286fabc9336d4": "RUN go build -o /in github.com/arbourd/concourse-slack-alert-resource/in", "7e9972a519783c85bef7a7646d4b7ad5": "RUN go build -o /out github.com/arbourd/concourse-slack-alert-resource/out", "667059bee3afb2de2cdb76b54b8d6d60": "COPY /check /opt/resource/", "7c792271964bb250dfeb2fa13399b7bf": "COPY /in /opt/resource/", "14fcab00fde61afad8dd50789dae4f74": "COPY /out /opt/resource/", "fdb6b59e4b93b57e3a789cd3d311e206": "FROM golang:alpine AS build-env", "99fa1c2885cc50edaf55c2e4e46fe464": "ENV BUILD_HOME=\"/go/src/github.com/RTradeLtd/Lens\"", "fca940fe977157cd991deb48729bcd03": "ADD . ${BUILD_HOME}", "b55d270ba3421c0fb844de85af2d2b2f": "WORKDIR ${BUILD_HOME}", "11ff44cac01a28e56505cefb6f19d1fd": "RUN apk add git", "d3438f2102416f206fdd50ab96942b94": "RUN go get -u -v github.com/RTradeLtd/RTFS", "5571dc8db5a222bb4a269bce92d6a829": "RUN go build -o /bin/temporal-lens ./cmd/temporal-lens", "005562cd36c27ef5ae2fb961a1467a05": "LABEL maintainer \"RTrade Technologies Ltd.\"", "25fb502ee1826bfecd826387783b7c5b": "RUN mkdir -p /daemon", "c0095ce526bbe9e54f37235c52ef5e60": "WORKDIR /daemon", "ce689068000f2369c1023c6d2a9a415c": "COPY /bin/temporal-lens /usr/local/bin", "89af16a85aa4bbccade77c0b2a61f8a5": "RUN mkdir /temporal mkdir -p /var/log/temporal", "7aa8ac1c983afd23e7398a22e6a572d6": "ENV CONFIG_DAG=\"/temporal/config.json\"", "283d5b54427be319ba1761252b5b8aeb": "COPY ./test/config.json /temporal/", "b19a13ec18da96800e373bf40b32a32d": "ENTRYPOINT [ \"temporal-lens\", \"server\"]", "018c424b6254f8ca5b1c02b9ae3419a6": "WORKDIR /go/src/github.com/eagraf/cloudworker", "66720cfcfa44d0452cfb2863aba745e8": "RUN go get -d -v ./...", "21297b95eaeb0e1d9b9293cfc5dc95fe": "RUN go install -v ./...", "1283b8ae1b5349695f62cccde7e557fe": "ENTRYPOINT CompileDaemon -log-prefix=false -build=\"go build\" -command=\"./cloudworker\"", "bfa8e61a95e76edc3add6d6f64677d54": "FROM golang:1.13-alpine as builder", "ed0d22d6b9e4e77d9948c0c3327f4551": "RUN adduser -D -u 1000 -h /home/user user", "e7a818ea2795b5e82c19e68a4af8efd7": "USER user", "12d80a3c9a3870b46c416f9e0acd6afd": "WORKDIR /home/user", "9fb0a7d5a50ccb2733de94ab34aa25c8": "RUN CGO_ENABLED=0 go build", "207290be2c7212bb37ccfa21c6776a09": "COPY /home/user/imago /usr/local/bin/", "ce38a8e718ac23fde5b02966f2fadd65": "RUN adduser -D -u 1000 user", "29fb0bdc0eeece5597d9913e23e70035": "ENV USER=\"user\"", "93cc49c3b40606134a40b076b93f7f8f": "ENTRYPOINT [\"/usr/local/bin/imago\", \"--kubeconfig\", \"/config\"]", "27586a518fe2224cd3a7f1482a76d2e2": "FROM golang:1.14.1 AS builder", "c1b9a9e7405d57908f0a2aceca622ea5": "ENV GOBIN=\"/go/bin\"", "68386c198ab9682958b108767d098c44": "WORKDIR /go/src/app/", "445944f48fe46f01f127d6629a63f443": "RUN mkdir mdencode", "f8ed8e2664666a488ce2445ab30f5830": "WORKDIR /go/src/app/mdencode", "1ba526232ed25067b145befe620d54d9": "RUN ls -lha /go/src/app/mdencode", "662903f6e23f871e6f67db596ac91e1e": "WORKDIR /go/src/app/mdencode/build", "8f15c9052d222f43d0474e058c64c516": "RUN make mdencode", "e7485724cd8077d2753be997725ea1be": "RUN make mdzip", "e250ed195ba6de19255575fcb3ee6f62": "RUN mdencode", "6fd7ca2ec6fd094313a1ac797b6e77f4": "RUN mdlist", "f6cfd32027626dce10b0c13c699106e9": "RUN mdzip", "102c9223d0ad98d0aa58e9f24da063af": "RUN go get -v -u github.com/golang/dep/cmd/dep", "b99d280cdf514ede7b7f454c726433eb": "COPY ./ /go/src/github.com/DynamicProxyEip", "3ea1290e8953085e429104b3619d7f0c": "WORKDIR /go/src/github.com/DynamicProxyEip", "036b6b2c1bc6e32b6f94f32e74722458": "RUN dep ensure -v", "9a2ec8010dad0044ae30d2820e617272": "RUN GO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -ldflags '-w -s' -o dynamicProxyEip", "2c8665232124d12c853af19a633c888b": "FROM alpine:3.9", "95a7323a9c15fbd28ca771535a82d8d1": "COPY /go/src/github.com/DynamicProxyEip/dynamicProxyEip /", "4b857495c36ad6fdb06e21bea786dce4": "ENTRYPOINT [\"/dynamicProxyEip\"]", "a1ec33db704273ef8b3bd6523ae9c3ea": "FROM golang:1 as build", "e10cf71f29f5082b18d7dfa099ea633e": "ADD . .", "a75dcbfd67756c8e93202368b8e9a0dc": "RUN go test -tags=\"gingonic\" -mod=vendor ./...", "ff44c939403052b051aab34ece08b353": "RUN GOOS=linux go build -mod=vendor -tags=\"gingonic\" -a -installsuffix cgo -o dora .", "b6ccbebec1ebc8e36a3b6d9ed47e2ec3": "FROM centos", "aacd10590ae84103bd60e1aacc354b33": "RUN adduser -s /bin/false dora", "88d92101fe781bcccd8a9db065cbcebc": "RUN mkdir -p /etc/dora", "440826ba4b611b9427aac4aa00297751": "COPY dora-simple.yaml /etc/bmc-toolbox/dora.yaml", "4f5d6222ae6b79d69c977f980a1ad51d": "COPY kea-simple.conf /etc/kea/kea.conf", "b6b5e1a3ea567c0d20b17e3f9cedb586": "COPY /build/dora /usr/bin", "f6e52f3c4745c5c22aff90e2cd115d86": "USER dora", "3e26c43b8190e86147342f7de8949bf7": "ENTRYPOINT [\"/usr/bin/dora\"]", "28a34024ea86a6d8ada8dbc61c7c61d3": "FROM golang:1.6", "f29cdb6cc5978ffcb9b6332418d1f7d7": "MAINTAINER Hugo Gonz\u00e1lez Labrador", "f9cdf9e9594c7dd4bb0714e1ec92d034": "ADD . /go/src/github.com/clawio/clawiod", "5873e130e7ef9f57cc1d0644a596240a": "WORKDIR /go/src/github.com/clawio/clawiod", "80280815100e98e701857487de44ffd9": "RUN go install", "bdee527d3dbe2f839ebc27493a39c8d0": "RUN mkdir /etc/clawiod/", "dce4fd40594e44246655a0ae80600244": "RUN echo \"{}\" > /etc/clawiod/clawiod.conf", "4c4a11b3686dcb3432cb33644df3bdb2": "CMD /go/bin/clawiod -config /etc/clawiod/clawiod.conf", "5c8f30e2c9742894107c9d496457315c": "EXPOSE 1502", "b0f5cd2f3335795a09d0067928c87b81": "FROM golang:1.13 AS build", "78ecaf775d63acb0f49c96ef6f655dc4": "COPY . /go/src/github.com/pirsquareff/dksweeper", "b342e022fd888d58a02ef6e03661c246": "WORKDIR /go/src/github.com/pirsquareff/dksweeper", "0ef62573fb59ec7a6fad3f2c15eb71e9": "RUN go get", "85812db8387f0cc939e2b36d0ab388b0": "COPY /go/src/github.com/pirsquareff/dksweeper/dksweeper /", "f75127366c474e2b183fac8b325fcd8a": "ENTRYPOINT [\"/dksweeper\"]", "c86433489b044fdc45c6b9b88ba09bef": "FROM golang:1.14.1-alpine3.11 as builder", "ef6210703d51d4e7468ab3fb0639a25a": "ARG CLOUDREVE_VERSION=\"3.0.0\"", "a74465f76b74069658f1a299f53ef62f": "WORKDIR /ProjectCloudreve", "ff30372c5733e4f0df8d6ee37683414d": "RUN apk add git yarn build-base gcc abuild binutils binutils-doc gcc-doc", "6a7038905e7933cf79e17f412bb2ec35": "RUN git clone --recurse-submodules https://github.com/cloudreve/Cloudreve.git", "ee795aa441e758a3dd28a466167c7dd9": "RUN cd ./Cloudreve/assets", "fc1b572a7cf70a85fd8755d34239522c": "RUN yarn install --network-timeout 100000", "e0e1de41f727068cb32c3989cd626dab": "RUN yarn run build", "d1eec38c2b7605dd4d6ac732effa2e68": "RUN cd ./Cloudreve", "b71d22211bb62814b55c1a4898d044cb": "RUN go get github.com/rakyll/statik", "218d1678a9b6f70171b3e20b5348f07a": "RUN statik -src=assets/build/ -include=*.html,*.js,*.json,*.css,*.png,*.svg,*.ico -f", "45d33140bd160d1425e74b94e7e8a2e7": "RUN git checkout ${CLOUDREVE_VERSION}", "6312657ef8cfc3be05c2306db04d4906": "RUN export COMMIT_SHA=$(git rev-parse --short HEAD)", "2ca2797b20abb2900be3567b68532da1": "RUN go build -a -o cloudreve -ldflags \" -X 'github.com/HFO4/cloudreve/pkg/conf.BackendVersion=$CLOUDREVE_VERSION' -X 'github.com/HFO4/cloudreve/pkg/conf.LastCommit=$COMMIT_SHA'\"", "88f1e2e252be7bf8a1f1bce97e7994cb": "ENV PUID=\"1000\"", "125e7704cda4f82c563d00e2be4b9dba": "ENV PGID=\"1000\"", "c3f86a559382bdaef4e497a5537eaedb": "ENV TZ=\"Asia/Shanghai\"", "08e9fb2c2bf95a4caebae15d0157cb0e": "LABEL MAINTAINER=\"Lones jay\"", "3823db5cef2c62248589db8421c1b32a": "WORKDIR /cloudreve", "0af1521738367a9b446dec602e081d69": "COPY /ProjectCloudreve/Cloudreve/cloudreve ./", "7095c82820a88b1d1d3c908f2e188d8d": "RUN echo \">>>>>> update dependencies\"", "ab8719ccd0bd54d9ea37477f143fd36c": "RUN apk add tzdata", "587e2d99bf378c16a59cd445f2b4b46d": "RUN echo \">>>>>> set up timezone\"", "25c942828c7b8ff353de6edd43d45a37": "RUN cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime", "b20c085d02d8104747dbe99ea90d141a": "RUN echo ${TZ} > /etc/timezone", "f10f4886a4b2d3172a34a6a7dbc9e98a": "RUN echo \">>>>>> clean up\"", "d450c9c047adba379ecd8a5e065b98eb": "RUN apk del tzdata", "cda60c479b62c53fb9fdf8351881a257": "RUN chmod +x ./cloudreve", "4549d06bbafc3f5f1b31efcdba732b11": "VOLUME [\"/cloudreve/uploads\", \"/downloads\",\"/cloudreve/conf.ini\", \"/cloudreve/cloudreve.db\"]", "3ae2440656bed120aa1a406d07bb5a32": "EXPOSE 5212", "e1f05803b4302376e6f3394870241888": "ENTRYPOINT [\"./cloudreve\"]", "549b4221bd25a608a36d590a1f104d30": "FROM golang:1.12.2-alpine3.9 AS build", "073c3710ee08daebb1162bf3d814e5cb": "WORKDIR /go/irma_bot", "01e0459f97387a5d68f9a29d1db3c18c": "COPY go.mod .", "9f147753b06e3e3a31a3e6b245d968d3": "COPY go.sum .", "5ee118e867a94a0f1905f2c419bbd3fa": "COPY main.go .", "b6b741fe066f2754cbebb86cfef6f010": "COPY settings ./", "5bfce62af339b94b627d9814393c1d06": "COPY storage ./", "b86562ef7f0b605f4b3d7a548ba66457": "COPY telegram ./", "0261daec7254f2f6c7e425ab43211deb": "COPY vendor ./", "5b350e7db289325a20dfb82b30726479": "RUN go build -mod=vendor -o /go/bin/irma_bot", "971e1c636041ba50eca84ee860ac368b": "COPY /go/bin/irma_bot /usr/local/bin/", "35d41f1f54de874fc692819d341c82d1": "COPY etc /etc/", "7499fe81fb489ee5339acc877debeebc": "RUN adduser -DH user", "ad82bbbb7bbf26ec25530618d71db4b9": "ENV IRMA_BOT_NAME=\"\" IRMA_DB_ADDR=\"\" IRMA_REDIS_ADDRS=\"\" IRMA_TELEGRAM_PATH=\"\" IRMA_TELEGRAM_PROXY=\"\" IRMA_TELEGRAM_TOKEN=\"\" IRMA_TELEGRAM_URL=\"\"", "ac5b1333afd1c601d569fe0628c8df21": "CMD [\"/usr/local/bin/irma_bot\"]", "f0dce3b216ae2a2454a1ae0b434f36c0": "FROM golang:1.11-alpine as build", "db1a2c5b38bd13b70ccb4b18304d4300": "ENV GOOS=\"linux\"", "4f451442c30d093a59dff91ceb5e76ba": "ENV GOARCH=\"amd64\"", "69fc7777f9f46cdbfad995909517c0de": "RUN go get -u github.com/asoorm/go-bench-suite", "06a465a2dec6a913e8700edb622735d9": "RUN cd /go/src/github.com/asoorm/go-bench-suite", "41c9b95e9426fb328a99baf6e1f383e6": "RUN git checkout --force $VERSION", "c6e710d8863ed86f560cec45e3f96d8b": "RUN go install -a -ldflags=\"-s -w\" .", "d215a3da64b9ef3f802d78c9ebd9e9d0": "ENV PORT=\"8081\"", "b6753f3f2b55c0eca1390b607d118222": "RUN adduser -D -g bench bench", "f8fcf018b330d082f7a0c43686414dbd": "USER bench", "de182221519d2180b182370129506cb0": "WORKDIR /opt/bench", "17f46503cbc897a7cc2d9428ba67ea84": "COPY /go/bin/go-bench-suite /opt/bench/", "9f9e2094a8902bfd05832fc50dbcacd7": "CMD [\"./go-bench-suite\"]", "672b841bf0023bd7016f1793dfafda7b": "FROM golang:1.12.5-alpine as builder", "d009a17939907ac47de54f05154dfc85": "WORKDIR /go/src/app", "a63a6a9f82d4a4a352e08221bdd55d6d": "COPY Gopkg.lock Gopkg.toml monohook.go /go/src/app/", "98ccd14a006c699d408e4c125b50ec23": "RUN apk add --no-cache curl git", "09bebe3e04fae30422e285c371b4d119": "RUN curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh", "f5bcdbff4f041e6d6092d2c5666cabcd": "LABEL maintainer=\"npm@alphahydrae.com\"", "7b9770b1ed0991026a4662c63bb58f41": "COPY /go/src/app/app /usr/local/bin/monohook", "9e8c9c739db85135b6b0bdca3fabd9b2": "ENTRYPOINT [ \"/usr/local/bin/monohook\" ]", "c36cf042af144b853daed78ee9280c01": "RUN go get -d -v github.com/tools/godep", "452b6b360a522968fb35ff787005ed09": "RUN go get -d -v k8s.io/client-go/...", "56e6c646f15b35f6cccbe973fd6147d8": "RUN git -C /go/src/k8s.io/client-go checkout v10.0.0", "b4c3015dd0afe3eeec7752491c739062": "RUN cd /go/src/github.com/tools/godep", "676467425c647e6a424116a3efe9bb5e": "RUN cd /go/src/k8s.io/client-go", "5f111655887068794c50188228552802": "RUN /go/bin/godep restore ./...", "a24633a9ce9cd506095f69e5cd845775": "COPY . /go/src/github.com/philpep/imago", "6f6c49643402a79a9fcda64ecafb1c16": "RUN CGO_ENABLED=0 go build /go/src/github.com/philpep/imago", "a02688bfb05c6d504089e3ba0b5282b6": "COPY /go/imago /usr/local/bin/", "46b690b12cab64cbae8f2c76c9a14b9d": "FROM golang:1.13-alpine AS build-env", "d82090e8f5b84834e39807237f5c363e": "ENV PACKAGES=\"curl make git libc-dev bash gcc linux-headers eudev-dev\"", "49ef71c74431194e4f1a7f57c04db43f": "ENV BRANCH=\"v0.2.6\"", "6203355bba831b0a59b1127f8987cb2e": "RUN apk add --no-cache $PACKAGES", "e4b734081cdfe7d0efa4fd535cdfb05a": "WORKDIR /go/src/github.com/terra-project/", "cf2e57d21b5ffe0f83e4084e0ffff449": "RUN git clone --recursive https://www.github.com/terra-project/core", "6d61d189116210bc42c9fe2ca3926d31": "WORKDIR /go/src/github.com/terra-project/core", "80ae605361693e8019b3c0e3a02843c5": "RUN git checkout $BRANCH", "244947ccce9f50214c3353cf04f277b2": "RUN make", "29e42bca57a7e045ebcbdb29cf034778": "FROM alpine:edge", "ab81b99fd95cc8fd70486d319e6560ed": "RUN apk add --no-cache --update ca-certificates supervisor wget lz4", "ddff6e021594e35d40ddd09ba38cf5ea": "RUN mkdir -p /tmp/bin", "aa8a646efc54f31ca53137c616ff83b3": "WORKDIR /tmp/bin", "ecac5d4ef5bb1b2a86d3c196190f4b9f": "COPY /go/bin/terrad /tmp/bin", "f7e0e987aa66947ae42e15d2b00385f7": "COPY /go/bin/terracli /tmp/bin", "5022b84b6ef501222ad1d25d3a59132f": "RUN install -m 0755 -o root -g root -t /usr/local/bin terrad", "42327dcb3fdcfe94f211caf889f53c77": "RUN install -m 0755 -o root -g root -t /usr/local/bin terracli", "5fb455aa3ef0f30979e869f4a2b15026": "RUN rm -r /tmp/bin", "b8e39ed3a712bf0e4cce3f2b0cc0672a": "RUN mkdir -p /etc/supervisor/conf.d/", "ec2aae506ff209aab14f310d7a53c105": "COPY /supervisor/supervisord.conf /etc/supervisor/", "812cc0417b762b96bcb77d4f268ceab2": "COPY /supervisor/conf.d/* /etc/supervisor/conf.d/", "a0be09f4cfb1da46985ed10cc249b7e2": "ENV TERRAD_HOME=\"/.terrad\"", "b7abb23077f9c5d7222ca4194c07dbc4": "WORKDIR $TERRAD_HOME", "10c849dc6319000461a11420e8b088e4": "EXPOSE 26656 26657 26658", "0b035d11e1a88dd28046cc82e60c109f": "EXPOSE 1317", "4d7d5520e7de05824dc697c749fc92c7": "ADD ./scripts/entrypoint.sh /usr/local/bin/", "761c44fc2c61ce51aae6bb73b96c8558": "RUN chmod u+x /usr/local/bin/entrypoint.sh", "642459413176164c6278f2ee1dc9e96a": "ENTRYPOINT [ \"/usr/local/bin/entrypoint.sh\" ]", "2ebfcc8fda7eb17b01d788e1ddc7a8fa": "STOPSIGNAL SIGINT", "c2a4d0a89723fb6c96c547671c03c968": "WORKDIR /go/src/eagraf/cloudworker", "74d419f49524e6910baa397512eb8124": "CMD [\"cloudworker\"]", "2651bc1cf99238e04c3fb5911fa2db5c": "LABEL maintainer=\"Leonardo Algeri\"", "4cb3c677af6394755f79ce842d4d388d": "COPY main.go ./", "4b56f5dffe995b4b9daf1ccabc892f14": "RUN go get -u github.com/go-sql-driver/mysql github.com/gorilla/mux", "ed78265833cf235031b369782f492418": "FROM debian:buster-slim", "710b500090451231edd1d9819ed8081c": "COPY /app /app/", "a5910a8c935c8383c669722b1fe111b5": "USER lavagna-go", "07377dd169793df2676c197ab7fc2e4a": "FROM golang:1.10", "7e7281a060626e69970bb4199c6a804b": "RUN mkdir -p $GOPATH/src/github.com/ahmdrz/instagraph", "6844c569a06e1372254201000884103a": "COPY . $GOPATH/src/github.com/ahmdrz/instagraph", "df7ddcd964e3540716c039fd4b7a56f2": "WORKDIR $GOPATH/src/github.com/ahmdrz/instagraph", "51015b6469160239ba061e32971b4491": "RUN go build -i -o instagraph", "5b83737731b938a792951962282cd003": "CMD [ \"./instagraph\" ]", "b69a77b70b066532dcd255926f756c9e": "FROM golang:1.12-alpine as builder", "b4bccd258d8e342fb149dcf701deb4e1": "WORKDIR /go/src/github.com/batazor/gitlab-agile", "2e7a552833ed10241758f1d8174e6033": "RUN apk add --update git", "b47e73587d435e771d599e2186413b2f": "RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -mod vendor -installsuffix cgo -o gitlab-agile ./cmd/gitlab-agile", "8477b1bf7381fb8ad1ee48bee818e655": "WORKDIR /app/", "6151cd2ca257ba9297ee82082b50e3e7": "COPY /go/src/github.com/batazor/gitlab-agile/gitlab-agile .", "3fddf9def30d775132809cfa45e4a94a": "CMD [\"./gitlab-agile\"]", "3eb2fe72c8036177b9da46c440a15587": "RUN apk add --no-cache git gcc musl-dev", "089ee857c107de2ba1d4ae40a136f371": "COPY builder.sh /usr/bin/", "bfdaea71dc4589c0c6d838b7dd274f68": "ARG version=\"v1\"", "fab10cbf6ef58c643459bd0c8bbf4e83": "ARG plugins=\"cache,cors,expires,realip,ipfilter,forwardproxy,webdav,dnspod\"", "b2004034501c2a146008f8c6535145c6": "ARG enable_telemetry=\"false\"", "ec8e955da7c0bcea1f978ab0bd9e079c": "RUN go get -v github.com/abiosoft/parent", "009961df2c9195e2dc57142755c5f669": "RUN VERSION=${version} PLUGINS=${plugins} ENABLE_TELEMETRY=${enable_telemetry} /bin/sh /usr/bin/builder.sh", "23cb2d7dc2e03bf46618f449b06967c1": "LABEL maintainer \"Jay Fong <fjc0kb@gmail.com>\"", "126c63b71439ded3c945cfaa72c5fa30": "ENV CADDY_VERSION=\"1.0.5\"", "e3d69a2f60a12d8c96eab19afec30b28": "ENV APPLICANT_EMAIL=\"\"", "862a02181356cb391d9f834ef5297e8e": "ENV CADDYPATH=\"/caddy/certs\"", "faf0b5f99ee6523ab134e43a4ef2e344": "RUN apk add --no-cache ca-certificates git mailcap openssh-client tzdata", "8031437d22cde0dfe150a6c17db95a61": "COPY /install/caddy /usr/bin/", "840bde7d16c5057c99785ae3380e4a86": "RUN /usr/bin/caddy -version", "8014f08f65eaf3ce209632d8bd376a0c": "RUN /usr/bin/caddy -plugins", "4b97c03ce0c0df2982a53129f0c90324": "EXPOSE 80 443 2015", "b963697c6aad6eaa2383fb0fdbcc6746": "WORKDIR /srv", "ef0ff1044d1f09bde4142039e6e76267": "COPY Caddyfile /caddy/", "ab2c7e029dffc84065e0b56053220fd1": "COPY index.html /srv/", "0ea5774ccfdc51b7ed79da2b830d338b": "COPY entrypoint.sh entrypoint.sh", "f8e77ec68485e15f905a40e83e0dae8e": "RUN chmod +x entrypoint.sh", "77353458439c89a5208d11c94588801a": "COPY /go/bin/parent /bin/", "d4991489808fc7c93c37852d4f747df4": "ENTRYPOINT [\"./entrypoint.sh\"]", "0bc612518df799c6d45b85a4dd748c60": "CMD [\"-conf\", \"/caddy/Caddyfile\", \"-log\", \"stdout\", \"-agree\"]", "e189c7621ff543724ee050e59df9bf9f": "FROM golang:latest AS builder", "728bd8b146dd0d7d40b1f235aef11632": "ENV GO111MODULE=\"on\" CGO_ENABLED=\"1\"", "499823a9fb9a9145299413980a5f0a43": "COPY /src .", "6bb703be055fd68e173836908c2860f8": "RUN CGO_ENABLED=0 GOOS=linux go build -a -ldflags '-s' -installsuffix cgo -o dcfeeder .", "c14b0d553a8777446366e8748ea42ad4": "WORKDIR /dist", "53beb2d30b5d50c6ad14c9203cc6ed56": "RUN cp /build/dcfeeder .", "a60f7a18040fd195e30866e95451e74c": "COPY /dist/dcfeeder /", "41e023e82060306c5ae6c742316c5472": "ENTRYPOINT [ \"/dcfeeder\" ]", "66c869997f06095c20c13494c21c0612": "WORKDIR /", "d8ce31f4c6ad10ae4841bd7aa25c5e62": "RUN git clone https://github.com/zshorz/shadowsocks.git", "9e0d259215e37e6d30edbb725f1a4f02": "WORKDIR /shadowsocks/", "90373d6a92b06fa7eb033b730e2f609e": "RUN GOPROXY=https://goproxy.io GO111MODULE=\"on\" go build -o server ./ss-server/", "f1dcbb7c96515ba25ab52a505f5ba0aa": "COPY /shadowsocks/server .", "4ed773e5e10fbd8d6456eefffb34c717": "ENTRYPOINT [\"./server\"]", "08866f3ced0b3eb1ad4b741ad69ef377": "ARG version=\"master\"", "0d886286ce1000aa5e40393c6e3dc8ae": "ARG plugins=\"cache,cors,expires,realip,ipfilter,dnspod\"", "3026adcb014c59c436af5e7cda3b93c7": "FROM golang:1.11 as go_builder", "5941f06f7ee0810d42793bfd95826087": "COPY . /go/src/github.com/malice-plugins/kaspersky", "3be463f14b7aaba90ef7f00e7adee48c": "WORKDIR /go/src/github.com/malice-plugins/kaspersky", "676c62f768451f66889337529d825afa": "RUN go build -ldflags \"-s -w -X main.Version=v$(cat VERSION) -X main.BuildTime=$(date -u +%Y%m%d)\" -o /bin/avscan", "72bc595eed15ea722d96b42203101000": "FROM ubuntu:bionic", "efb36e43965b8159ad9ea7f6286ec0fb": "LABEL maintainer \"https://github.com/blacktop\"", "12e49b522143ac79564358a6d1e6d2b6": "LABEL malice.plugin.repository = \"https://github.com/malice-plugins/kaspersky.git\"", "630c56adcad8ff2cbfe7d36656f22a73": "LABEL malice.plugin.category=\"av\"", "89fd8d9f8d1720d122145614f35345d3": "LABEL malice.plugin.mime=\"*\"", "8456e8acebef45fb33ce5e038487b574": "LABEL malice.plugin.docker.engine=\"*\"", "99fa10c092622020b31ce054ac561358": "RUN groupadd -r malice", "98aa9ec0b9df41fbf7124274965c6433": "RUN useradd --no-log-init -r -g malice malice", "7d6ea7ea69a8b2962d9b73d1ce75a3d8": "RUN mkdir /malware", "6a7b396fe680cf2b818ebc358b906281": "RUN chown -R malice:malice /malware", "4ad5ed578e30414a9f6af8ae7b628b88": "RUN apt-get install -yq locales", "5ff6ce1537613265ff7d23f5f095a256": "RUN locale-gen en_US.UTF-8", "3b3f5ae4998ee003303d642d322aa865": "ENV LANG=\"en_US.UTF-8\"", "a3a38f04e76236872b758eff449b09e0": "ENV LANGUAGE=\"en_US:en\"", "13536830da8a1b3782935f0497c93591": "ENV LC_ALL=\"en_US.UTF-8\"", "b8929cfe07e185a75c7b2edfb15a3cef": "ENV TERM=\"screen-256color\"", "e469c46be71b5253ba4442ea8878ab21": "ARG KASPERSKY_KEY=\"\"", "40b363cdcbe3ea0ba635271c9802868d": "ENV KASPERSKY_KEY=\"$KASPERSKY_KEY\"", "edc10f26499748eda3546da4f302ceca": "RUN if [ \"x$KASPERSKY_KEY\" != \"x\" ]; then echo \"===> Adding Avira License Key...\"; mkdir -p /etc/kaspersky/; echo -n \"$KASPERSKY_KEY\" | base64 -d > /etc/kaspersky/license.key ; fi", "49bab5ab85f19c57bb318480d50fea69": "COPY config/docker.conf /etc/kaspersky/", "4b9cc128ed56bcd9adb5316b98e2640f": "RUN buildDeps='ca-certificates libc6-dev:i386 unzip wget'", "25464db0e8fabb311da40cd240b96506": "RUN set -x", "82485f88377756a0df7dd45dafac9e49": "RUN dpkg --add-architecture i386", "707f73c4c57c7520cafc2e5ea183734f": "RUN apt-get install -yq $buildDeps libc6-i386 libcurl4-openssl-dev curlftpfs", "26ff522af6db8b391ef7bc64dd8901b4": "RUN echo \"===> Install Kaspersky...\"", "0fc7f584aaf5d93a9500f4c8c77581d6": "RUN wget --progress=bar:force https://products.s.kaspersky-labs.com/multilanguage/file_servers/kavlinuxserver8.0/kav4fs_8.0.4-312_i386.deb -P /tmp", "e930f407f5319d9f36c6c12ab109a2c1": "RUN DEBIAN_FRONTEND=noninteractive dpkg --force-architecture -i /tmp/kav4fs_8.0.4-312_i386.deb", "05445b3d80ce5c215d1d360dff89c526": "RUN chmod a+s /opt/kaspersky/kav4fs/bin/kav4fs-setup.pl", "9e73dfc83cf91b7d9f878f99938f68d0": "RUN chmod a+s /opt/kaspersky/kav4fs/bin/kav4fs-control", "35e1c14c0fc5f854b142a8ab5b686a6c": "RUN chmod 0777 /etc/kaspersky/license.key", "efc77f72ef76785adb737a9de69d5b4c": "RUN /opt/kaspersky/kav4fs/bin/kav4fs-control -L --validate-on-install /etc/kaspersky/license.key; sleep 3", "543e8e409031950922e9802d93986325": "RUN /opt/kaspersky/kav4fs/bin/kav4fs-control -L --install-on-install /etc/kaspersky/license.key; sleep 3", "3f11a00a5e3fec7d07b583be6c14f248": "RUN echo \"===> Setup Kaspersky...\"", "fb7bdaca47642a6c6657fdabc35d28ef": "RUN /opt/kaspersky/kav4fs/bin/kav4fs-setup.pl --auto-install=/etc/kaspersky/docker.conf; sleep 10", "df559d6367f306c059f5f4dc3a5c8217": "RUN echo \"===> Clean up unnecessary files...\"", "70695c4acbe532130cc588b991bc3efa": "RUN rm -rf /var/lib/apt/lists/* /var/cache/apt/archives /tmp/* /var/tmp/*", "35b7c6935773dfa7cf7d3ffab6b5cde7": "RUN apt-get update -qq", "a506d8dbbad71028c14cddf0415a5c02": "RUN apt-get install -yq --no-install-recommends ca-certificates", "7f29cc3902593138be8f4776684e6fea": "ADD http://www.eicar.org/download/eicar.com.txt /malware/EICAR", "ca8b619249b502c01de2adce73dd3be5": "COPY /bin/avscan /bin/", "c28d6d34fde8a287f4924a5486f95d5c": "WORKDIR /malware", "427a4c33a622c0cbd2998953d761970c": "ENTRYPOINT [\"/bin/avscan\"]", "c01909d1ce2f7b0555bfc2166678323b": "CMD [\"--help\"]", "8781d7b9735b77b1e25ee479eed6c154": "FROM golang:1.12.0-alpine3.9 as builder", "4a289611bd3c4825e43d26b8bcb71a0d": "ENV PATH=\"/tmp/bin:${PATH}\"", "2972a0df83a065e9f9c50b9187486a78": "RUN apk add --update --no-cache build-base curl git", "6a3b41269ffb7b6a7cf7b435a9235236": "ENV GLIDE_VERSION=\"0.13.2\"", "559fd2fdfaafaec70347b31b03e4d4ea": "RUN mkdir -p /tmp/glide", "f1882ff1540ea6b00d2e8420a85a91ba": "RUN curl -sSL https://github.com/Masterminds/glide/releases/download/v${GLIDE_VERSION}/glide-v${GLIDE_VERSION}-linux-amd64.tar.gz -o /tmp/glide/glide.tar.gz", "6178ac2c33d77d127222132e7f6b7c19": "RUN cd /tmp/glide", "c298e69a413f6025d589f6d7c5f8c51f": "RUN tar xvzf glide.tar.gz", "dc13f0aad8326f53db119c0d4ff04ace": "RUN cp /tmp/glide/linux-amd64/glide /tmp/bin/glide", "b774d4dda580b412060246bf00359b2f": "ENV DEP_VERSION=\"0.5.0\"", "762159825f5095f8101ea468e6f8a2a8": "RUN curl -sSL https://github.com/golang/dep/releases/download/v${DEP_VERSION}/dep-linux-amd64 -o /tmp/bin/dep", "6bf400c969bafc2c7464a3633462032b": "RUN chmod +x /tmp/bin/dep", "0c5d2aa976177e934426388a06ac54d5": "ENV GOLANG_PROTOBUF_VERSION=\"1.3.0\"", "68f82e23f74075462f9ee12d20893f01": "RUN GO111MODULE=on go get github.com/golang/protobuf/protoc-gen-go@v${GOLANG_PROTOBUF_VERSION}", "c1f352a7a518accadc35ca492938035a": "RUN cp /go/bin/protoc-gen-go /usr/local/bin/", "b3c18f2c36d40a55becbd941da2e24b1": "ENV GOGO_PROTOBUF_VERSION=\"1.2.1\"", "0a1aa5a0062663ce09142c933ff71397": "RUN GO111MODULE=on go get github.com/gogo/protobuf/protoc-gen-gofast@v${GOGO_PROTOBUF_VERSION} github.com/gogo/protobuf/protoc-gen-gogo@v${GOGO_PROTOBUF_VERSION} github.com/gogo/protobuf/protoc-gen-gogofast@v${GOGO_PROTOBUF_VERSION} github.com/gogo/protobuf/protoc-gen-gogofaster@v${GOGO_PROTOBUF_VERSION} github.com/gogo/protobuf/protoc-gen-gogoslick@v${GOGO_PROTOBUF_VERSION}", "f2dbb5fc5b1e00d77f1505f20b019f6b": "RUN cp /go/bin/protoc-gen-gofast /usr/local/bin/", "e8b064ab25575a4dd7a048d8d38fba31": "RUN cp /go/bin/protoc-gen-gogo /usr/local/bin/", "4f0aa52b5e077204f760602393269899": "RUN cp /go/bin/protoc-gen-gogofast /usr/local/bin/", "a328cab6c175022f27cd28c664dbb569": "RUN cp /go/bin/protoc-gen-gogofaster /usr/local/bin/", "93b2e38137ee4a76f86d04dcc45f352f": "RUN cp /go/bin/protoc-gen-gogoslick /usr/local/bin/", "fdc8071f569ba7368efcffae6768cab7": "ENV GRPC_GATEWAY_VERSION=\"1.8.1\"", "445ae2a23b3a73580acdd71171a4824a": "RUN curl -sSL https://github.com/grpc-ecosystem/grpc-gateway/releases/download/v${GRPC_GATEWAY_VERSION}/protoc-gen-grpc-gateway-v${GRPC_GATEWAY_VERSION}-linux-x86_64 -o /usr/local/bin/protoc-gen-grpc-gateway", "6af7eb41db21e551fe130c452748ce99": "RUN chmod +x /usr/local/bin/protoc-gen-grpc-gateway", "42c0c19b0bc9e80fce8734c772e67fb3": "RUN curl -sSL https://github.com/grpc-ecosystem/grpc-gateway/releases/download/v${GRPC_GATEWAY_VERSION}/protoc-gen-swagger-v${GRPC_GATEWAY_VERSION}-linux-x86_64 -o /usr/local/bin/protoc-gen-swagger", "38d2da11125d27f61c681c9eca48affb": "RUN chmod +x /usr/local/bin/protoc-gen-swagger", "ff6bf0882cda9664ec29329df4a73296": "ENV GRPC_WEB_VERSION=\"1.0.3\"", "98a1762f7e099dfc5e61031057c6e1e6": "RUN curl -sSL https://github.com/grpc/grpc-web/releases/download/${GRPC_WEB_VERSION}/protoc-gen-grpc-web-${GRPC_WEB_VERSION}-linux-x86_64 -o /usr/local/bin/protoc-gen-grpc-web", "8d23fd279322785f1f7021e661dc2a27": "RUN chmod +x /usr/local/bin/protoc-gen-grpc-web", "4b81a0ef4d30ac9ce5c52bc03545e45e": "ENV YARPC_VERSION=\"1.36.2\"", "925b06a3357b9d0a3c7e75590ba6ff6d": "RUN git clone --depth 1 -b v${YARPC_VERSION} https://github.com/yarpc/yarpc-go.git /go/src/go.uber.org/yarpc", "25f447833297e1997224b31999a9311c": "RUN cd /go/src/go.uber.org/yarpc", "9a844417a9fae78914f1676a16dc6bca": "RUN glide install", "7f9c51b17990005f4638b0105d812928": "RUN go install ./encoding/protobuf/protoc-gen-yarpc-go", "d769a7ad7342832dba71c06942398ea8": "RUN cp /go/bin/protoc-gen-yarpc-go /usr/local/bin/", "37be2dc3ab46bbba3344f9bfa70d27f0": "ENV TWIRP_VERSION=\"5.5.2\"", "33a30bab7c7a233570a7d8d047583760": "RUN git clone --depth 1 -b v${TWIRP_VERSION} https://github.com/twitchtv/twirp.git /go/src/github.com/twitchtv/twirp", "eec21c0d9be2d59f6b1f27b2badbbd39": "RUN cd /go/src/github.com/twitchtv/twirp", "3ba2259f8d2f18c19d463ca74e59a71b": "RUN go install ./protoc-gen-twirp ./protoc-gen-twirp_python", "eef361f94e6a865661b65a7b3b8aa994": "RUN cp /go/bin/protoc-gen-twirp /usr/local/bin/", "5d9c9b2f8c17aa2f670914e10735446e": "RUN cp /go/bin/protoc-gen-twirp_python /usr/local/bin/", "fcbfdea6bf9451ce9c2292262bae96d6": "ENV PROTOBUF_VERSION=\"3.6.1\"", "002bc84a1710404c8a2550c097f46916": "RUN mkdir -p /tmp/protoc", "110da839671a05f3495f297db1cb337c": "RUN curl -sSL https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOBUF_VERSION}/protoc-${PROTOBUF_VERSION}-linux-x86_64.zip -o /tmp/protoc/protoc.zip", "95f79e6b4137854b57dd121b1197d1a1": "RUN cd /tmp/protoc", "a3a2f6ee987da08531a36357b4cfd2f8": "RUN unzip protoc.zip", "9173ef151bdcbf45a99be21601a04917": "RUN cp -R /tmp/protoc/include /usr/local/include", "861f8160d21249428bd2b0bbad07f52e": "RUN mkdir -p /tmp/prototool", "793a4c591e1fde8f7eba3a0a84996ef8": "COPY go.mod go.sum /tmp/prototool/", "5307b0a248c36a3e66b245149fe3c3b4": "RUN cd /tmp/prototool", "708756263148a40546219ff5c9335417": "COPY cmd /tmp/prototool/", "77d1f10ab1a2ab4be9d4abedb04e51fe": "COPY internal /tmp/prototool/", "bb27048c5fe7b261f91a48ebd7af3d8d": "RUN go install ./cmd/prototool", "170154d3ad8accb037b1be1708d34a39": "RUN cp /go/bin/prototool /usr/local/bin/prototool", "70fa0e1bccb5dbb5d5301ee5fbdadf2b": "RUN echo 'http://dl-cdn.alpinelinux.org/alpine/edge/testing' >> /etc/apk/repositories", "9c3818f1f6a2b738e7ca92f0cab04eba": "ENV PROTOTOOL_PROTOC_BIN_PATH=\"/usr/bin/protoc\"", "df19dec1469ade60c4dc9980ebd0f2ab": "ENV PROTOTOOL_PROTOC_WKT_PATH=\"/usr/include\"", "5dfe9cf609496db309fa7c83b3fb059e": "ENV GRPC_VERSION=\"1.18.0\"", "fd61b4ebaf1e0c855b234b9fbb400376": "ENV ALPINE_GRPC_VERSION_SUFFIX=\"r0\"", "651740b2281bf46d8a6dddf66eb62db7": "ENV ALPINE_PROTOBUF_VERSION_SUFFIX=\"r1\"", "e218ffd293d551f1e71321b751c35eaf": "RUN apk add --update --no-cache bash curl git grpc=${GRPC_VERSION}-${ALPINE_GRPC_VERSION_SUFFIX} protobuf=${PROTOBUF_VERSION}-${ALPINE_PROTOBUF_VERSION_SUFFIX}", "96a8e56eb1ea8e6913d85493c600d676": "COPY /usr/local/bin /usr/local/", "ff68e23d36ac9b46830d0dc4155ab853": "COPY /usr/local/include /usr/", "b00db9861c62574a0319a92e8854184d": "WORKDIR /work", "0d58b28888495bb67205817eebbad57b": "FROM golang:1.14-alpine", "163e8b03d2e8d30aa190b23f369bff40": "LABEL maintainer=\"rzrbld <razblade@gmail.com>\"", "613ec66d947c4144f2198388bac90e96": "ENV GOPATH=\"/go\"", "b50ff70bd81e030abaffe378cfb8f800": "ENV GOPROXY=\"https://proxy.golang.org\"", "673779ca8a8cbe9a077c5fd3b60d8792": "RUN git clone https://github.com/rzrbld/adminio-api", "f27a785af0fd2dbaa1934ec125eac26c": "RUN cd adminio-api/src/", "110a3fbfed27e730d68c7d5402635b40": "RUN go build main.go", "a77b62f72e8773020fa3cc884c4e3b49": "RUN cp main /go/bin/adminio", "be6b75ec7aea55be2f1e14913f4ed103": "COPY /go/bin/adminio /usr/bin/", "aaf7df86cacdc16b16e477ee3718339b": "RUN apk add --no-cache ca-certificates 'curl>7.61.0' 'su-exec>=0.2'", "487de595bbc6c576f70138c4c36e9ca7": "RUN echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf", "8c022463303ba2d887cb8d987fa0c569": "CMD [\"adminio\"]", "fa30fb4475fdf424e3029bbc6ec128fd": "FROM golang:1.11-alpine3.8 as builder", "33d43c3b164daf5f8f8c6592e46b1599": "ARG GIT_VERSION=\"2.18.1-r0\"", "40fd787505cc84d0c8301409b3f3601d": "RUN apk add git=${GIT_VERSION} --no-cache", "c198104e41f08618700b4a5c5878b729": "RUN mkdir -p /go/src/akamai-ip-range", "58e0c559b061f714687721b40fe10089": "WORKDIR /go/src/akamai-ip-range", "8f6282980735b05e0e25984182fb0b4b": "COPY app.go /go/src/akamai-ip-range/", "68bb44ad299b760f87980f8e8792f3f4": "RUN go get -d -v .", "754dc2b29ac6f707d76ad2ec68f0634f": "RUN go build -o /go/src/akamai-ip-range/akamai2aws /go/src/akamai-ip-range/app.go", "0d022b32cc5f49a73813491d2e5c8a38": "ARG CA_CERTS_VERSION=\"20171114-r3\"", "1c3c564d8fa5aec174d4fc82bf366d88": "ARG BASH_VERSION=\"4.4.19-r1\"", "de72e9f0d0d03ba00b286d18c473bbd0": "RUN apk add bash=${BASH_VERSION} ca-certificates=${CA_CERTS_VERSION} --no-cache", "af24d72262b19aa43fc9599012429f61": "COPY /go/src/akamai-ip-range/akamai2aws /app/", "133d58f0a30957bab03e3907a65a6a8f": "COPY init.sh /app/", "fde4215f1aed29b923342579bf2a5be5": "ENTRYPOINT [\"/app/init.sh\"]", "70b29dcd7736c6f16dafd9a89b8bf94a": "FROM golang:1.14.0-alpine3.11 AS build", "88ae44bb0c13ff236a14eec9c8c00976": "ENV XDG_CACHE_HOME=\"/tmp/go-build\"", "60e0526daa4a485c9831d1d0a57d8f3e": "RUN apk add --no-cache git curl", "66226c70fc22ddc582da83ece444101a": "RUN go get -u github.com/onsi/ginkgo/ginkgo@v1.11.0", "9c9661a38716df5e9e979d09de5a7106": "RUN curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.23.7", "4699776f05817686673515c33e0a1550": "RUN go get -u github.com/golang/protobuf/protoc-gen-go@v1.3.5", "7efdb22f9925b5cb025cfeea7fb122c1": "RUN go get -u github.com/micro/protoc-gen-micro/v2@v2.0.0", "9773798fe49d72d1276214132515a906": "RUN export MICRO=micro-v2.2.0-linux-amd64.tar.gz", "13255660b5cdc0895df34eb11c09b479": "RUN wget https://github.com/micro/micro/releases/download/v2.2.0/$MICRO", "675f5ca643e3cf6745778bf38e9ecbce": "RUN tar zxvpf $MICRO", "80c5c135a59b83e933c1d36ff229a1a1": "RUN mv ./micro /go/bin/micro", "a8df443804d4fcc9afb895879dbe0c5c": "FROM golang:1.14.0-alpine3.11", "814d7be68218ed048a81090421a34832": "COPY /go/bin/ginkgo /bin/", "784cc77f9602a3fe025de7c53e27309f": "COPY /go/bin/golangci-lint /bin/", "2e78fd3a7cbf5ab7899ac72ab05fc732": "COPY /go/bin/protoc-gen-go /bin/", "fee841f5feec36460221ab568e5f4a4e": "COPY /go/bin/protoc-gen-micro /bin/", "b5aa4758820487f40ba5d10947bcb283": "COPY /go/bin/micro /bin/", "7f77b357f343abf9f153b321c90d82e4": "RUN apk add --no-cache protobuf git make", "893260058d599a1723f130a1292cc836": "FROM golang:1.11", "f5e6df44673cc6fc128b179db090da95": "LABEL maintainer=\"Anders Kvist <anderskvist@gmail.com>\"", "dcb7f7aa194b2ee125cb583dc1ae9098": "WORKDIR $GOPATH/src/github.com/anderskvist/DVIEnergiSmartControl", "c4bed58fcb8960ce9aa609aee599ec47": "RUN go install -ldflags \"-X github.com/anderskvist/GoHelpers/version.Version=`date -u '+%Y%m%d-%H%M%S'`-`git rev-parse --short HEAD`\" -v ./...", "bbc7bf3ec4d629dfe284c81973dae2b9": "CMD [\"DVIEnergiSmartControl\",\"/config.ini\"]", "f2304cdae313736be3affa246478728e": "FROM golang:stretch", "232f8032ab5b08cd6265e114f8d700e8": "ADD https://github.com/golang/dep/releases/download/v0.4.1/dep-linux-amd64 /usr/bin/dep", "4c1cb26259ce409948e73a2afb8bd907": "RUN chmod +x /usr/bin/dep", "008a01b8505eeef6e12a4225d0b8e795": "WORKDIR /go/src/github.com/nfons/deckhand", "a8bf7d0487a5082e26d08f8e9da96d3d": "RUN rm -rf .git/", "27792fa9a43b91a3fafb80261b6cf0f4": "RUN go build -o deckhand", "673d6bf0dc56b035ab6360b668636262": "ENTRYPOINT [\"sh\", \"-c\", \"ssh\"]", "5460135f542037bf6d1a05534fd2f517": "LABEL maintainer=\"daryl.n.w.k@gmail.com\"", "d7eefcf4c5e8288bf995c38fb918b948": "ENV PATH=\"${GOPATH}/bin:$PATH\"", "d201821beeb55205bdb2bea6420df2c7": "RUN go get golang.org/x/lint/golint github.com/aws/aws-sdk-go github.com/aws/aws-dax-go github.com/antlr/antlr4/runtime/Go/antlr github.com/aws/aws-lambda-go/lambda github.com/awslabs/aws-lambda-go-api-proxy/handlerfunc github.com/aws/aws-xray-sdk-go/... github.com/stretchr/testify github.com/gusaul/go-dynamock go.uber.org/zap github.com/satori/go.uuid github.com/asaskevich/govalidator github.com/gomodule/redigo/redis github.com/rafaeljusto/redigomock github.com/hubcash/cards github.com/newrelic/go-agent github.com/reddotpay/awskms github.com/reddotpay/redis github.com/reddotpay/logger github.com/reddotpay/api github.com/reddotpay/retry github.com/reddotpay/currency github.com/reddotpay/metrics github.com/gorilla/schema github.com/pariz/gountries golang.org/x/net/context/ctxhttp github.com/hashicorp/go-retryablehttp github.com/gianebao/n36 golang.org/x/oauth2/clientcredentials github.com/jinzhu/copier github.com/google/go-querystring/query golang.org/x/text/encoding golang.org/x/text/encoding/charmap golang.org/x/text/encoding/htmlindex golang.org/x/text/transform gopkg.in/go-playground/validator.v9", "a0ea4ea5513fb86464e3bcf9a5391611": "RUN curl -O https://bootstrap.pypa.io/get-pip.py", "602c3f73a24b5e1e8ecf2da054a085c6": "RUN python get-pip.py --user", "afacf0ea1b2d50e9de22738b1e6a548e": "RUN ~/.local/bin/pip --version", "af09539322969bb2cc5fbd8512a2e6fd": "RUN ~/.local/bin/pip install awscli --upgrade --user", "f29983d9d6d8d43d211e4a309956b91a": "RUN ~/.local/bin/aws --version", "9a675eda229c14a787b8d75b1d6ad94e": "RUN apt-get install jq -y", "e4542ea0cf89996bfdd551aa89591b90": "RUN apt-get install zip -y", "3ef94da3cd0803f1e5e6c66218ce1adf": "RUN curl -L -s https://github.com/golang/dep/releases/download/v${DEP_VERSION}/dep-linux-amd64 -o $GOPATH/bin/dep", "bbc624722e62ca8777efadc95d81a273": "RUN chmod +x $GOPATH/bin/dep", "b9b1de8837e8d957ae7a31292387c8bc": "ENV PATH=\"$PATH:~/.local/bin:$GOPATH/bin/dep\"", "10ddb22d5fd8abfbb7199e42fd7d3d73": "ARG BUILD_DATE=\"\"", "74ebab9b6def1d5fc786aa79b343841c": "ARG VCS_REF=\"\"", "0eadb9ffdd3924b622eeb746a199ec4e": "RUN apk add --no-cache git gcc musl-dev make", "6730d9155f6cdd2419d096028beab543": "WORKDIR /go/src/moul.io/anonuuid", "472f1f0ce93e353cbeb50f40acea961e": "COPY go.* ./", "def7ecfbf74c672726ed3ad813b193ca": "RUN make install", "cc9a0e5516ee5b234b2d50252a9c0523": "LABEL org.label-schema.build-date=$BUILD_DATE org.label-schema.name=\"anonuuid\" org.label-schema.description=\"\" org.label-schema.url=\"https://moul.io/anonuuid/\" org.label-schema.vcs-ref=$VCS_REF org.label-schema.vcs-url=\"https://github.com/moul/anonuuid\" org.label-schema.vendor=\"Manfred Touron\" org.label-schema.version=$VERSION org.label-schema.schema-version=\"1.0\" org.label-schema.cmd=\"docker run -i -t --rm moul/anonuuid\" org.label-schema.help=\"docker exec -it $CONTAINER anonuuid --help\"", "6f238e598e974764d0d17109c29f0874": "COPY /go/bin/anonuuid /bin/", "06296bd156dcc988a45b3d0d640a2d1c": "ENTRYPOINT [\"/bin/anonuuid\"]", "ee9150b371863231fe994d76c6f3b673": "RUN go test -mod=vendor ./...", "707f8482d6676f05a6b1784e480631be": "RUN CGO_ENABLED=0 GOOS=linux go build -mod=vendor -o actor .", "0126c1324367ef8dc430ac46f04c73ab": "RUN adduser -s /bin/false actor", "5929196ea5e0ec3d8c147d189bbfda7d": "COPY actor.sample.yaml /etc/bmc-toolbox/actor.yaml", "8785091b13293f411ab9cfd310dd6e73": "COPY /build/actor /usr/bin", "ab834a6d3c8858cd4a6cc8ccd79e9607": "USER actor", "f78a902f15a52d383d166fc811e4ec5d": "ENTRYPOINT [\"/usr/bin/actor\"]", "9b1e47fe5a3c0c60d790640ba44346af": "FROM golang as builder", "406f940ddc62c35d64ca60dd7b9b2961": "RUN go get -u -v github.com/klauspost/asmfmt/cmd/asmfmt github.com/derekparker/delve/cmd/dlv github.com/kisielk/errcheck github.com/davidrjenni/reftools/cmd/fillstruct github.com/mdempsky/gocode github.com/stamblerre/gocode github.com/rogpeppe/godef github.com/zmb3/gogetdoc golang.org/x/tools/cmd/goimports golang.org/x/lint/golint github.com/alecthomas/gometalinter github.com/fatih/gomodifytags golang.org/x/tools/cmd/gorename github.com/jstemmer/gotags golang.org/x/tools/cmd/guru github.com/josharian/impl honnef.co/go/tools/cmd/keyify github.com/fatih/motion github.com/koron/iferr", "fd205d1d6a7e54d6ac0faba577819efa": "COPY /go/bin /go/bin/", "871ec95f49538911a1478b652bc2756d": "COPY xterm-256color-italic.terminfo /root", "106375c266fdc1732110589c0d3fcf8a": "RUN tic /root/xterm-256color-italic.terminfo", "ab31173c340b5d594ece654fcd012905": "ENV TERM=\"xterm-256color-italic\"", "e80e6e213525216cfb0409309424319d": "RUN apt install -y apt-transport-https ca-certificates gnupg2 software-properties-common", "ffe53b579c0f4a8e640ea5d5332d44c0": "RUN curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -", "a757c9057ed30fbd063bf7a7b6d6f16b": "RUN add-apt-repository -y \"deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable\"\"\"", "57389a1d257f9c07d39682c67bcfd401": "RUN apt install -y docker-ce", "344313db90f1da735511c9a0245813be": "RUN curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim", "238460ef43bf419d5d86aa3dc1b5fe38": "RUN apt install -y task zsh tmux vim-nox openssh-server", "3874e889b37f325f51e3d614d6cb8b3c": "RUN chsh -s /usr/bin/zsh", "70b421da1aa8460c17f9aecefae75e02": "RUN git clone https://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh", "a0bb4e6ddd7e1e13882dc967dd391ed7": "RUN git clone https://github.com/zsh-users/zsh-autosuggestions.git ~/.oh-my-zsh/plugins/zsh-autosuggestions", "ea2dcd97a0fdf73599c48204a24ade83": "RUN git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/plugins/zsh-syntax-highlighting", "cab731c477cdc4f391c14e228ee7d833": "RUN git clone https://github.com/bluebrown/dotfiles.git ~/dotfiles", "d542a83229177d596c745d1d1bbeface": "RUN /bin/bash -c \"source ~/dotfiles/fiddle.sh\"", "d5c7fbc446cf5f26113aaf3e1434b62c": "RUN mv ~/dotfiles/gitconfig ~/.gitconfig", "3637c1eb04c54027ba2a7f2851d0180a": "WORKDIR /go/src/github.com/bluebrown/", "b09fe07b41266333f332f022c64e1413": "EXPOSE 22", "0c2936d3ab0598597bde5f65c8e1dab0": "FROM golang:1.12-alpine3.10 AS build", "62364fd87f4cebcd0687bdf06d555479": "COPY . /usr/src/github.com/wuvt/slack-hooks", "7730acb11d3ae1ef5b1c3a7f5f467ec9": "WORKDIR /usr/src/github.com/wuvt/slack-hooks", "c126c4d9694d3c8898bce411eac5541f": "RUN apk add --no-cache --virtual .build-deps git", "456e58050320c7d2f19095da5739301a": "RUN go get -v .", "98f82e97fdade7d0082fbe4369c7876c": "RUN apk del .build-deps", "39951339de2aca49373ba6bc5461c01c": "COPY /go/bin/slack-hooks /usr/local/bin/", "7374c1c069c15e7397111e7390ce793b": "USER nobody", "e752ecb8618f1176c3a7e731029a805b": "ENTRYPOINT [\"/usr/local/bin/slack-hooks\"]", "ada61a26c21f218b65fc764c8d25a5de": "RUN GOOS=linux go build -mod=vendor -ldflags '-extldflags \"-static\"' -tags=\"gingonic netgo osusergo\" -a -installsuffix cgo -o dora .", "a5e0834456e096b58934015cd2f1be03": "FROM golang:1.7", "a9023debd8de326739d8d1c57a725d9b": "ADD ./bin/dialer /go/bin", "635ff10c89086b1ea52ba00bbd80a767": "ARG revision=\"\"", "fbb8936609b61846adc24c540099b072": "LABEL maintainer=\"Weaveworks <help@weave.works>\" org.opencontainers.image.title=\"dialer\" org.opencontainers.image.source=\"https://github.com/weaveworks/scope/tree/master/extras/dialer\" org.opencontainers.image.revision=\"${revision}\" org.opencontainers.image.vendor=\"Weaveworks\"", "a127b5404fa9ce963fcf1671001294ce": "FROM golang:1.10 as builder", "e15f034d4f83853dcdcbd79cf0f67b6b": "RUN echo \"installing required packages\"", "7f45edc9f64f9713281f8f6fa27a4971": "RUN go get -v -u github.com/alecthomas/gometalinter", "7db32c5c99990966e8eace7ced72b0bc": "RUN gometalinter --install", "8ae122b11d21020326e437b136f6f1b4": "WORKDIR /go/src/github.com/vistrcm/statcollector/", "1871acdf0a682b70415c8ba2764b692c": "COPY ./ .", "f0a5342714c4c0021885601764bbd0d4": "RUN echo \"installing deps\"", "d7a02b0357decb7cf215849ccc85027f": "RUN echo \"let'd do some linting\"", "ec487e22287f1be7cdaafb2fdbfdc714": "RUN gometalinter --vendor ./...", "015f24e59ba4a0182d5422e84a0e3268": "RUN GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -a -o statcollector .", "95b72dfe3c18e40bb9eb57d0d46f301d": "WORKDIR /root/", "2d8a95771e3c4a48993682f1d46141e3": "COPY /go/src/github.com/vistrcm/statcollector/statcollector /usr/local/bin/", "8e2c177ffe0b5c6d4bfc07f670ad2844": "ENTRYPOINT [\"statcollector\"]", "9408b3e77f5cc4d9e49b3231e29ce67b": "WORKDIR /go/src/app/mdencode/", "482beaf80a8312d9337c6f4e6e362600": "WORKDIR /root/cloud-torrent", "195801605c55c6f26b7aa116604cabeb": "ENV PATH=\"$HOME/go/bin:$PATH\"", "c32e796747016aadd2ccbfd3e5f6e5c0": "RUN git clone https://github.com/sashithacj/torrentfast.net.git .", "fda9564a1683cd0938f40fc6e910f77f": "RUN go get -v -u github.com/shuLhan/go-bindata/...", "48a67d0d888c1a7bad320d2d9b2c306b": "RUN go get -v -t -d ./...", "c1ef07b6949b97072b8dc2ce0aaa1923": "RUN cd static", "cc409b220771737ed58df1880a5b76ad": "RUN sh generate.sh", "341a7c4f2c76dec2bdcd8bda68745cd6": "ENV GO111MODULE=\"on\" CGO_ENABLED=\"0\"", "c2161aa922aa54fb53fcc1595f24bdbe": "RUN go build -ldflags \"-s -w -X main.VERSION=$(git describe --tags)\" -o /usr/local/bin/cloud-torrent", "654debd23c9fb8d548df0c00d2e150f3": "COPY /usr/local/bin/cloud-torrent /usr/local/bin/", "1998e7cb5f2ba347b989c1965d7fb779": "ENTRYPOINT [\"cloud-torrent\"]", "bbe6d9867b75bdc1c31d05ce6c90f466": "FROM golang:1.13-alpine3.10 as builder", "cea8e291f18113451539633a1c702294": "LABEL maintainer=\"Takeru Sato <type.in.type@gmail.com>\"", "6e42aeab2bcbcf4f5a886ea99768ff41": "ENV GEOIP_UPDATE_VERSION=\"4.2.2\"", "5151bd1169505f62af7747ea900451a9": "ENV SRC_DL_URL_PREF=\"https://github.com/maxmind/geoipupdate/archive\"", "21e99506c800c92e21455e8608eabec5": "ENV SRC_PATH=\"/go/src/github.com/maxmind/geoipupdate\"", "916c51d49fa0660369b42d62e989c11c": "RUN mkdir -p /go/src/github.com/maxmind/", "885e771b97131f02c2e884f15b2f0bf6": "RUN apk add --update --no-cache curl gcc make libc-dev git", "5182f93740a2608bf0905c7bbfd4d044": "RUN curl -L \"${SRC_DL_URL_PREF}/v${GEOIP_UPDATE_VERSION}.tar.gz\" | tar -zxC /go/src/github.com/maxmind/", "81477bf84a362c59e95b45ed73850b58": "RUN mv \"${SRC_PATH}-${GEOIP_UPDATE_VERSION}\" /go/src/github.com/maxmind/geoipupdate", "6e84a6d72834b1df7322296ef18d7ed4": "RUN cd \"${SRC_PATH}\"", "087305d166f206d66ae9179d0383d0dc": "RUN make build/geoipupdate", "16b2e87a7ebe29a185d4aa6747e56475": "RUN curl -L \"https://github.com/gliderlabs/sigil/releases/download/v0.4.0/sigil_0.4.0_$(uname -sm|tr \\ _).tgz\" | tar -zxC /usr/local/bin", "d9fe5658b0afb4ef691c8aedce4083b1": "ENV GEOIP_CONF_FILE=\"/usr/local/etc/GeoIP.conf\"", "384851a41393b679aa9a618746a82b8a": "ENV GEOIP_DB_DIR=\"/usr/share/GeoIP\"", "b220786e3617abf89249019a4a712e67": "ENV SCHEDULE=\"55 20 * * *\"", "3f4586190aa903ba0e1700f71f3ebb2d": "COPY GeoIP.conf.tmpl ${GEOIP_CONF_FILE}.tmpl", "f485166c507d26c61d1f60d66e86fe67": "COPY run-geoipupdate /usr/local/bin/", "5831bededd68475d9471e952ebadadc9": "COPY run /usr/local/bin/", "5fc2a4c7968f58786a9bf31aa6a5152c": "COPY /go/src/github.com/maxmind/geoipupdate/build/geoipupdate /usr/local/bin/", "3e5ef1117f18b357cc255ef89f24a7c0": "COPY /usr/local/bin/sigil /usr/local/bin/", "54b0dd8f03c5de4a9505084ae4ddc7d8": "RUN apk add --update --no-cache ca-certificates", "a29cf56b9c7a7972619a3963231e1c4f": "CMD /usr/local/bin/run", "d746aacc44ff9511aef7de765a33d19d": "FROM golang:1.10-stretch as builder", "b4d60ea99c129e9653934924e12743d8": "MAINTAINER Open Networking Foundation <info@opennetworking.org>", "9ed41e625a512ad5a86eafb9aded2cde": "WORKDIR /go", "83b1ba6117c9b78e64d5074bea231599": "ADD . /go/src/gerrit.opencord.org/sadis-server", "2a533593df2d6835b8e6cf19cff66f71": "RUN CGO_ENABLED=0 GOOS=linux go build -o /build/entry-point gerrit.opencord.org/sadis-server", "81ea84fde09ebe4bef4fc6caf82dd18b": "COPY /build/entry-point /service/", "f7f9e1bdbc7cda5871beadefec801c1f": "WORKDIR /service", "4835778a6ea62a9805d03f8647e831f3": "ENTRYPOINT [\"/service/entry-point\"]", "80bcb6becfd73aa413434126a78b951f": "FROM golang:1.12-alpine as go-builder", "010bd9d1f60e4baae1feb5d8b0152939": "WORKDIR /go/src/github.com/in4it/roxprox", "5c79ac46a54668b1b23607949b04cc0f": "RUN apk add -u -t build-tools curl git", "9b6a1fa89873514fbd0829ffb4276678": "RUN apk del build-tools", "44e5730b9eed5340a61a9e7977e33e35": "RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o envoy-control-plane cmd/envoy-control-plane/main.go", "6f2ee5b3244ec2f83788bea283861263": "RUN apk --no-cache add ca-certificates bash curl", "294fa401fb025689bf7087cc0936fab4": "COPY /go/src/github.com/in4it/roxprox/envoy-control-plane .", "6b1a421bafc68ee9a50abf2dee9cd0b2": "ENTRYPOINT [\"./envoy-control-plane\"]", "97ba2f60f18d515ad6d0e223804f875a": "FROM golang:1.12-stretch as builder", "e604fa21b4fbbdf3f624f0a6783dcf56": "RUN make all", "43da003fccb91fdcf0174585c1925b98": "RUN apk --update add ca-certificates", "9f6b7aa2b44115b948a8c40d0e75c88f": "ARG BINARY=metal-cloud-controller-manager", "ace01b4fafabf100cf4c062195f7050b": "COPY /work/bin/${BINARY} ${BINARY}", "a8ad41831eb41c866f3be51132c0829e": "CMD [\"./metal-cloud-controller-manager\"]", "af1d11af80e31ef236e5fcae25324117": "WORKDIR /go/src/drone/main", "cbbda960d224cd227b2cd69f21faba7f": "ENV HELM_LATEST_VERSION=\"v2.16.1\"", "66dd442258bb9683127c652e60fb70e7": "RUN apk add --update ca-certificates", "cc2c7f3e68e17c15e9c8c0748d3f12dd": "RUN apk add --update -t deps wget git openssl bash", "f89c766d437e82f2442d2944bd4cfd3d": "RUN wget -q https://storage.googleapis.com/kubernetes-helm/helm-${HELM_LATEST_VERSION}-linux-amd64.tar.gz", "00fb5369447ccded942d724e1bc98f25": "RUN tar -xf helm-${HELM_LATEST_VERSION}-linux-amd64.tar.gz", "c3dc6e76b4ffe499db656a02dcf703a0": "RUN mv linux-amd64/helm /usr/local/bin", "5d7216c1694c7f1e34ef98809e5ce3d8": "RUN apk del --purge deps", "b2d9176fa234046b334257280d23132c": "RUN rm /var/cache/apk/*", "99d0769b55a737877d715dbc850fb520": "RUN rm -f /helm-${HELM_LATEST_VERSION}-linux-amd64.tar.gz", "23a5444297cabe4be41201b0a7e3f9ca": "WORKDIR /go/src/github.com/seanson/terratest-helm-tester", "39fb7fe6033fe41a742743c85abaaea7": "COPY . /go/src/github.com/seanson/terratest-helm-tester/", "e70a45a67643e91159bef30521ce9488": "RUN go test -i -tags=helm ./test", "3661d10ab29619b41203b23b70fec0df": "CMD \"/bin/sh\" \"-c\" \"go test -v ./test\"", "ab4c33e09deb2d06c97313768b5c8777": "FROM golang AS builder", "d816dfd04c55b30616880e748a6ec947": "LABEL maintainer=\"Chirkov Dmitry <d@linux.technology>\"", "76512cbe014682903e339d2dfdc77ff0": "RUN go get -d -u gitlab.com/NebulousLabs/Sia/...", "77998e70ce46886caa812cefddeb8113": "RUN cd $GOPATH/src/gitlab.com/NebulousLabs/Sia", "95fc6f521c6dda1703ee2eb6e47dba14": "RUN make release", "49ca11aace925a1c7284a126fe42d143": "ENV SIA_DIR=\"/sia\"", "afa73e3f940f61d639061875ab6e12ef": "ENV SIA_DATA_DIR=\"/sia-data\"", "d5f69919e98fb518784eeb2a9515b3b9": "ENV SIA_MODULES=\"gctwhr\"", "b83b1bfa7778f93b8e8d69ea74821a47": "RUN apk --no-cache add socat", "7df55e5169d1211eaeee03f53f075b52": "WORKDIR \"$SIA_DIR\"", "37c3d45cbb8657e7a04a55b91c95c35c": "COPY /go/bin/siad ./", "ecc73bf5aa866412df3cb20914e2a25d": "COPY go/bin/siac ./", "7af4a65856dc12f807513cfb70c9410f": "ENTRYPOINT socat tcp-listen:9980,reuseaddr,fork tcp:localhost:8000 & ./siad --modules \"$SIA_MODULES\" --sia-directory \"$SIA_DATA_DIR\" --api-addr \"localhost:8000\" --authenticate-api=false", "09d02d79689a242daac9a885a525104d": "FROM golang:1.13 AS builder", "9bb79720e724985a5ccef5df686dfa94": "RUN git clone https://github.com/syncthing/syncthing.git /go/src/github.com/syncthing/syncthing", "343429036e063ce236893ea7b159d8fe": "WORKDIR /go/src/github.com/syncthing/syncthing", "4246887022d4ea5ee8a5d6783dab0df3": "RUN git checkout tags/v1.3.1-rc.2", "2a457587aa73c7274ad3b53737ba5941": "ENV BUILD_HOST=\"syncthing.net\"", "ca03fe82128fa3064bba515f05bb7fd4": "ENV BUILD_USER=\"docker\"", "86afd1770ef2d5d9f146c4ea5966c91e": "RUN go run build.go build stdiscosrv", "311f6eed9b0c957f9c83e6cf1e517c1b": "COPY /go/src/github.com/syncthing/syncthing/stdiscosrv /bin/", "bdfc0e004dbaead63b2f6bafc0932d34": "RUN echo 'syncthing:x:1000:1000::/var/syncthing:/sbin/nologin' >> /etc/passwd", "51ed962006efa889b90fd4c868548d22": "RUN echo 'syncthing:!::0:::::' >> /etc/shadow", "c8c8141096df8d7afe7eba2fc32a9d85": "RUN mkdir /var/syncthing", "3bfa55b661ba823456ac829755d669a9": "RUN chown syncthing /var/syncthing", "d17a2e90cc15056dbd3b636028129232": "WORKDIR /var/syncthing", "79d6dc576074da539286def7a8b9308f": "USER syncthing", "e2ff003a4c6117f35b2e9b2fc707dff0": "ENV STNOUPGRADE=\"1\"", "969b2af66c492ab68e9e95cc7db228b9": "HEALTHCHECK --interval=1m --timeout=10s CMD nc -z localhost 8443 || exit 1", "7c6e05af545fd2883c49be22879a25ea": "ENTRYPOINT [\"/bin/stdiscosrv\"]", "c17e332e07e644b9ec2ce870c7507972": "RUN go get -u github.com/kardianos/govendor", "9ceace86b074d1cd29155e31992a5100": "RUN govendor sync", "519f7c25e68f44cbd9155a65be7f45b5": "FROM golang:1.13.2-alpine3.10 as builder", "dc5cfcdf36e9c294829613704041ea88": "RUN CGO_ENABLED=0 go build -o librebread", "5fffc68935efe5b64ac420e5c91116b8": "COPY /build/librebread .", "fa31f00f7535ff0095fd3cce5685b903": "EXPOSE 80", "66690a41aa499f05a2f84d7d58fd008a": "CMD [\"./librebread\"]", "5e52b2d95ff5d673fea25d5a76445d87": "LABEL version=\"1.0\"", "ede6cd03ff86be0bdaca3f266907d683": "LABEL maintainer=\"jaepyoung.kim@gmail.com\"", "e0f1bb5d123073238260bcdc0fd68e6e": "RUN mkdir /go/src/app", "9bbd19c549d285f76e80344ab7e22779": "RUN apk add --update make git nodejs npm curl jq", "7108944fe6da6016a583a03837af1a67": "RUN npm install -g serverless", "aeae1ca2aca88941b73d042401b0467f": "RUN npm install --global yarn", "0bb0885be343761a6c74d645413a863f": "RUN curl -sL https://releases.hashicorp.com/vault/1.3.0/vault_1.3.0_linux_amd64.zip -o vault.zip", "034e9bca5bb489abcf253ac41f5ac863": "RUN unzip vault.zip", "a34686b36c98d8bdffaeabf3fb579689": "RUN chmod a+x vault", "9fba26b0937afc5cea29def11d35078f": "RUN mv vault /usr/local/bin/vault", "83f2dc96e57c1743e803a712a0c84e08": "RUN apk -Uuv add groff less python py-pip", "e261363e488b1ee16685db52c6b2c5f4": "RUN pip install awscli", "036163ca4d5cd78c8e128986701e1c42": "RUN apk --purge -v del py-pip", "bb9a0dd1978b22adde7abc591bc99f5f": "FROM golang:1.12 as builder", "189d9512ae1942657950ef58e3ed08e7": "RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build", "3d85b45ec69aab0d9a786f567dfb2351": "COPY /app/dvchk /app/", "4a636d8d43a7627a6759427a863dab8b": "ENTRYPOINT [\"/app/dvchk\"]", "9462c30a8b9eb1aeccea8d863630f0f7": "FROM golang:1.12 as build", "edf4e83fdc2b0e1b70d4e78f8fc15ce0": "RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o app .", "456896a219b85a4f7a562d32cb2d6263": "RUN addgroup -g 1000 app", "8fa3dfc23c1de080d9c87c9c476e4080": "RUN adduser -u 1000 -h /app -G app -S app", "ec3c97ca5ee89c23dfed81f855447e59": "USER app", "3bb17255dbd25520431e8efd8dda58c6": "COPY /src/app .", "5460ce6cb0d84be2ca1380be91c67548": "CMD [\"./app\"]", "9681571e7dafce7a73c73a158ba86809": "FROM golang:1.13.0-alpine3.10 AS build", "1ddbbb56b6da3dfcae5cf3ee55e83918": "RUN go get github.com/m-lab/dash/cmd/dash-client", "b0a9f547ed6fbaac83c9b769d6efeeca": "RUN go get github.com/m-lab/ndt7-client-go/cmd/ndt7-client", "0b1d1b1063c8ac4f78f9d81b9cd92e47": "RUN git clone https://github.com/m-lab/ndt5-client-go.git", "2290d69926c3fdfd312543dd497ce35e": "RUN cd ndt5-client-go/cmd/ndt5-client", "511e7bf29834fc9738931ccf1f08996f": "RUN git checkout b179d3bd11fbdb33f1c7ba15130bf684f7e64910", "5d531b659aef000a6376f2736ad48924": "FROM python:3-alpine3.10", "3a4d3e69e581e99e3435ca1c8c99ea26": "RUN apk add git libgcc gcc libc-dev libffi-dev libressl-dev speedtest-cli make", "41ef2096a61b19eee251ecd740981008": "RUN pip install 'poetry==0.12.17'", "eb50d35f19c3bb5056e73b4ae76a7998": "WORKDIR /murakami", "7d91c60337f58320978c6a9c3e338dc0": "COPY . /murakami/", "d283196e510e26116958890d3a23d3e1": "COPY /go/bin/* /murakami/bin/", "8fdd227eef7cba1f3058448af7614993": "RUN poetry config settings.virtualenvs.create false", "b4934cc459c0f1966aedd3dcb773e8c3": "RUN poetry install --no-dev --no-interaction --develop=murakami", "db09481afc7d2bc3bf02488e4bc27dfe": "ENV PATH=\"/murakami/bin:${PATH}\"", "63d4b1b56befbe31a08be20adc232ffc": "ENTRYPOINT [ \"python\", \"-m\", \"murakami\" ]", "d13d69961892b8720ba16eb3e33931eb": "FROM golang:1.12 as compiler", "226e34d7bdeb165e51b6fcf5c3091e1d": "COPY . /app", "e3bfed0521411c8b3ae8fc3dc09c94c8": "RUN go build -mod=vendor -o /bin/server main.go", "b3775f847a30920da5d37fd2c3556ec7": "FROM debian:jessie", "62055388f6ee9a62b0aef16c23cf6429": "ENV DOCKER_HOST=\"/var/run/docker.sock\"", "eb1aa12856795cb807b892c94b9ca0b0": "RUN apt-get install -y ca-certificates", "4a18e19c98368e63980cb64211969f2c": "COPY /bin/server /bin/", "1652e53a9514c3e557622b11212331a6": "EXPOSE 80 443", "e85e5db5d0aebe8ab8c200c2602dbb97": "ENTRYPOINT [\"bin/server\"]", "0083ec93815fa615e9c104e22e46c904": "WORKDIR /nautilus", "4092f5c53dcfc5e9a97fa4388fa447f9": "RUN go build -mod vendor -o /usr/local/bin/svc_id nautilus/cmd/svc_id", "e6dc50a7f50b07f8afcf449357bf6820": "RUN go build -mod vendor -o /usr/local/bin/svc_id_test nautilus/cmd/svc_id_test", "f4cfce8055b3c1c65b5bf42dd0c86a2c": "RUN go build -mod vendor -o /usr/local/bin/web_main nautilus/cmd/web_main", "68f6961b72bcda18ce88e061d0b8b7b4": "RUN go build -mod vendor -o /usr/local/bin/web_null nautilus/cmd/web_null", "89eea449d342a823dbceaf63f2576252": "FROM debian:10", "bf728a93e15de8046718e88ff02a6472": "RUN apt-get install -y tzdata ca-certificates", "59a9a7466ab71dec91f5ca11b344d84f": "RUN rm -rf /var/lib/apt/lists/*", "5d0154163dfc53c469b8d349ba7b6706": "RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime", "38f803e1fcd77501e3a05ceb46424424": "RUN echo $TZ > /etc/timezone", "b7d34a7f6b0093292da8fbf3185f314f": "COPY /usr/local/bin/svc_id /usr/local/bin/", "0bdcae2ed20c915e10236abc495cb7f3": "COPY /usr/local/bin/svc_id_test /usr/local/bin/", "39622d0cc7b0bf2d96e586d8f624dc8d": "COPY /usr/local/bin/web_main /usr/local/bin/", "3944f9e6697d981964278b08869f19ab": "COPY /usr/local/bin/web_null /usr/local/bin/", "69a1674ec2f3ad21753cb3ab8bb1a237": "ADD assets /", "b4bb2d87dcd2b7b3cab8aff1776b0a4f": "FROM golang:1.12-alpine AS builder", "9b18966f04678604b9f8bebad0965fc6": "ENV CGO_ENABLED=\"1\"", "9febce2b9ad116b096db58735d8b0208": "RUN apk add --update git make gcc g++", "f531778abbf0cfa70f3dca2722031ea1": "RUN go install sigs.k8s.io/kustomize", "0a93b130635a650f7a552433ba6c23a3": "COPY /go/bin/kustomize /usr/bin/", "1489be5acd0808a7d179010d526feb15": "COPY /app/plugin /root/.config/kustomize/plugin/", "9fe63d454655d7b0e02706142277cbc9": "ENTRYPOINT [\"/usr/bin/kustomize\"]", "3502d2a4ca0883eaff9b6c8006c3b0c1": "FROM golang:1.10.3-alpine3.8 AS build", "81c1aec388e4066c1c3664bc69ec872d": "WORKDIR /go/src/github.com/kak-tus/ruthie", "c723dd5cdfe698802634708b43540be0": "COPY message ./", "36b80361afeef0d87dabbebf08af4ad8": "COPY reader ./", "98269bed2776b6bf8a8a464ac907b87f": "COPY writer ./", "704f7f3daac3bac36f4dcef39e775ea5": "COPY /go/bin/ruthie /usr/local/bin/", "1d795b78c417e266cb72c0970e9d1dfe": "ENV RUTHIE_CLICKHOUSE_ADDR=\"\" RUTHIE_CLICKHOUSE_ALTADDRS=\"\" RUTHIE_CONSUMER_NAME=\"\" RUTHIE_REDIS_ADDR=\"\" RUTHIE_BATCH=\"10000\" RUTHIE_PENDING_BUFFER_SIZE=\"1000000\" RUTHIE_PERIOD=\"60000000000\" RUTHIE_PIPE_BUFFER_SIZE=\"50000\" RUTHIE_PREFETCH_COUNT=\"30000\" RUTHIE_QUEUE_NAME=\"ruthie\" RUTHIE_SHARDS_COUNT=\"10\"", "12d9d5ec42fefb18af505a671fc65560": "CMD [\"/usr/local/bin/ruthie\"]", "2196438416dd05376b10740ea684e193": "FROM golang:1.8-alpine", "d37790ac1508166251681b7d3a984a6b": "RUN mkdir -p /usr/local/go/src/github.com/Pixboost/", "47a68ab59a39ec8845fcc3e4ca7b109e": "WORKDIR /usr/local/go/src/github.com/Pixboost/", "f107817cd8453cf3bf3bd2940521ad26": "WORKDIR /usr/local/go/src/github.com/Pixboost/transformimgs/", "218c4285d147bc9863467382614fe5a1": "WORKDIR /usr/local/go/src/github.com/Pixboost/transformimgs/cmd", "8280c0e3e243a478e2b1136e826ab565": "ENV REPO_NAME=\"github.com/bootjp/vrc_panoprama_picture_manage\"", "ec78465a45878edad47d1defc2fbbbf9": "RUN cd $GOPATH/src/", "2f9f2c7f8a79e8baec12aa69dcabc438": "RUN mkdir -p $REPO_NAME", "64cdc689c241277b57c624fa1c51e1d9": "RUN cd github.com/bootjp/", "d0be99804da00fd9628c9d1a243b7048": "RUN git clone https://$REPO_NAME.git", "7c7f87fdcbae9e83a710d0b7a1d3b08b": "RUN cd ./vrc_panoprama_picture_manage", "b250e6f597397250c293235bbfc83798": "RUN GOOS=linux CGO_ENABLED=0 go build -a -o out cli/main.go", "528041ce3281916117248065918cdd1f": "RUN cp out /app", "9950bb45ebdf695d5c61f4500c3c4677": "RUN apk add --no-cache tzdata ca-certificates", "2008c1fc56bb750beccdf9b4c8a7934d": "COPY /app /", "c9eb7dcaf685450ef938d93513112182": "CMD [\"/app\"]", "a56768d0c07dc28d72e209f80f45044f": "WORKDIR /go/src/test_ci", "079127cc9413fb3294a30b78a563c615": "COPY functions_test.go test_ci.go ./", "a9152a7021103eb311a5af54b276f2c5": "CMD [\"go\", \"run\", \"test_ci.go\"]", "82cf84db2629e8ea49d2ae9243243668": "FROM golang:1.7-alpine", "60569a3e75d83a6671888c40d4070a7f": "ENV SRC_DIR=\"/go/src/github.com/ajarv/go-web-docker\"", "c5c1bb563ddbe11d3c282b1814ae6bf4": "RUN mkdir -p ${SRC_DIR}", "99e29b9a517611c8deae7e2ec60e5fa2": "ADD . ${SRC_DIR}", "3e5692be38c6e201c2656928f80d84d5": "WORKDIR ${SRC_DIR}", "40713e5a81769df3609e3e66ffdb9fde": "RUN apk add --no-cache bash git openssh", "826d0e0e230fdf51fa66e6f2ba2c54d2": "RUN go get -d -v github.com/go-redis/redis github.com/gorilla/mux gopkg.in/yaml.v2 github.com/thedevsaddam/gojsonq", "293bd26a28f07f3938c22a6c6ce2e9a0": "RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main .", "d610290772b802957ea8c624fcfadaee": "RUN apk --no-cache add ca-certificates curl", "621ef0b6380552d65d713fd609f4f037": "RUN mkdir -p /work", "ca0843e8b99536a81830dda1d8aa2c0b": "COPY /go/src/github.com/ajarv/go-web-redis/main .", "eda8de1e225bbe362ffc7346e3bb606f": "ADD ./static /work/", "084f1270af6508b5531de9f8b49e0357": "ADD ./templates /work/", "14bdf035a346656e1458a566ad54110d": "USER 1012", "73832a02f285dc986f70c97dc55e7b92": "ENV LISTEN_PORT=\"8080\"", "645588a94987ac603c63139dc4bf2f4d": "EXPOSE ${LISTEN_PORT}", "4519549901f653f2515421fc33f63129": "CMD ./main --port ${LISTEN_PORT}", "acbff61513e2d7cc448a995dfa3c1306": "FROM golang:1.13.1-alpine3.10 as builder", "e1a6a6324821091ebda5ba5a02e4060b": "RUN apk --no-cache add git make gcc musl-dev zip", "3461618b2e50ca7ceb8e82a2350b46b7": "WORKDIR /tflint", "ee76b62d15fe2842280feaa9aceb3a9c": "ADD . /tflint", "37373defead685f4644be6932e670203": "FROM alpine:3.10 as prod", "06980aed1f3349481bfd7fd692d1e974": "LABEL maintainer=terraform-linters", "d9daa492a211a7813031e91717571141": "COPY /tflint/dist/tflint /usr/local/bin", "2cf17ccb493004c2374ec93ecb85e7af": "ENTRYPOINT [\"tflint\"]", "0b36602de2ef3ef38ac32994d13c5ec5": "WORKDIR /data", "d0bb01d8711946f4132e07c09131d510": "FROM golang:1.12.4-alpine AS build_deps", "1a414277aaeb44d693d4f5c872e0d72c": "WORKDIR /workspace", "86c379c064cfec7d8be894cbf5068eb8": "FROM build_deps AS build", "c66bf871704b122e82f0750f37e476e8": "RUN CGO_ENABLED=0 go build -o webhook -ldflags '-w -extldflags \"-static\"' .", "7f9d1fb69766c4c436e273af318d9b49": "ENV ALICLOUD_ACCESS_KEY=\"\"", "e2b4c377bbe227da4a16cb346549905a": "ENV ALICLOUD_SECRET_KEY=\"\"", "d5a4e7ea1df9c55f7ce22a8044091a31": "ENV REGIONID=\"\"", "1b2fd58732ce3dc360999c992f057ee9": "COPY /workspace/webhook /usr/local/bin/", "afcfc2d55a958cf25dd107dd21b8d96a": "RUN apk add -U --no-cache ca-certificates gcc git musl-dev", "7a3dccd422d6770db660b1d68efdffa1": "WORKDIR /src/nextver", "5662711099abcd47e9ee039f0e284590": "COPY . /src/nextver", "d2b672ba79e518f04c02df7ebc22c17d": "RUN apk add -U --no-cache ca-certificates", "fd27e4b233bc658f11120ed5ed5274a4": "COPY /src/nextver/nextver /usr/local/bin/", "ab6557dcc99c86c4604f9117bef30620": "ARG GOLANG_TAG=latest", "a9ce8db767c45e901a15541582f115d2": "ARG ALPINE_TAG=latest", "ae03e7f48eac8c0a9c3b8a73634ce572": "FROM golang:${GOLANG_TAG} AS builder", "efebb3305fda30cf1654dc3f4c37ee5d": "RUN GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go install -ldflags=\"-w -s\"", "c60f9fea3ca634ad4be7efbd73105fc4": "FROM alpine:${ALPINE_TAG}", "8856bfa0227c3fb692bde0bbb82e5ff4": "LABEL org.opencontainers.image.title=\"MemGator\" org.opencontainers.image.description=\"A Memento Aggregator CLI and Server in Go\" org.opencontainers.image.authors=\"Sawood Alam <@ibnesayeed>\" org.opencontainers.image.source=\"https://github.com/oduwsdl/MemGator\" org.opencontainers.image.url=\"https://hub.docker.com/r/oduwsdl/memgator\" org.opencontainers.image.licenses=\"MIT\"", "8399d16660f4ad99598f43819753627d": "COPY /go/bin/memgator /bin/", "a1eeb7b016b14ec7a527194f78fc8890": "ENTRYPOINT [\"memgator\"]", "a767a55aaca2da899bbd898de5649365": "COPY ./public /app/", "6fd06d9b944780a040f2561242dd1c71": "RUN go build ./cmd/conductorr", "6ab1316cc5ce978868504711cee7364b": "RUN go build ./cmd/migrations", "5ea7cdf19e3b9e557f683e94c8ef38b1": "COPY /src/conductorr /app/", "868100e8015f833709e712465354232f": "COPY /src/migrations /app/", "5d8638fce3413c3933212127fab64569": "COPY conductorr-web/dist/", "25fe569395287451850455f6e8f4cc5b": "ENTRYPOINT ./conductorr", "1445957e66bc5978153b46c45d24ad00": "MAINTAINER \"kxg3030@sina.com\"", "acbecf59dd371008e71be17b09816817": "WORKDIR /home/emoji", "ad0024e9bc8d7e8691e9eaf74c9498ec": "ENV FFMPEG=\"4.1\"", "e73769bfc7eac9555da8bf7264c31fa3": "RUN apt-get install -y tar curl wget git zip libz-dev libssl-dev libnghttp2-dev libpcre3-dev openssh-server", "e6897ab6a649a3da0506b5102232b386": "RUN apt-get autoremove", "1ea77047360033cadda17844d6f76082": "RUN wget https://ffmpeg.org/releases/ffmpeg-${FFMPEG}.tar.bz2 -O ./ffmpeg.tar.bz2", "4e54947ac9b9818a1cdd057853e3ab44": "RUN mkdir -p ./ffmpeg", "ea89b2aced880ed4c07e5019d0115738": "RUN tar -jxvf ffmpeg.tar.bz2 -C ./ffmpeg", "dcc3ad6707318017918033d8a1798e8d": "RUN rm ./ffmpeg.tar.bz2", "c2e83df64f52130de5ef2cc6b7db81cd": "RUN cd ./ffmpeg", "ad0d0b2b326fd257063be93171994dbd": "RUN ./configure", "1f4623331e2e619cfec105c2f0c9fdcb": "ENV ACTION=\"pro\"", "255da70f5a939c403b03545ce1ce0a34": "ENV GOPROXY=\"https://goproxy.io\"", "6d423173e415d131a920e88b0b2fc7e8": "RUN rm -f .env", "6982e7b8c337809577d191e0db59379b": "RUN \\cp .env.${ACTION} .env", "6ee2049ed3d529c2b9f84d523ebbadee": "RUN go mod tidy", "0eaaac1d7dfbffce490b036d400fddb2": "ENTRYPOINT [\"go\",\"run\",\"Index.go\"]", "9a2300c8b98464342364403430e94a97": "ENV QEMU_DOWNLOAD_SHA256=\"a1ef52971537e11915565233f48aa179839f676008d7911c05b3ae94c08c4f5c\"", "9800b55ae24fefd839fe2f7de5a77896": "RUN apk add curl --no-cache", "f6c72a35205aece5384ea5e1ec3deaf8": "RUN curl -sL -o qemu-3.0.0+resin-aarch64.tar.gz https://github.com/balena-io/qemu/releases/download/v3.0.0%2Bresin/qemu-3.0.0+resin-aarch64.tar.gz", "bd526856035cb3ab32b45a99284e0440": "RUN echo \"$QEMU_DOWNLOAD_SHA256 *qemu-3.0.0+resin-aarch64.tar.gz\" | sha256sum -c - | tar zxvf qemu-3.0.0+resin-aarch64.tar.gz -C .", "0fa74df8ee5280a7c3eb30e2d5368d20": "RUN mv qemu-3.0.0+resin-aarch64/qemu-aarch64-static .", "a79789018b3f3e3bcd43cc0cb066ebb4": "FROM arm64v8/ruby:2.6-slim-buster", "95440884cb6437fa6766ab58729e537f": "COPY /go/qemu-aarch64-static /usr/bin/", "54bf961d04a5369083e58eb624a099fb": "LABEL maintainer \"Fluentd developers <fluentd@googlegroups.com>\"", "1ef7c293b1e1ecb696b39b9ea013be9b": "LABEL Description=\"Fluentd docker image\" Vendor=\"Fluent Organization\" Version=\"1.11.5\"", "80fbc66d4b1923c8d20c3f17a37769e9": "ARG CROSS_BUILD_START=\"cross-build-start\"", "d48d132a9c5a83f99f9025e45e6fa437": "ARG CROSS_BUILD_END=\"cross-build-end\"", "f116d66694a98fcf9db0dfffbe6cdc91": "RUN [ ${CROSS_BUILD_START} ]", "2ab72f840a5398d9b914b0025e0047d2": "ENV TINI_VERSION=\"0.18.0\"", "95398caff042ecde37268b321a425e3c": "RUN apt-get install -y --no-install-recommends ca-certificates", "8a876ea2b1b60f4a001d86179eabae59": "RUN buildDeps=\" make gcc g++ libc-dev wget bzip2 gnupg dirmngr \"", "a02ef955463641558a5cbd236964adfc": "RUN apt-get install -y --no-install-recommends $buildDeps", "0700c2600e86f8ef289cf12f5a5e4964": "RUN echo 'gem: --no-document' >> /etc/gemrc", "43e8e88ee1d2f3a379df365da4240ab5": "RUN gem install oj -v 3.8.1", "0fb36055c95b85c77be0262d0dbbd3d2": "RUN gem install json -v 2.3.0", "76d42130f76000194ab9d349b63e3786": "RUN gem install async-http -v 0.50.7", "ee1b710169159ddc7a3b52167e827b2f": "RUN gem install ext_monitor -v 0.1.2", "e2854810bcb61a00b18828deb182206c": "RUN gem install fluentd -v 1.11.5", "ee8c563d5f7ea7da036be8744c8c846f": "RUN dpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"", "a0b280bb9b56b30902ea1be49e023816": "RUN wget -O /usr/local/bin/tini \"https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch\"", "ed8ded86e0014a2df33ba9b030579e00": "RUN wget -O /usr/local/bin/tini.asc \"https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-$dpkgArch.asc\"", "d7402775e4a15d4d3158407fdc9a3cf8": "RUN export GNUPGHOME=\"$(mktemp -d)\"", "b7155dd3c96fed2a49cd52cc58e2efdb": "RUN gpg --batch --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 6380DC428747F6C393FEACA59A84159D7001A4E5", "d5dc40f5d23fe2b4608c33e656151127": "RUN gpg --batch --verify /usr/local/bin/tini.asc /usr/local/bin/tini", "3caa4a36f4cdc021f5d917d778ffff39": "RUN rm -r /usr/local/bin/tini.asc", "82fa0bf7913d9ba5022d69c5327347a7": "RUN chmod +x /usr/local/bin/tini", "d1baa56989840bf602c2dc1134e91841": "RUN tini -h", "47eaf6319edaed16eae07d371a6018aa": "RUN wget -O /tmp/jemalloc-4.5.0.tar.bz2 https://github.com/jemalloc/jemalloc/releases/download/4.5.0/jemalloc-4.5.0.tar.bz2", "7cd302f3e319b99aa5c2de254d798fef": "RUN tar -xjf jemalloc-4.5.0.tar.bz2", "92d78aa0e3818878bfcab6d27296c9fa": "RUN cd jemalloc-4.5.0/", "ea921fccd68b329af8b652b1ef1e2a4f": "RUN mv lib/libjemalloc.so.2 /usr/lib", "c3adf5b57bafbf187db0f7195e1a1980": "RUN apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $buildDeps", "2c0571ca564615fd759e3fe1c09b67b9": "RUN rm -rf /tmp/* /var/tmp/* /usr/lib/ruby/gems/*/cache/*.gem /usr/lib/ruby/gems/2.*/gems/fluentd-*/test", "0efd1d21012dcd7feebb0a9d53a40990": "RUN groupadd -r fluent", "7c2cb5ec376bcdb67d6d66fc4326124a": "RUN useradd -r -g fluent fluent", "ee2ff2b008e7684166f06ddbc24af7dc": "RUN mkdir -p /fluentd/log", "4df360e073c10eb38b1637ef6005dfc7": "RUN mkdir -p /fluentd/etc /fluentd/plugins", "f1cfc0c0472c5e0038e8aff4659c79f4": "RUN chown -R fluent /fluentd", "3eda6b600c7dd109a4250dc983de76ec": "RUN chgrp -R fluent /fluentd", "de833856df9f71ae51b896e6f7711598": "COPY fluent.conf /fluentd/etc/", "1fb02f37f2f2dfe4bedca05051928107": "COPY entrypoint.sh /bin/", "8ec4af8d25b65d2b9add14ea8c33d844": "ENV FLUENTD_CONF=\"fluent.conf\"", "48fa3c1c7aaee8ba1217548489a2eea5": "ENV LD_PRELOAD=\"/usr/lib/libjemalloc.so.2\"", "382f44d8b98b720e88c89a7a34158399": "EXPOSE 24224 5140", "28c95cf702ca88d428f45c090d635f11": "USER fluent", "c364ca26673fa2df606e0aed53dce0ff": "ENTRYPOINT [\"tini\", \"--\", \"/bin/entrypoint.sh\"]", "bf78adc2f9bd4284ce294d75fdab1b6f": "CMD [\"fluentd\"]", "b80e935518aee33ea4bab425fe2c2a66": "RUN [ ${CROSS_BUILD_END} ]", "ff3118770634956ff5fd59fc439fd674": "FROM golang:1.11 AS build", "7b42472840de96ba46fb4977932cfc5c": "WORKDIR /build/gophish", "f41f2e5f83c13cbd0bb623267c15f3fe": "FROM debian:stable-slim", "48e786e99ace182636f31d6e055682e5": "RUN apt-get install --no-install-recommends -y jq", "71a00830960b8ae065adb064c63feaab": "WORKDIR /gophish", "c400b43dfc79819e678273332792cb15": "COPY /build/gophish/", "091833013182aa1da48fd1ca66211b22": "RUN chmod +x gophish", "6b2c71547e14435ffac357e5b78a619c": "RUN sed -i 's/127.0.0.1/0.0.0.0/g' config.json", "26140ce63e739cee95fb89f8ef775a9c": "EXPOSE 80 443 3333", "c4c5a6fbb843d1fb521239390525af12": "CMD [\"./docker/run.sh\"]", "762fb3999e94c857ec4ac758e573ec83": "ARG GO_VERSION=1.11.2", "2fcdda7f2293ea43950df382aed5c5b4": "FROM golang:${GO_VERSION}-alpine", "3df1058be32a6c1c2fd671184a23cfc7": "RUN apk --no-cache add ca-certificates make git", "4ab7b0a9321cf5646277673328bd669b": "COPY go.mod go.sum Makefile ./", "8afb02f7e557fe6c43d01de7c6fc4ada": "RUN make vendor", "a25fe26104a2be86bcb4ac236f42185d": "RUN make test all", "9ee2333f08611eb97942a0d154635adb": "ENV TLS_PORT=\"9443\" LIFECYCLE_PORT=\"9000\" CONFIG=\"./conf/sidecars.yaml\" TLS_CERT_FILE=\"/var/lib/secrets/cert.crt\" TLS_KEY_FILE=\"/var/lib/secrets/cert.key\"", "db60dba8fc6740b8d4dd6e41dc93aed5": "RUN apk --no-cache add ca-certificates bash", "f896ad417fe42dda9cd3b34d36286cca": "COPY /src/bin/k8s-sidecar-injector /bin/", "c08d800c77422869a2204a0db1bd6cee": "COPY ./conf ./", "231d76acef6033def2a30eef5a3f8ade": "COPY ./entrypoint.sh /bin/", "a19dcd652e60e8896d309512037d7eba": "EXPOSE $TLS_PORT $LIFECYCLE_PORT", "ccb7b9c880a5bcbc5a1d5aed59bfcfd9": "CMD []", "2cb7640b9e802f158472f037ff15a808": "FROM golang:1.13-alpine AS development", "f60a69368b2ccba30d93dbf719108d8b": "ENV PROJECT_PATH=\"/chirpstack-gateway-bridge\"", "123827a34b691ea4800d80f5059a4ddd": "ENV PATH=\"$PATH:$PROJECT_PATH/build\"", "040b57f934488527f43af467696104a2": "ENV GO_EXTRA_BUILD_ARGS=\"-a -installsuffix cgo\"", "de4587e5428d44487cb1093cfc56bc27": "RUN apk add --no-cache ca-certificates make git bash", "fd51372485e31b4fe3ff8829133c917c": "RUN mkdir -p $PROJECT_PATH", "74617222dee5927abff508b483cd1e34": "COPY . $PROJECT_PATH", "cf306e1b039530a12b164459801cf733": "WORKDIR $PROJECT_PATH", "fcf7d310924d0fff14e56a266e7a36e6": "RUN make dev-requirements", "8853d1e7943040561284a296f284fd39": "FROM alpine:latest AS production", "8e769d0dd406ba6c05cd2620c08d5b09": "COPY /chirpstack-gateway-bridge/build/chirpstack-gateway-bridge .", "e39e1183a7830397a6ce65c4beee39a3": "ENTRYPOINT [\"./chirpstack-gateway-bridge\"]", "a4e90b4fe07f1cd70de41e936f6d647c": "MAINTAINER luoxiaojun1992 <luoxiaojun1992@sina.cn>", "4cccd28ece6fdd695414881957f280d1": "EXPOSE 8888", "e968cad76dcc56ddc72174e7c5e8d3e0": "ENTRYPOINT [\"bash\", \"/go/src/app/start.sh\"]", "6682f7dbe3525774cc2e10afbe06aab1": "VOLUME /app/test", "8d55385e4637a81eda7b42d85a20a9e9": "FROM golang:1.6.0", "6da3b87e3c4ca1d5161d767f6f2f3b87": "ENV PROJECT_PATH=\"/go/src/github.com/brocaar/lora-semtech-bridge\"", "123cd2e053ebe860b66d95eec9ab525c": "ENV PATH=\"$PATH:$PROJECT_PATH/bin\"", "0443bb6a3d7297484a11b141447d21cf": "RUN go get github.com/golang/lint/golint", "bfc2ce320ecbd065035b840b039dbcb2": "RUN go get github.com/kisielk/errcheck", "8ae0b0c188bfa38047e8070e5ef3a0a8": "FROM golang:1.13.2-alpine as builder", "2bd914e92974bd250d36f5742a23a7cd": "LABEL maintainer=\"Antonio Mika <me@antoniomika.me>\"", "60865da031e53cc3e7d3b4e83f417f43": "ENV GOCACHE=\"/gocache\"", "19fc3b2911aef62a0004740eac0af398": "RUN go test -i ./...", "53513149d5e287c64f4cf23b7d96572f": "COPY /go/bin/sish /app/", "7620f37371a86bda34c7322085247ca9": "ENTRYPOINT [\"/app/sish\"]", "aa211cbfc72745ac8bf7f6e36a2a467b": "ADD server /go/src/absCAServer/", "6ff29bb9198814a0b98d9f088200c01b": "ADD utils /go/src/absCAServer/", "b06c327e8bdc8161f0f2e5882c8ee7d0": "RUN go install absCAServer/server", "0dc637027a414bcc862eced42a6d3849": "ENTRYPOINT [ \"/go/bin/server\" ]", "d468dcf185d56330f3c0a04a04b8f9bb": "EXPOSE 6054", "c2ff63520a681263bcccf073c1a8a870": "FROM golang:1.20.4-alpine3.18 as builder", "5797e0f08bda7dbff10ce3bbe4a9728a": "WORKDIR /go/src/k8s.io/ingress-nginx/images/custom-error-pages", "4c8e03996583c43a04dbdf24a37c3524": "RUN go get .", "e0e446485307c7a3abaaa3ef8e6d5168": "RUN CGO_ENABLED=0 go build -a -installsuffix cgo -ldflags \"-s -w\" -o nginx-errors .", "3fe3359fc0737a9ab9717c3e98df4e06": "FROM gcr.io/distroless/static:nonroot", "9dc0a2f39ff5154ee6a724746433b7e6": "COPY /go/src/k8s.io/ingress-nginx/images/custom-error-pages/nginx-errors /", "1c3ce8dfb841a8aa1227d74affe1954f": "COPY /go/src/k8s.io/ingress-nginx/images/custom-error-pages/www /", "22a812ce11c725e38f6e1fa976e5fa21": "USER nonroot:nonroot", "cf92896176e846e520f10f7604c26c59": "CMD [\"/nginx-errors\"]", "b69536ae89acaa46391e8d4fece81592": "RUN apk -U --no-cache add git make", "34b95db8b8b0305fa0258778dee48e90": "FROM golang:alpine3.8 AS build", "1f2fa157109fe10286340e6595fc362c": "COPY . /go/src/github.com/wuvt/slackyi", "19d3d560451df93805da8d9b31d25d28": "WORKDIR /go/src/github.com/wuvt/slackyi", "e2ae67934f51ca9ec014e5a82fde8436": "COPY /go/bin/slackyi /usr/local/bin/", "c5b1db3ad905c76ddcb24452863959d1": "ENTRYPOINT [\"/usr/local/bin/slackyi\"]", "44b2164bd020c15c260075150f7042db": "LABEL MAINTAINER=\"Salih \u00c7ift\u00e7i\"", "cc50229f5e23d6b173311dbb6462e63a": "WORKDIR /go/src/liman", "26573fdd14d5143fe0f513b20adc83f5": "RUN curl -sSL https://get.docker.com/ | sh", "0ea40e074a0748fc27d5e128a91fbe93": "CMD [\"liman\"]", "717d3b9f4670dfcaba89105207f61107": "COPY . /go/src/app", "949eb8d2c8720bc23e04b9de191559a5": "RUN go-wrapper download", "7c40ad192f274b8a82012a77463dd274": "RUN go-wrapper install -ldflags \"$(go run buildscripts/gen-ldflags.go)\"", "4ed1f115b5b29910447f53970a9918c0": "RUN rm -rf /go/pkg /go/src", "c5dcce7d6a5929b57b5276c600b6e7ce": "RUN apk del git", "95354a5b0f9a38f12a6729b03409c4e1": "ENTRYPOINT [\"mc\"]", "8d5296e745dbad480263eecf5a8383f1": "RUN apk add git openssh", "4c66242879f25f6f2d1d5aaae131c088": "COPY . $GOPATH/src/github.com/shopicano/shopicano-backend", "0cc9616104000f4f6d639551c7deadbe": "WORKDIR $GOPATH/src/github.com/shopicano/shopicano-backend", "336a1d508caaf5e4132bfe1e3e40d0b9": "RUN rm go.sum", "f14d734caa8a48afefc507a79bcb1ec6": "RUN rm /go/pkg/mod/github.com/coreos/etcd@v3.3.10+incompatible/client/keys.generated.go", "9b04405286e1bba8b315af06c9ac9c80": "RUN cp ./hacks/keys.generated.go /go/pkg/mod/github.com/coreos/etcd@v3.3.10+incompatible/client/", "52da024caf345d8853b929c65a2c6485": "RUN go build -v -o shopicano", "c47d3a6a715f599cd02c3ae482428005": "RUN mv shopicano /go/bin/shopicano", "a1c093c37deff55a53f1c40a3ffcbc8a": "WORKDIR /root", "560d78aac7e5fbc4845e40fccc56c80f": "COPY /go/bin/shopicano /usr/local/bin/", "5b808d17c7afd9f511ff89ab839d8c9d": "ENTRYPOINT [\"shopicano\"]", "886504ee47d727bffa64797fa8ea4b6d": "COPY * /go/src/github.com/baelish/alive/", "2f3e09e89650d74f63a79bfc01a347c6": "RUN go get github.com/gorilla/mux", "2fdf2232c3a183457696cf90e187e6ef": "RUN cd /go/src/github.com/baelish/alive/", "ff675da8fa3ba0f9c6960886dc83e25f": "RUN go install .", "0feac5611d58abc2fb9d6383682f106c": "RUN mkdir /app /data", "d75181a48bdd1815cf1716cb6417679f": "COPY /go/bin/alive .", "8784d1bf96d832ca37a070759753b9bc": "CMD ./alive -b /data/", "731fd37ff9ed37ebcdda67e4f650c9f1": "FROM golang:1.12.1-alpine3.9 AS build-env", "ba9c5fcc0c157f16f545a1327ecc2f46": "WORKDIR /src/gocron", "d521d6e3684eb5559c8eb51b3e903c5c": "ENV GOPATH=\"/\"", "2c08e179d63db669c47f2e484541e9a7": "ADD . /src/gocron", "6eb159c833ce158afb96b3eb09f69cc8": "RUN env CGO_ENABLED=0 go test ./...", "90d423f264ac83d6b4120f8770d4f4f9": "RUN env CGO_ENABLED=0 go build -o gocron", "c2764303ca87718aeb59c987a2f93b98": "COPY /src/gocron/gocron /usr/local/bin/", "2bb2b76fd8e0ae552f05448f181f2411": "COPY docker/example.config.yml /etc/gocron/config.yml", "62a15a8c474f4288f6b3262571d8d716": "RUN adduser -S gocron", "0b7c259a51b0d60ed1d34df4486ac8d5": "RUN chmod +x /usr/local/bin/gocron", "9947d0e40371e164f4761e558710252f": "RUN chown gocron /usr/local/bin/gocron", "f65220ed98ffc73f6dee387e89d8ce1c": "USER gocron", "af30ced49796c3a3f7c764ec01d23cd0": "FROM golang:1.11-alpine as backend", "a7be863f7972e04b416f6cae707e5166": "RUN apk add --update --no-cache bash ca-certificates curl git make tzdata", "7d1688f41a6033ec14190e4054e86087": "RUN mkdir -p /go/src/github.com/banzaicloud/telescopes", "dd638bf66ea233ae6da9d3f72cfd9750": "ADD Gopkg.* Makefile main-targets.mk /go/src/github.com/banzaicloud/telescopes/", "1c7e2e54764b3130c1f80323b151bd67": "WORKDIR /go/src/github.com/banzaicloud/telescopes", "d435ad5a7b18281b8fd1cb61ca3b47b8": "ADD . /go/src/github.com/banzaicloud/telescopes", "12a0efe7b64e500f1152bec6519355a7": "COPY /usr/share/zoneinfo/", "5c6bd1fe3762b68565de09acfe52439f": "COPY /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/", "8e6831ca08f569d84faab3430acb0b78": "COPY /go/src/github.com/banzaicloud/telescopes/build/telescopes /bin", "3b1dfb2bb085bd2a1e905308f13c1156": "ENTRYPOINT [\"/bin/telescopes\"]", "372427433dbd4805bb873fe6b2dfb76b": "FROM golang:1-alpine AS build", "bb67991ff2af26ab655ca78010907f60": "RUN mkdir -p /go/src/github.com/Pandentia", "463d25e4038b3316a98cb844a85b5a7a": "COPY ./ /go/src/github.com/Pandentia/protoplex", "8e3f406fb34edffa07d46188a760f563": "RUN go get github.com/Pandentia/protoplex/cmd/protoplex", "abd6c59bacf35738d160aab14b21c2f1": "COPY /go/bin/protoplex /", "ce580a0fb16d125bbdb5f5664c807b37": "USER 999", "582a00017be7bc0b23c4051a6d4d13d7": "ENTRYPOINT [\"/protoplex\"]", "3b71931adc9b56841a6ba28acdae63f8": "EXPOSE 8443/tcp", "885450fcbb3af73b0bf77e229d049abe": "MAINTAINER hteen <i@hteen.cn>", "32f8114e0ecd552828768b73ab96c967": "RUN apk add --no-cache git make openssl", "aadcde0ad89ff514ca2ddaee580c6030": "RUN git clone https://github.com/tutumcloud/ngrok.git /ngrok", "a94a51ae01d2738fd97a6cca30aeac4b": "ADD *.sh /", "dba646ddc88c4f2892405d992121d379": "ENV domain=\"**None**\"", "b147b67774665835672048fe264fdb02": "ENV tunnelAddr=\":4443\"", "3509b27fa698ef73f4bb88c10c75a491": "ENV httpAddr=\":80\"", "0ccb67c511eb31fc95eac4ec8cc130b6": "ENV httpsAddr=\":443\"", "f66a37a9ea240ab73ab4dd451a20b664": "EXPOSE 4443", "b6285b954b61f886fb22d9afec060f80": "EXPOSE 443", "ccfce17fe383d48bb2d14b27beb32285": "CMD /bin/sh", "5669e19dd3d32938f9be9e452fd3c5f8": "WORKDIR /go/src/telegrambot", "4f6e6308cef322c85278b60fd63138f1": "RUN dep init", "9f9706dc0507c56ec183d514eccb5596": "RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build .", "1bd0dc63ac9974436e8c5a720c20daeb": "CMD [\"./telegrambot\"]", "64a711dcb5268711ad48bbbccb4eca57": "LABEL org.label-schema.vcs-url=\"https://github.com/daBONDi/go-rest-wol\" org.label-schema.url=\"https://github.com/daBONDi/go-rest-wol/blob/master/README.md\"", "7c0b48c9cd4de148096dad9869c47c69": "RUN go get -d github.com/gorilla/handlers", "a8b2400b898ef97a628123830c4559d2": "RUN go get -d github.com/gorilla/mux", "ef191fe5193509491f5c6e711618fa79": "RUN go get -d github.com/gocarina/gocsv", "59274c8fd099065d3d759e58de5a85eb": "COPY /app/pages/index.html ./pages/", "0e3b8348c66726c8353f8f7ba7a31ed0": "COPY /app/computer.csv .", "b5f940b661f7ce2d03b386a7ca09c431": "COPY /app/main .", "16635497a00b1b97553a09bdb4ad53a7": "ARG WOLHTTPPORT=8080", "a4aaee3e31d4d477c81d16a484c26e29": "ARG WOLFILE=computer.csv", "f0c88926c8b755b8e1a3ac37645ee71b": "EXPOSE ${WOLHTTPPORT}", "40275891a4a7b9dafbac5758691cdd74": "FROM golang:1.12.7", "deb9b0a7b5df86754d0c56202c82da6f": "RUN go build -o egtsreceiver ./cmd/egtsreceiver", "0a9bbe939040ca1eda1e1be5afce1a78": "CMD [\"./egtsreceiver\"]", "c1ec6f366db140f19105919d3e6c8b5a": "COPY main.go main.go", "73674162daf2622fb3801422946f1a29": "RUN env GOOS=linux GOARC=amd64 go build -o bin/static-server main.go", "ab5b6076a29eb8d76b0cfb35ba862a27": "COPY /go/bin/static-server bin/", "83f0e55ec56716d57a50c768b77842af": "COPY www www", "820bcec0ca76863d3725ec766f4b0fe0": "ENV WWW=\"/go/www\"", "ca43fc7f9f27004f912073c43f78a679": "CMD [ \"static-server\" ]", "1cc665ce4357f50f2350b9ee963ae5c0": "FROM golang AS build", "5853203a65d17bf79266efaa57b5a15a": "ADD . /go/src/github.com/Kugelschieber/squadxml", "0ae65ef924e2fc78cf83880f48e2e13e": "WORKDIR /go/src/github.com/Kugelschieber/squadxml", "0f52052f869c5e814f457b40461dfb89": "RUN apt upgrade -y", "3ce4f9af62544f0b48348bf63bc201ba": "RUN go build -ldflags \"-s -w\" main.go", "558e25796d01e544e37f6e14dc85c693": "COPY /go/src/github.com/Kugelschieber/squadxml /app", "ed1509608dd82e9b83ecd63295f652f4": "ENV SQUADXML_PATH=\"/squadxml\"", "7ed6254946fcb1c1c968eb3f9ffc8095": "ENV SQUADXML_HOST=\"0.0.0.0:80\"", "95a9e8671cb8acc40019f5429948a8ff": "VOLUME [\"/squadxml\"]", "2cc21b8ba09f7182ed2b2387bbdcbaa0": "RUN go build --mod=vendor --tags=\"release\" ngrok/main/ngrokd", "c8a3d104c7963e1758d170da37bc5f1a": "COPY /app/ngrokd .", "e65fcd36c713de7a461a0711f78c3246": "ADD start.sh .", "d4383ba36ae2ff2e1dcdfceb8cd3fe6f": "ADD ./openssl/server.crt .", "c6f1ac776a45c576915f489634eef618": "ADD ./openssl/server.key .", "6214101fb31964d09c14809c528f2fa7": "CMD [\"./start.sh\"]", "10f1873a1d17dfcf8a881558cd1f3ad0": "ENV GO_DOMAIN=\"github.com\" GO_GROUP=\"otaviof\" GO_PROJECT=\"galaxy\"", "fec56c0185ddfb713b17e6da79cb0372": "ENV APP_DIR=\"${GOPATH}/src/${GO_DOMAIN}/${GO_GROUP}/${GO_PROJECT}\"", "90a3a5dffa807ca1a4250b0cdbd3b79c": "RUN apk --update add git make", "a1fa7ae72b16815f20fb23df63271e71": "RUN mkdir -v -p ${APP_DIR}", "ca9ff4a20c9188f548028ce8fe28f7c1": "WORKDIR ${APP_DIR}", "8ccd550db56c3bdc3efdb261034a01b2": "COPY Makefile Gopkg.* ./", "6362423845115c13cc2640ea940d75cf": "RUN make clean clean-vendor bootstrap", "6bd57519c570c68db4c92bc44fa1cb59": "FROM golang:1.12-alpine", "5ec537d21e52e6ffd94fe9b5fb541554": "ENV APP_DIR=\"${GOPATH}/src/${GO_DOMAIN}/${GO_GROUP}/${GO_PROJECT}\" USER_UID=\"1111\" APP_HOME=\"/var/lib/galaxy\"", "387cebfe6bbe3ba5467e863292f5421b": "RUN apk --update add bash", "724ea9553b42f9de6c9e672b2614ac93": "COPY ${APP_DIR}/build/${GO_PROJECT} /usr/local/bin/", "5f05c5ece3cea2b18d0420b2f6850deb": "RUN adduser -h ${APP_HOME} -D -u ${USER_UID} ${GO_PROJECT}", "d83b99770fd8c43727243f1833070f55": "USER ${USER_UID}", "ecfbc304085268ca13c4bfccd59c2dfd": "VOLUME ${APP_HOME}", "c9d84b22774f1c660b83db707a3ae3ff": "WORKDIR ${APP_HOME}", "33851b5c5d2ccc0f4174413140ec9fe5": "ENTRYPOINT [ \"/usr/local/bin/galaxy\" ]", "8ee7f5d7c4571f081755dad2cfae6b19": "RUN apk add --no-cache curl git iputils bash", "c3d246c3b5507e826e87d21eb59b370d": "RUN go install -v github.com/lordralex/absol", "c807f70bebbf92f8dddf63c082315b7b": "RUN apk del curl git", "90c22b203f5fd09603d2abce11b5e83a": "CMD [\"absol\"]", "db21dd89d62bc0e30099c225a745dea8": "FROM golang:1.11.1 as builder", "291a7de9a79e74bf5bfdd4f8079ebbf8": "RUN apt update -y", "76bf5c6ed2ece678845592ea88092375": "RUN apt install task vim-nox openssh-server -y", "d52a7531f19cfd3643d9631ca0de1b7f": "RUN go get -u -v github.com/klauspost/asmfmt/cmd/asmfmt", "4b3ba5c744ab411fd8977d7e44228233": "RUN go get -u -v github.com/derekparker/delve/cmd/dlv", "106fcff101dfa21da0c14ae50b9b1ef4": "RUN go get -u -v github.com/kisielk/errcheck", "13c74b88c89e712a4cc2a53bea5e5b1e": "RUN go get -u -v github.com/davidrjenni/reftools/cmd/fillstruct", "4f9beabd739fe6b02566e4b542847108": "RUN go get -u -v github.com/mdempsky/gocode", "ab01b4fa81a658b8298584513046a16b": "RUN go get -u -v github.com/stamblerre/gocode", "103dfb480191bfd37f69d6dbe6867166": "RUN go get -u -v github.com/rogpeppe/godef", "322b2ae018fd6323793edb93f63febb3": "RUN go get -u -v github.com/zmb3/gogetdoc", "8f820686ca10da61a850bff4a0c091d1": "RUN go get -u -v golang.org/x/tools/cmd/goimports", "01bd02ed7d32ecb090b5bce3529cbea3": "RUN go get -u -v golang.org/x/lint/golint", "cf927740c0a22f999b7aa10a62b14417": "RUN go get -u -v github.com/alecthomas/gometalinter", "864b5844eab40b08c7a646fe8154ebeb": "RUN go get -u -v github.com/fatih/gomodifytags", "151d8eb0ea7969b11737c96548bbf861": "RUN go get -u -v golang.org/x/tools/cmd/gorename", "7378c5dafc84d0e7381bee81337862d9": "RUN go get -u -v github.com/jstemmer/gotags", "ae6d0923157d1192363f91b8b541a3ef": "RUN go get -u -v golang.org/x/tools/cmd/guru", "1e731c10aa6a9b69e4f09d01495ed1b1": "RUN go get -u -v github.com/josharian/impl", "22dda7f13166f162b2c06019fc110cc5": "RUN go get -u -v honnef.co/go/tools/cmd/keyify", "3c875f4036d7caedca0eea0839917315": "RUN go get -u -v github.com/fatih/motion", "3bdf36a3458e251b329301e01f14f970": "RUN go get -u -v github.com/koron/iferr", "f32bd684e830fc504ff0cb3089430d74": "RUN /bin/bash -c \"source ~/dotfiles/fiddle.script\"", "ec76804f2185323af02bca2136a19498": "LABEL \"com.github.actions.icon\"=\"git-merge\"", "50f651ecac609d393d4792666c0fbe59": "LABEL \"com.github.actions.color\"=\"purple\"", "03de605d096c48778e4dd46ccd983790": "FROM golang:1.11.4 AS build-env", "4fd0668b11782230018528a202814e5f": "RUN go build -tags netgo -a -v -o gladius-network-gateway -ldflags '-w -extldflags \"-static\"' -i cmd/main.go", "81c9828be9480fac5f14e7ef9ae8b18b": "RUN apk --no-cache --update upgrade", "736435ca1055ead4560121e82c51e3cd": "VOLUME /root/.gladius", "877faaab497bb5e8a6d92040542a0642": "COPY /src/gladius-network-gateway /app/", "b2089a0f279776d30adf8b22a00bbd74": "ENTRYPOINT ./gladius-network-gateway", "597410338d7ac8bde165bcf468983ffb": "ARG PG_VERSION=\"\"", "73791eb95aefad2865d56ef7500c5a0e": "ARG PREV_IMAGE=\"\"", "b27540925b32aa2787edb63301ee6358": "ARG TS_VERSION=\"\"", "b6a881fa270f04d419037c5e0519d1ec": "ARG GO_VERSION=1.19.1", "89a1ec0f72110a05c7026e50b3a95ab6": "FROM golang:${GO_VERSION}-alpine AS tools", "e3e9de922af12ee7462110f4c2cba791": "ENV TOOLS_VERSION=\"0.8.1\"", "4d65e544fc394d75fdb05f206812b42d": "RUN apk add --no-cache git gcc", "67deab0ab4b3048ad90b7aa5377d6ade": "RUN go install github.com/timescale/timescaledb-tune/cmd/timescaledb-tune@latest", "364b739a4707bb3630f60fa933038704": "RUN go install github.com/timescale/timescaledb-parallel-copy/cmd/timescaledb-parallel-copy@latest", "a62eca71783daba2579e0d3a5a57f436": "FROM ${PREV_IMAGE} AS oldversions", "775e1a96a245dfe21acea978189f7bc5": "USER 0", "e728b261fac514d7215aead96c332654": "RUN set +o pipefail", "a842834d4c9e68706aabde024bc9b61e": "RUN rm -vf $(pg_config --sharedir)/extension/timescaledb*mock*.sql", "1724f9da5357965d428bf7d858381dc8": "RUN rm -vf $(ls -1tr $(pg_config --pkglibdir)/timescaledb-tsl-*.so | head -n -5)", "2295c3c3a2a9242b7276dcbdb7dbf535": "RUN rm -vf $(ls -1tr $(pg_config --pkglibdir)/timescaledb-[0-9]*.so | head -n -5)", "d29a247bdefb9098d5df4de17c62f4d2": "RUN rm -vf $(ls -1tr $(pg_config --sharedir)/extension/timescaledb--*.sql | head -n -20)", "afeb089a0fadac6646f33dc7f81f6500": "RUN { ls $(pg_config --sharedir)/extension/timescaledb--*.sql ; ls $(pg_config --pkglibdir)/timescaledb-*.so ; : ; }", "a16e150090d21d48ea01a20037b92c9b": "RUN touch $(pg_config --sharedir)/extension/.emptyfile", "9267e2287b3cbe470f06cddb38e30802": "RUN touch $(pg_config --pkglibdir)/.emptyfile", "31620922048d9b0893d7b14fb1bec00a": "FROM bitnami/postgresql:${PG_VERSION}", "32d75798e145861c0b68e5d8ecbfa6ea": "LABEL maintainer=\"Timescale https://www.timescale.com\"", "30949154385445089dd43d593d8bde64": "COPY docker-entrypoint-initdb.d/* /docker-entrypoint-initdb.d/", "aff0c7a573ecb3f0214ff50b08b6f4cb": "COPY /go/bin/* /usr/local/bin/", "79bc322603cb5040535a33dfe7469bca": "COPY /opt/bitnami/postgresql/lib/.emptyfile /opt/bitnami/postgresql/lib/timescaledb-*.so /opt/bitnami/postgresql/lib/", "cdac220630acff5548a56a92d18706d7": "COPY /opt/bitnami/postgresql/share/extension/.emptyfile /opt/bitnami/postgresql/share/extension/timescaledb--*.sql /opt/bitnami/postgresql/share/extension/", "2ae501d9535099473704f71eaf15f58c": "COPY bitnami/timescaledb-bitnami-entrypoint.sh /opt/bitnami/scripts/postgresql/", "64ab409b60f0f580d4e54cd22c084307": "RUN rm -v /opt/bitnami/postgresql/lib/.emptyfile", "37e7917b5706ce25db99158cae8de9b9": "RUN rm -v /opt/bitnami/postgresql/share/extension/.emptyfile", "0e5bf7719b6256b910aa2aa3b9961d10": "RUN mkdir -p /var/lib/apt/lists/partial", "354eb6a8af6a0e04e2b34948072e9c38": "RUN apt-get -y install build-essential libssl-dev git dpkg-dev gcc libc-dev make cmake wget", "4be5060b643662e3228a26fb48cc0153": "RUN mkdir -p /build/", "7abce70a91c326c8370702277306b2e3": "RUN git clone https://github.com/timescale/timescaledb /build/timescaledb", "e8510b6845592a2eb13f9baf6ec75186": "RUN cd /build/timescaledb", "f840d80682c891f9f43a5ec14d814116": "RUN rm -fr build", "57f333dfdc1fb7f6ad1b8cd3e275308e": "RUN git checkout ${TS_VERSION}", "3514a2029167dfc21cfae02c21291e10": "RUN ./bootstrap -DCMAKE_BUILD_TYPE=RelWithDebInfo -DREGRESS_CHECKS=OFF -DTAP_CHECKS=OFF -DGENERATE_DOWNGRADE_SCRIPT=ON -DWARNINGS_AS_ERRORS=OFF -DPROJECT_INSTALL_METHOD=\"docker-bitnami\"", "2acf18783a9fc890077251015858af7a": "RUN cd build", "3f2f1074b377489f2a57eca1333762be": "RUN cd ~", "d01a22218a375b225d7831ace4c89576": "RUN apt-get autoremove --purge -y build-essential libssl-dev dpkg-dev gcc libc-dev make cmake", "197906c1c1900bfb46176fc465ced3eb": "RUN apt-get clean -y", "e0b774261b68f9a9ff2527a24fa574fb": "RUN rm -rf /build \"${HOME}/.cache\" /var/lib/apt/lists/* /tmp/* /var/tmp/*", "87b631ff989896c34989f4699b177c99": "USER 1001", "c35630b85c508f2886bf4ad8ca5d3a29": "ENTRYPOINT [ \"/opt/bitnami/scripts/postgresql/timescaledb-bitnami-entrypoint.sh\" ]", "0a34122054ac971845d0bd425e7ab94f": "CMD [ \"/opt/bitnami/scripts/postgresql/run.sh\" ]", "ecc6f7b96465854111828e5eeec5bc6a": "FROM golang:1.14", "9863570fceb0f67c5f0523fd6724a56f": "SHELL [\"/bin/bash\", \"-c\"]", "414aa3c66128f7a8c8965f1c5f711b3e": "RUN set -o pipefail", "bf13ea29acc0274ac279edd1490cf9d6": "RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -", "4e33f15014c9c9ef494df74b6061a068": "RUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list", "74494494de0b995d2d12031e6fad4409": "RUN apt-get install --no-install-recommends -yq nodejs yarn", "1cff1d4dabcb64f895ffadb6c16bdd25": "RUN rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*", "22dc082857d235d8b0ac05d8c64ef4e4": "ADD go.mod go.sum ./", "aed663bf1628310d65486a832ee63fdc": "RUN rm -rf node_modules", "eab82c86ce283742e5cb9742519b4170": "RUN make BUILDFLAGS='-mod=readonly'", "48416624f52213819a5ab0c7909ca8ba": "CMD [\"./prchecklist\"]", "d8fc1c6cc3bc242fbb0ef73c810c7f00": "RUN apk --no-cache add build-base git bzr mercurial gcc", "073d970e07666c9f1229df1df3100f8f": "RUN GO111MODULE=on go build -o cgw cmd/cmd.go", "79a16745a946716fd1f9bd1c47bfd522": "COPY /src/cgw /app/", "ba8caec7b60844dbe75e519f5b09a0b9": "CMD ['./cgw', ' --config', './config.yaml']", "19d13f53bde0b5e87f60e9875b61b99e": "FROM golang:1.13-alpine AS server", "8935c6ae7e27eb26c2024188da536196": "COPY go.mod go.sum *.go /build/", "0fd57396f048e5688dbe7c1e85da7086": "COPY cmd /build/", "412e892ca0bd0580231252d2e0d8bb41": "COPY internal /build/", "e71dc335032653dec0de0118bbcb124a": "RUN go build -ldflags=\"-w -s\" github.com/ulfurinn/talltale/cmd/talltale", "bb2dbac6e4f42af517ce40f09565052c": "FROM node:alpine AS react", "8b642cda1904c489ce884b6e4ed875cf": "COPY config /build/", "5e32fa9cab11001338eb8ac514e36857": "COPY public /build/", "d383ff5a98d52fdab4e4d0c3eb100822": "COPY scripts /build/", "de7aa4dc68c2e63bd465c9810343ce4b": "COPY src /build/", "25a56e65740d15a2e0c4b3c5ae7852f3": "COPY package* /build/", "539e6790a5be56afa224aa7c185ccfaa": "RUN npm run build", "9427cd271728cd82f2cdae655557f0b2": "WORKDIR /talltale", "42b2ba16a67555ff95c1677a5876614e": "COPY /build/talltale ./", "e9a8d19f844cd3b4096b8cdc45ff06a8": "COPY /build/build ./", "62c6f2bd0536577146351fd73a558d43": "COPY worlds ./", "9e3d3b629c089a1c3d123cdd3d13c163": "RUN ls -l", "174a28a510c1213d7fc7e23249520edd": "CMD [\"./talltale\", \"--world\", \"looking-glass\", \"--allow-editor\"]", "a7f61bf6f8450378cc0288ef892e3998": "RUN mkdir -p /go/src/github.com/lordralex/absol", "fe59770fb728ba357d433e51caab5f0d": "WORKDIR /go/src/github.com/lordralex/absol", "eeb585f0200441fba63770633919ca13": "RUN curl -L -o /go/bin/dep https://github.com/golang/dep/releases/download/v0.5.1/dep-linux-amd64", "2c298ab8120b2fd92a59651618fca9b1": "RUN chmod +x /go/bin/dep", "3c8932500f6b9007462abf371227a0e7": "RUN CGO_ENABLED=0 GOOS=linux go build -ldflags=\"-w -s\" -o beagle main.go", "d158e849868f55b23772d12c852b4245": "FROM alpine:3.10.2", "cdc29e743529083965c1a0be43666808": "LABEL maintainer=\"danielkvist@protonmail.com\"", "9042f59c2f2601d77956ff3d4e9a46c5": "COPY /app/beagle /app/", "aebeb75ac82a774ddc112bda80723aaf": "COPY /app/urls.csv /app/", "d21a8ea03775a23aa1d312326dc6eeed": "ENTRYPOINT [\"./beagle\"]", "12cb29593eff2b16760d541dac36de70": "LABEL maintainer=\"Erwan ROUSSEL <erwan.roussel51@gmail.com>\"", "6357904d481a2eb58a6fc972d06cfc12": "ENV FLUME_DATABASE_ADMIN=\"admin\"", "657fe0d3dfe70e5c54d0d855d41604f1": "ENV FLUME_DATABASE_SECRET=\"this_is_a_secret_token\"", "07b0a87c32bfe219067afd417425c718": "WORKDIR $GOPATH/src/github.com/flume-cloud-services/database", "8743f1824ec8a9e090579bf54f1cabb6": "CMD [\"database\"]", "0c2f9ddc99d57dae6cf1929b868814e0": "COPY . /go/src/github.com/malice-plugins/sophos", "bac46bbf2991a4c0ce8f18c14f4ad169": "WORKDIR /go/src/github.com/malice-plugins/sophos", "cc6bc663f923c339e920f86a23e071db": "LABEL malice.plugin.repository = \"https://github.com/malice-plugins/sophos.git\"", "c95c52ca7f28d31850d24ef8d11c440b": "RUN buildDeps='wget ca-certificates'", "a110fd9d47d42347809fbce6139d5545": "RUN DEBIAN_FRONTEND=noninteractive apt-get update -qq", "7a07483438624d365a83dc8e334fea5e": "RUN apt-get install -yq $buildDeps", "93468774df2832458bbd478dfd69eb86": "RUN echo \"===> Install Sophos...\"", "421522afe59422388e8b03d51ddc2c70": "RUN wget -q https://github.com/maliceio/malice-av/raw/master/sophos/sav-linux-free-9.tgz", "cf6d3819f15cac817059d86763d0bef3": "RUN tar xzvf sav-linux-free-9.tgz", "f7b72579e0cfe5ad0694f0dfd02c3a4b": "RUN ./sophos-av/install.sh /opt/sophos --update-free --acceptlicence --autostart=False --enableOnBoot=False --automatic --ignore-existing-installation --update-source-type=s", "a353d9a28dcf3ffb70d51d453aea3f31": "RUN echo \"===> Update Sophos...\"", "9d697a1aa1b52a34494d020058d48cb0": "RUN mkdir -p /opt/malice", "b925ed817c945638690693d554267a0c": "RUN /opt/sophos/update/savupdate.sh", "b25913d3ce969934c751a098e44705dd": "RUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /root/.gnupg", "3f8d3e736f8bc6d541858e7a450d6328": "ADD . /go/src/github.com/Pigmice2733/scouting-backend/", "35af26362b127ac163cd9f34b810f40d": "WORKDIR /go/src/github.com/Pigmice2733/scouting-backend/", "88ec8c74ac72b6f0c7273cd4f6b00977": "RUN go get -t -v ./...", "2ef64b9ffa244fe1ff20731f333c63d6": "WORKDIR /go/src/github.com/Pigmice2733/scouting-backend/cmd/scouting-backend", "318eea4d7f28239a716449a44e8ecfb4": "ENTRYPOINT [ \"scouting-backend\" ]", "d955d03d93ab23186cb23210b8cdbf36": "FROM golang:1.11.4", "e938bec0a1933a80afac96ce0a2e11b8": "WORKDIR /go/src/s420", "85038f5060144d35df8f0f143177b4db": "RUN go get -v -d ./...", "f34c63d74f456873081b3381a2ab77ae": "CMD [ \"launcher\" ]", "8375dcb03a22a2749ed9f76c42da8ccc": "COPY ./", "c2c51dc7a24638ff45d95e72c534383a": "WORKDIR /exporter", "948c7eba6afd74411da27d530e42bb9e": "RUN pwd", "def91e8727cbd6112345f8c33dd53969": "RUN make build-linux", "51d4df86410f5f518598a03d06d27a9a": "COPY /exporter/bin/linux_amd64/aws-apigateway-exporter /bin/aws-apigateway-metrics-exporter", "17b9b89adcf8282d3579b6f7264f1de0": "ENV USER=\"appuser\"", "344fe4c055644b42be624489e0bcd887": "ENV GROUP=\"appusers\"", "1a13eb8da03e76cd64e951b356ff7300": "ENV UID=\"9999\"", "7eac992d1295d0372f434c4f0f7b92e6": "ENV GID=\"9999\"", "7d045f57efadc3666fe41b19cbe000f0": "RUN addgroup --gid \"$GID\" \"$GROUP\"", "cce12e065223644d905b6556dd1fd81a": "RUN adduser --disabled-password --gecos \"\" --ingroup \"$GROUP\" --no-create-home --uid \"$UID\" \"$USER\"", "bf078e37e6b8c71f04eb3ff39143ff3b": "USER \"$USER\"", "795d2a6f6de91ac5220437cdbacdff2f": "EXPOSE 9389", "33f02066b6ca0e6531ae468dcaa1a6b4": "ENTRYPOINT [\"/bin/aws-apigateway-exporter\"]", "e650dcf839fb258740ef7a3445f767bf": "LABEL stage=gobuilder", "02c505f9695f5699c728d485e8afcbd3": "ENV GOPROXY=\"https://goproxy.cn,direct\"", "6afab916432451b7f1807a3029b0a778": "RUN apk update --no-cache", "633bf162e7067304f3a3493baa20e4f9": "RUN apk add --no-cache tzdata", "9c155ff4d3731ba64de07dbd079a346c": "RUN go install google.golang.org/protobuf/cmd/protoc-gen-go@latest", "4df54d21f3bbbc9f236370b97bc70fc9": "RUN go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest", "ecdf0392d284f220c050e6126b731d97": "ADD go.mod .", "495e31102e381ec31df2c942d9e63060": "ADD go.sum .", "d2c66d1d89cf33f006313e2e49bfd54c": "RUN go build -ldflags=\"-s -w\" -o /app/goctl ./goctl.go", "76c279ae1d537989b5b02b4f8669a4ea": "RUN apk add --no-cache protoc", "f8f26aacac9100e253c3d15f7ae50306": "COPY /usr/share/zoneinfo/Asia/Shanghai /usr/share/zoneinfo/Asia/", "e6fa39631f36dc841789cdb9030de83e": "COPY /go/bin/protoc-gen-go /usr/bin/", "4df06ae2ffa53dfdae1c5c1ca9da8df3": "COPY /go/bin/protoc-gen-go-grpc /usr/bin/", "c7c7f4d83521bdf35e741e3d36146d8d": "COPY /app/goctl /usr/bin/", "52d1d59aa19c767c69bdb88aa5be473f": "CMD [\"goctl\"]", "10ce91379f39c4b3dd5cdc173ff0a57c": "RUN go get gopkg.in/DataDog/dd-trace-go.v1/ddtrace", "b6166a94706d2680b32037f60ebed009": "RUN go get github.com/DataDog/datadog-go/statsd", "11fafd932f619d80cea903194ebb97a8": "RUN go get \"golang.org/x/xerrors\"", "8ea8b26630c7024e8ab78c3cfb29334e": "FROM golang:1.11-alpine", "95a0384b110297c242a66992ad3467ab": "RUN apk add git nodejs-npm", "950db800c0287face2e9d79ce14bbe41": "RUN npm i -g npm", "93697d4b311159de980b4bf0e5ac923a": "RUN go get -tags \"v0.13.7\" -u -v github.com/gobuffalo/buffalo/buffalo", "743909412fcdae65e9faf7f3ddee4289": "FROM golang:1.12.0-stretch", "6ffa059423b8c69bfddc52032a140dc8": "RUN mkdir -p /root/gomitmproxy", "738abe8b53ecb65ad76e786b939bd510": "WORKDIR /root/gomitmproxy", "8a0c580db978e4da1d46578c28ea5142": "COPY . /root/gomitmproxy/", "95b0c8708e66c7092959c0889f59c80f": "RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o gomitmproxy github.com/jmizell/GoMITMProxy/cmd/gomitmproxy", "b2b663d432d62ec86b84e26735824bc3": "COPY /root/gomitmproxy/gomitmproxy /root/", "cf330a1ccc526296358ff35b80e7b277": "CMD [\"/root/gomitmproxy\"]", "536c380602e67d60ee8850ab92ac2cff": "FROM golang:1.12 AS builder", "12240e13a6b276c556f2d859944c98c1": "MAINTAINER Kazumichi Yamamoto <yamamoto.febc@gmail.com>", "3e58d320cb811da4d567925e8fd62cbb": "LABEL MAINTAINER 'Kazumichi Yamamoto <yamamoto.febc@gmail.com>'", "adb592801bbf91947ac1b29d0c904bcc": "RUN apt-get -y install bash git make", "b0c6a276b09541833143056008e6261e": "ADD . /go/src/github.com/sacloud/sakuracloud_exporter", "3ebbecb49d72286b5d851a95fb504210": "WORKDIR /go/src/github.com/sacloud/sakuracloud_exporter", "0e88e7c2914db824c6e38d2a37a5905d": "RUN [\"make\", \"build\"]", "b9108b2e20eca476243bbb0dac642ad3": "COPY /go/src/github.com/sacloud/sakuracloud_exporter/bin/sakuracloud_exporter /usr/bin/", "f7fb032dec0ea4695f759a4aeaaa6931": "EXPOSE 9542", "f20215e295cdf1491a53deba550a08b7": "ENTRYPOINT [\"/usr/bin/sakuracloud_exporter\"]", "55211fcc554d80d3d92644d9e6e4817d": "WORKDIR /go/src/go-droneci/main", "db652a7b66d77b9154bd44b65ff00163": "ARG SENSORONI_VERSION=\"\"", "89dcfa8cb1094a518661a61ee06b6e9f": "ARG UID=\"\"", "0d66c4aac620955d93b85a521cdc5a72": "ARG GID=\"\"", "e31eb22ea351244a5d1beb0bdac7bf4e": "RUN apk add libpcap-dev bash git musl-dev gcc", "85b6725ef635e0237656b801dfd221c1": "COPY . /go/src/github.com/sensoroni/sensoroni", "b3d345ce2df3e523227bae6e005067be": "WORKDIR /go/src/github.com/sensoroni/sensoroni", "e03d982d4a94349301ef3b742f90bdec": "RUN ./build.sh \"$SENSORONI_VERSION\"", "fed459c872535406c77c6185a889d415": "RUN apk add tzdata ca-certificates", "adb6869716337eb4c39a84215d9ee73a": "RUN echo \"The gid is $GID\"", "ce944bdf60c49e7441efe959ff99c522": "RUN addgroup --gid \"$GID\" sensoroni", "01b7a6d3cb58af638e0c1be841cec9c5": "RUN cat /etc/group", "50ea192db4b1563c75559b62831d89fb": "RUN adduser -D -u \"$UID\" -G sensoroni sensoroni", "9eec3f7a6e779f1ec154b3947b896a6c": "RUN mkdir -p /opt/sensoroni/jobs", "3d4d74f7a74efda257d620d00976902e": "RUN chown sensoroni /opt/sensoroni/jobs", "742d5fb4a3e6432580266488a2d407aa": "RUN mkdir -p /opt/sensoroni/logs", "a35ad5add89dd90987cbc48b0e314e7e": "RUN chown sensoroni /opt/sensoroni/logs", "bd429dcffe6177e9f2edf77ca35190df": "WORKDIR /opt/sensoroni", "1e669bf9c15899ebc93ec01f89c5ede6": "COPY /go/src/github.com/sensoroni/sensoroni/sensoroni .", "87859e8c20544ffe81ac823f393271d0": "COPY /go/src/github.com/sensoroni/sensoroni/html ./", "f83239f12b2453343d32c13faf2be381": "COPY /go/src/github.com/sensoroni/sensoroni/COPYING .", "5c660aba72af36c93fbb5c404ff48bc8": "COPY /go/src/github.com/sensoroni/sensoroni/LICENSE .", "0237be5916b2695d2125e868c64615d8": "COPY /go/src/github.com/sensoroni/sensoroni/README.md .", "d2eec01e09781092e211b7c97cee132c": "COPY /go/src/github.com/sensoroni/sensoroni/sensoroni.json .", "909220aaf951e04bfc2097473a8a7459": "COPY /go/src/github.com/sensoroni/sensoroni/version.json .", "d76a88572f90c2de08f74d7bda25e0c7": "USER sensoroni", "a28a5bc9a07f98826fe84ba5c7ae8f91": "EXPOSE 9822/tcp", "2af4a10c564f4155f37f4ec0d09c08a4": "VOLUME /opt/sensoroni/jobs", "6d2fe5c9786a2d9055569d55fe976250": "VOLUME /opt/sensoroni/logs", "6cbd32c6535fb69a41bf1d7df5a1d8f5": "ENTRYPOINT [\"/opt/sensoroni/sensoroni\"]", "b38bee503c3eb9878249367ac950d07e": "EXPOSE 8001", "3e170fd10a423927afe03d15c177a42d": "FROM golang:1.12.4", "b6e06c3c03b3014d25036918ce6b235e": "WORKDIR $GOPATH/src/solarium-data-collector", "c53d3826b8f5f98dca822560bd8fc270": "RUN go build cmd/solarium/main.go", "1d5ea92d2235a939f063c817341a96be": "RUN apk add musl-dev git bash curl ncurses", "58127f7e18ebfc96ec415b868d3a1ea5": "WORKDIR /tmp", "433fc0ef26f0f367e62feb3aa517349c": "RUN curl 'https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-install-linux-4.1.8.tar.gz' > openshift-install.tar.gz", "f0583dcfd7b9616f70566f25c6da5f5b": "RUN tar -xzf openshift-install.tar.gz", "b37d73ff18ebfdb79883274c75388483": "RUN mv openshift-install /usr/bin/", "f2174c68283048bf06f1445a275aabd2": "RUN rm openshift-install.tar.gz", "34f997f559749e2d75caff46680da240": "RUN curl 'https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux-4.1.8.tar.gz' > oc.tar.gz", "ee57ec821e30f36ea751c230a4f6e1f7": "RUN tar -xzf oc.tar.gz", "7884d4ed70570b2e93027ebdbe6017c1": "RUN mv oc /usr/bin/", "ea85c317d9c9df3dfd5f17bf1664fe57": "RUN rm oc.tar.gz", "943471b21a9594bdb5485287bb8131a2": "RUN curl 'https://get.helm.sh/helm-v2.14.3-linux-amd64.tar.gz' > helm.tar.gz", "a3840e0f3ac85a0466d701b132f1cf49": "RUN tar -xzf helm.tar.gz", "0af397db0ab82c1da833a875bafda941": "RUN mv helm /usr/bin/", "a41c72fef2a70552e1ef82bd79499957": "RUN rm helm.tar.gz", "e06416c7682bf63841875b5c71524183": "RUN adduser -D autocluster # -D = no password", "7782ec8f4ccf8511c3ef6dae2936afa7": "RUN mkdir -p /etc/auto-cluster", "4272b7b487ab236888095962d8f95716": "RUN chgrp -R autocluster /etc/auto-cluster", "ee0bb93e619caa10631e9ce63a86c9c8": "USER autocluster", "407e2bf6bb6cbc8721be484407652c1a": "WORKDIR /home/autocluster", "ecd72209383b7131dde1d6c262ed5b62": "COPY go.mod go.sum /home/autocluster/", "2ebf2b55ae111188eaa97c674a76a5db": "RUN go build -o auto-cluster .", "91f3d626fdbe8a6be09b946767ce6638": "COPY scripts scripts", "2331f4f1c6be2bd7180bb653220dbd41": "CMD /home/autocluster/auto-cluster", "94abd3d932fc37a29aaf055eb3a3276d": "ADD . /go/ovirt_exporter/", "431f38c9458749ca8f5e8ee857791e55": "WORKDIR /go/ovirt_exporter", "d7dbe9f9497983b1b5bd8d02eb3477b3": "RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o /go/bin/ovirt_exporter", "c80d8b009104983c340e2043e4d7aa06": "ENV WITH_SNAPSHOTS=\"false\"", "30cc9d754bbab5e924f033c98ef04b7b": "ENV WITH_NETWORK=\"true\"", "85d9901c88185b068e71fbc36c78669a": "COPY /go/bin/ovirt_exporter .", "6ba0b4395a94aa987b592cdf520579a4": "CMD ./ovirt_exporter -api.url=$API_URL -api.username=$API_USER -api.password=$API_PASS -api.insecure-cert=$API_INSECURE -with-snapshots=$WITH_SNAPSHOTS -with-network=$WITH_NETWORK", "5aed8fa769eb31be4d168f6f4e4d4d2d": "FROM golang:1.10-alpine3.7 as builder", "da8440d44c0321a3d95fd26654c910ff": "WORKDIR /go/src/go-circleci/main", "008f47d4bbe66e96af711d3294789041": "COPY /go/src/go-circleci/main .", "564b1c61cb91a71ad7a0d07765a8d68d": "COPY . /go/src/github.com/malice-plugins/windows-defender", "29ef53cea202bae630b6331e9b05c9ce": "WORKDIR /go/src/github.com/malice-plugins/windows-defender", "4d8ae42c242ccfdfb1a5752586583e07": "LABEL malice.plugin.repository = \"https://github.com/malice-plugins/windows-defender.git\"", "257a20eb05e434cd2c28fa045f1e0835": "RUN buildDeps='libreadline-dev:i386 ca-certificates libc6-dev:i386 build-essential gcc-multilib cabextract mercurial git-core unzip wget'", "6290729269de97373e41dc13db63e8bd": "RUN apt-get install -y $buildDeps libc6-i386 --no-install-recommends", "2dd2c866092d6d52d2ae7f3697e2e5ac": "RUN echo \"===> Install taviso/loadlibrary...\"", "70261c23b07a9313c5ec968e9b0484d8": "RUN git clone https://github.com/taviso/loadlibrary.git /loadlibrary", "e1a8dfa10fdad01fe4f68f433d72a145": "RUN echo \"===> Download 32-bit antimalware update file..\"", "30751311cfbbb437c91cc37fa9b978cc": "RUN wget --progress=bar:force \"https://go.microsoft.com/fwlink/?LinkID=121721&arch=x86\" -O /loadlibrary/engine/mpam-fe.exe", "ea316cfad398e59bc85cf15109ab4d5c": "RUN cd /loadlibrary/engine", "9875889226212863fca27f8456b3c12b": "RUN cabextract mpam-fe.exe", "bb99fded90a8005a89b9f8fe1b9d4a9a": "RUN rm mpam-fe.exe", "ee89511dca86fbe4ee73f38b78d69427": "RUN cd /loadlibrary", "22e3dbfbdd9378589579f49405f46b85": "RUN make -j2", "a284867afd37c140bdc64896ff7ef3b3": "RUN apt-get purge -y --auto-remove $buildDeps $(apt-mark showauto)", "777b66a1fded288aeb306e7128ad4003": "COPY update.sh /opt/malice/update", "d5c2334cd4ce48fa4b83d4240972c8c3": "MAINTAINER ronmi.ren@gmail.com", "cc3692fdffb5e9affa13d76aa04f1191": "RUN apt-get install -y firefox-esr", "a08b82ba3a8fd637740b69aedbd7ec17": "RUN rm -fr /var/lib/apt/lists/*", "f56f25930fe962c70ef6f569a18e4ecd": "ADD *.go /go/src/github.com/raohwork/prpr/", "c8828faa25e5c5193b923503764ab76b": "WORKDIR /go/src/github.com/raohwork/prpr", "95dfcebabc83c9f3cecd83db76a8329b": "RUN go install github.com/raohwork/prpr", "3e4ef7c12a329e5844bfad2f4f72168b": "CMD /go/bin/prpr", "3edc8c47436f7ba422ad0abc95bbc064": "RUN apk add --no-cache git ca-certificates", "a0fb4e279a4fe0abff7de51247a8e0e3": "WORKDIR /opt/genesis", "8ee1e85be8bb34491007b04aa7fb1d9f": "RUN CGO_ENABLED=0 go build -o genesis cmd/web/*", "9d561ecc3e1ab2dd875f1ba44febc5ed": "COPY /opt/genesis/genesis /opt/genesis/", "ee1231b3c6be9d7b53936d09ae0dab86": "COPY /opt/genesis/static /opt/genesis/", "8a53b9699cab687c7895d6dccc63c19d": "WORKDIR /go/src/intravatar", "a9d905085f0297664ba6423998fab4d7": "RUN go get -v -d", "dad3caf845cac3c99bad32b7df609dd2": "RUN go install -v", "8f9fe7c63fb2ab4aba8e423ebbfde124": "RUN rm -rf /go/src /go/pkg", "9b4f237f171a8ebb53f0888f885f8be3": "RUN apk del --purge --no-cache git", "aef51834a4356a62cb2ad9e7f9991443": "RUN mkdir /intravatar", "cbce2f2301d14fe410338db80a9e88b1": "WORKDIR /intravatar", "b093f3d0c5d850cfba5f50624659527e": "COPY resources resources", "23bcf8b83f361e174d5c477913aada07": "COPY config.ini .", "98813e501e2d5d32d99c2126ca829d06": "ENTRYPOINT [\"intravatar\"]", "4853580eeb5668121dcb727be550a06a": "ENV RUTHIE_CLICKHOUSE_ADDR=\"\" RUTHIE_CLICKHOUSE_ALTADDRS=\"\" RUTHIE_CLICKHOUSE_PASSWORD=\"\" RUTHIE_CLICKHOUSE_USERNAME=\"\" RUTHIE_CONSUMER_NAME=\"\" RUTHIE_REDIS_ADDR=\"\" RUTHIE_BATCH=\"10000\" RUTHIE_PENDING_BUFFER_SIZE=\"1000000\" RUTHIE_PERIOD=\"60000000000\" RUTHIE_PIPE_BUFFER_SIZE=\"50000\" RUTHIE_PREFETCH_COUNT=\"30000\" RUTHIE_QUEUE_NAME=\"ruthie\" RUTHIE_SHARDS_COUNT=\"10\"", "79f135b185fba94fdf13c8d905435f5f": "ARG GOBIN=/go/bin/", "b74eafa0493d1f8f0c1e0f9b62296306": "ARG GOOS=linux", "ada68166ab8c9b3933059a897872a501": "ARG GOARCH=amd64", "cd8ee66a1c1ce31fa8cb442c044bb26f": "ARG CGO_ENABLED=0", "421fbd0fd42b9d862c703a04897a134f": "ARG PKG_NAME=github.com/DeFacto-Team/Factom-Open-API", "dc42f66eb54ecfda72e0d9b96c1b1857": "ARG PKG_PATH=${GOPATH}/src/${PKG_NAME}", "7f41d558324e89fa8cfbaba566f790b1": "WORKDIR ${PKG_PATH}", "c3e9ebadf1eb7117365561948f27e790": "COPY glide.yaml glide.lock ${PKG_PATH}/", "2e8e212e9fa42a98109e2011b39f1d52": "RUN curl https://glide.sh/get | sh", "a9694eb051a249eb86a5ff764cf97ed0": "RUN glide install -v", "818e534372148b9037e026ae49bcd92f": "COPY . ${PKG_PATH}/", "ef5c19c7c0ab51216c7fad7df2f2e4e9": "RUN go build -o /go/bin/factom-open-api main.go", "80a9a4802f45c7d7063fdab4586cd000": "RUN go build -o /go/bin/user admin/user.go", "afe79cdab83a153e313743377b9be669": "RUN apk --no-cache add bash ca-certificates inotify-tools", "d27d4d1d4f8760cd881c3caeb87de1c1": "RUN adduser -D -G app -u 1000 app", "78ded8757800f08a3101be7f17ec1bbf": "WORKDIR /home/app", "ba4d71aa003eb9e24f3e8af3c94eb130": "COPY /go/bin/factom-open-api /go/bin/user ./", "41987b31493e6b4b4684e9e68be79934": "COPY ./entrypoint.sh ./", "963aa0cbc9520425900547fc34162012": "COPY ./migrations ./", "33ad21fb134e5e3d20dc908cacc1df30": "RUN mkdir ./values", "efc212009afe657ea584c68c95b67e21": "RUN chown -R app:app /home/app", "19b03847fa5acc7ebb4a3c4592fe5e8d": "EXPOSE 8081", "0daf5d7b0385159c1256e8cc46542052": "ENTRYPOINT [ \"./entrypoint.sh\" ]", "f72beda7fd7304360156733058c5d1ab": "CMD [ \"./factom-open-api\", \"-c\", \"/home/app/values/config.yaml\" ]", "797eeb0ee3f3fdc0f26945a209961b40": "FROM golang:1.11.2-alpine3.8 AS builder", "685eb7d492ca8e0034d3828e160c527b": "ENV PROJECT_DIR=\"/go/src/github.com/chez-shanpu/coding_challenge\"", "e1a99e9052512524056560c2c628e8ff": "COPY ./app ${PROJECT_DIR}/", "48f3ad60bb52967a8b58c279a285dc32": "COPY Gopkg.toml ${PROJECT_DIR}/", "3cec49c58b0bcef642adc41687767d65": "COPY Gopkg.lock ${PROJECT_DIR}/", "d2959d5a7f9fab13bb15bcd9043c4009": "WORKDIR ${PROJECT_DIR}/app", "467098a89a2aa9d96c788fe1529cb41f": "RUN go build -i -o ./.build/coding_challenge", "9a6c0d594a87d8d0662cf94d984529e6": "FROM alpine:3.8 AS production", "1af4328a0114ea463e2d400acf375960": "RUN apk add --no-cache postgresql-client", "e81578a3aa364489bb8ae76898fccc61": "COPY ./wait.sh /", "b9d2be8c8c6574e8836bdf0f1aa4afac": "COPY /go/src/github.com/chez-shanpu/coding_challenge/app/.build/coding_challenge ./", "ca310af4fcf58b0afaa58e304a47cefa": "CMD [\"./coding_challenge\"]", "a59c2c42313bc01b9aadceada153e88c": "FROM golang:1.14.0 AS builder", "f2cfc64c5cd11117e6f61728701e530f": "RUN go get -u github.com/pvr1/anypay", "93fdd8473fdd0af14cd58454d39304fa": "RUN go get github.com/kardianos/govendor", "292cccda3afdf67b6506f5bcd9c8217c": "RUN cd /go/src/github.com/pvr1/anypay", "83a3d6cc3fc828d3387ecc921d5b9fe9": "RUN CGO_ENABLED=0 govendor init", "73a3632aad0f64ff542c718af8680738": "RUN CGO_ENABLED=0 govendor fetch +missing", "8254ce17fcfd6deb2423b13af91ddcb8": "RUN CGO_ENABLED=0 go build -tags netgo -v -a -ldflags '-extldflags \"-static\"'", "711440f3782a2a6c0b5700e0cf6e820a": "RUN mv ./anypay /usr/bin/anypay", "cce69e46ebafa507240d75d8a5ef0d0f": "FROM alpine:3.11.3", "d6409b92e996a2366f45b348e430be48": "COPY /usr/bin/anypay /usr/local/bin/", "6e191096a1cdb760de586ca60b511f79": "COPY ./openapi.json /", "545a2e05897e855cb7eb8012910edcc7": "COPY ./openapi.yaml /", "0138d2c04ee0b02c6a99b42177a60ef8": "EXPOSE 8080/tcp", "3b8d055f8de063302f3e72f62315d0d9": "ENTRYPOINT [ \"anypay\" ]", "be87d224187bdafc8eaa186232610bec": "RUN GO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags '-w -s' -o dynamicProxyEip", "93afc754cee4b82d7111b029bc3e8e53": "WORKDIR /app/backend", "6fde75d14c9b73444a07c03bc4a07d28": "RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -o /main .", "5504043861013f53802d5619b299e09a": "COPY /main ./", "645b64cc69a5fd21811a1a23bf4832a5": "RUN chmod +x ./main", "bd54b96ff9bb522c8520abe4a3359e0f": "ENTRYPOINT [\"./main\"]", "e54762991ff0c46af6698676b88a9504": "FROM golang:1.12-alpine3.9 as builder", "9eff07837871d695f6eab8da18a9971f": "RUN apk add git glide build-base", "231ff9dcc82e64855cbe76bab4f16f81": "ENV GOPATH=\"$HOME/go\"", "96ef7729d14844c400852eebc8713885": "ADD . ${GOPATH}/src/github.com/aergoio/aergo-indexer", "b4d0e9568c1c7eb144ec2b2dbed229e8": "WORKDIR ${GOPATH}/src/github.com/aergoio/aergo-indexer", "3577276f806219edd4d31e39c6dcf595": "RUN apk add libgcc", "d4fffb6d4ec3fc7f22206a67d59faa6e": "COPY $HOME/go/src/github.com/aergoio/aergo-indexer/bin/* /usr/local/bin/", "6317c6287b9161c956ca2f94318f3b08": "CMD [\"esindexer\"]", "ec342710a78c82073ced08adb412474e": "FROM golang:1.13-alpine AS builder", "fd401e5ad8a6e4df0f87d48a5ffafd16": "RUN apk add gcc g++ --no-cache", "c39b19a50866aab1dbaf3f019dc1173a": "COPY ./controller ./", "77a37bcd3c5bcaa536ee2941c21e29f7": "COPY ./model ./", "abdeaef1800c8e59b38510b653f8c5e7": "COPY ./pkg ./", "eb593ffe975acc9ed0d98390b482687a": "RUN CGO_ENABLED=1 GOOS=linux go build -a --ldflags=\"-s\" -o passwall-api", "a81905b62fb0199d7e2d7ae1dd2722a7": "COPY /app/passwall-api /app/", "2578f290879e7af16fd01f17c063f1c0": "ENTRYPOINT [\"/app/passwall-api\"]", "a5a5e5ae8b883761219bac9928769855": "FROM golang:1.9-alpine as builder", "4e613610c17e249fbc9773b111a38616": "WORKDIR /go/src/github.com/linki/chaoskube", "7aeb5120a60796d735d81ae9d2a0589a": "RUN go test -v ./...", "60a040ac8bb026f56a6ba2ddf3a3c19a": "RUN go build -o /bin/chaoskube -v -ldflags \"-X main.version=$(git describe --tags --always --dirty) -w -s\"", "cc58ea260de372b9571711ae429aeefb": "MAINTAINER Linki <linki+docker.com@posteo.de>", "ea3493767e402c524f3153d6ae215153": "RUN apk --no-cache add ca-certificates dumb-init tzdata", "1e277e9c5eb24fc0d17969cdcc5b97bf": "RUN addgroup -S chaoskube", "c01124c78943b1d22dd7f1a68df9853e": "RUN adduser -S -g chaoskube chaoskube", "181727f27e65798dcd25b34e7e4f4e30": "COPY /bin/chaoskube /bin/", "12bb7e5dc9ad2bc315e8713d2358a865": "USER chaoskube", "e1fa9a1f7daba78b7406e9abe5678518": "ENTRYPOINT [\"dumb-init\", \"--\", \"/bin/chaoskube\"]", "67200a64996b03ae726db50797931420": "WORKDIR /go/src/github.com/gempir/justlog", "84dd762ec93ff556ded2947fa87d657d": "COPY /go/src/github.com/gempir/justlog/app .", "b46514fd347c16e211085257466b7737": "CMD [\"./app\", \"--config=/etc/justlog.json\"]", "2388f12ea73804f8eb1c2c68ddda296a": "EXPOSE 8025", "73934bfba1c25a28866fd10f6b074dbc": "RUN apt-get update -y", "948e2d381e6185648d300a0fa99bd7ef": "RUN apt-get install -y apt-transport-https curl gnupg gnupg2 lsb-release software-properties-common git ca-certificates build-essential postgresql-client python3-pip jq netcat gettext", "056d04c2fc6d4bd4528c13ba3dddc20a": "RUN curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl", "eca3a617b33e9ffbda0a29772ff89d07": "RUN chmod +x ./kubectl", "f8b4524a114829abf733181559185400": "RUN mv ./kubectl /usr/local/bin/kubectl", "d06b93068032de8617ad1aa59b1f874a": "ENV HELM_VERSION=\"v2.10.0\"", "567486eacc0bad4276f7c06eb69f4210": "RUN curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get > get_helm.sh", "007e2aed86ae3f0ce7639c49096a8ffb": "RUN chmod 700 get_helm.sh", "b5a5238386a55e3766f7ea75a1727278": "RUN ./get_helm.sh --version $HELM_VERSION", "3a346e6333de9733d902b2ac837db1aa": "RUN helm init --client-only", "e5971e412f93080fba79a38b815bb1ca": "RUN helm plugin install https://github.com/chartmuseum/helm-push", "31e648ea133447ff2e39c0655704113c": "RUN apt-key fingerprint 0EBFCD88", "559354b6fa5670cd41050b64559114a9": "RUN add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable\"", "0c860ef89cf4d62891bcdccabc51e194": "RUN apt-get install docker-ce -y", "58cbf1a00606c0f78e28d49d9d7b03d7": "RUN apt-get install -y curl", "43462496580dca19daa55348115ce1d8": "RUN curl -sSL https://sdk.cloud.google.com | bash", "4462b5d454d881eb8870c8b7c6823d0b": "ENV PATH=\"$PATH:/root/google-cloud-sdk/bin\"", "83535583afbb5b545e91ce4b0a77a488": "RUN curl -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | tee /etc/apt/trusted.gpg.d/microsoft.asc.gpg > /dev/null", "4f99a6ba6127388b27dbd27dd5ebd74f": "RUN echo \"deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ bionic main\" | tee /etc/apt/sources.list.d/azure-cli.list", "9aa7b61f974a434fd9729fdf442fede3": "RUN sudo apt-get install -y azure-cli", "53f9c230af49ec509704b4b19b339811": "RUN pip3 install --upgrade awscli", "26c50167ba2c6866f867b24c530e27a3": "RUN go build -o /bin/deploytag", "029a44a6655180cfc545ced4c21f3cc4": "RUN apk --no-cache add supervisor git", "7a94ba69c35aa01d1847b21834ca2e39": "WORKDIR $GOPATH/src/app", "7f34247cdf436cd55a2796eb07b2c097": "COPY docker/start.sh /bin/original_start.sh", "f175f60410fe22e0caf9500959e051bc": "COPY docker/conf/supervisord.conf /etc/supervisor.d/supervisord.ini", "d41678fe5f53dfc2e56dc6a828dbc1a9": "RUN go build -o /bin/app", "8e0a5cbaa8fe5bf50006f5a56cf4b13d": "RUN tr -d '\\r' < /bin/original_start.sh > /bin/start.sh", "680e0ee4d46383e21f1443cdf192204f": "RUN chmod -R 700 /bin/start.sh", "2f1b5cecd7536f725abc1fa050d02545": "ENTRYPOINT [\"/bin/start.sh\"]", "a6323d44d4757a1ef3dd159c3c306e84": "RUN cp /usr/local/bin/kubectl /bin/kubectl", "9571d8e301965682cddeb739d76a15bc": "ENTRYPOINT /bin/deploytag", "ab0f65d7241abbaaedc46536ae11335c": "RUN apk --no-cache add git ca-certificates git gcc g++ libc-dev", "e9a33cb4bcb174906ea759f25325ab1e": "WORKDIR /bin/", "88fe76134b9580968a12b002c9cd90bf": "COPY /bin/app .", "efb910609d6422850255c2ea63e26514": "EXPOSE 1374", "b3cdae532dedf7e1b692c1ad24f04f3d": "ARG BUILD_COMMIT=\"\"", "8c03d84cc5a168cf7cdbcf1990fbab33": "ARG BUILD_COMMIT_MSG=\"\"", "716016f88965bf22dc128aa3039540cd": "LABEL maintainer=\"Parham Alvani <parham.alvani@gmail.com>\"", "d35ca283f4b58eca0919dff47dc36c00": "LABEL org.i1820.build-date=$BUILD_DATE", "e869ffbef575c09b87d6a4884358508a": "LABEL org.i1820.build-commit-sha=$BUILD_COMMIT", "6aa7a688f917107791ac8f5ced59b054": "LABEL org.i1820.build-commit-msg=$BUILD_COMMIT_MSG", "afc2178bc92d56ee71f9dfe45842d9ad": "CMD [\"/bin/app\"]", "4f3e53c41fb03313db9e6f25a38ab7ba": "FROM golang:latest as builder", "473bf7e9b4707f8e112c32487e80707a": "LABEL maintainer=\"Pablo Silva <pablonicolassilvabravo@gmail.com>\"", "94f974a86c3ca4b8d3ad58b6d8e62791": "FROM golang:1.13-alpine as base", "e148f2454ee2ab808e9f6c27ccd09eb1": "RUN apk add --no-cache make git g++ musl-dev linux-headers bash ca-certificates", "3cdab45e3ce6027ff874257f03425886": "FROM base AS builder", "d18e4c67f078b128a5c8d46dee4d2708": "RUN GOOS=linux GOARCH=amd64 make", "0ab00198219f5999aa14c966765a1c67": "COPY /app/bin/fluxcloud-filebeat /usr/local/bin/", "0fc1580681dda2c77db1f0d6d6f788b3": "COPY /app/templates /app/", "3ae63a4d4c473359d4051d77017c51e0": "ENTRYPOINT [\"/usr/local/bin/fluxcloud-filebeat\"]", "afe0789404193ef4351ae70db8c3f2ce": "WORKDIR /go/src/github.com/target/impeller", "8ed53a25425a47638400c771a47fea94": "ENV HELM_VERSION=\"v2.12.3\"", "6ee7fe7688ffa66f10b4dee0baf5f0a7": "ENV KUBECTL_VERSION=\"v1.11.0\"", "081bb8be12441ec5d22f7620c64a55c8": "RUN wget -O /tmp/helm.tar.gz https://storage.googleapis.com/kubernetes-helm/helm-${HELM_VERSION}-linux-amd64.tar.gz", "aba72ba38ab751cc8317f3ecb97c0648": "RUN tar -xvf /tmp/helm.tar.gz", "ca74885ff2110012e80ca4e1df6c5441": "RUN cp linux-amd64/helm /usr/bin/", "8264b8f6e1c6fab1c5b39261c2212856": "RUN chmod +x /usr/bin/helm", "9791172c56816446f4c910925293fe43": "RUN rm -rf /tmp/helm.tar.gz /tmp/linux-amd64", "502121f46b9f704efca276bd602e38df": "RUN wget -O /usr/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl", "c5e1c9d342e36c0895eb7a506696ff1d": "RUN chmod +x /usr/bin/kubectl", "581a3e56fdcc3ef7ed6562edff607ec3": "RUN mkdir /root/.kube", "d48943b78f8b755d1c121a225a4c59ed": "ENTRYPOINT [\"/usr/bin/impeller\"]", "4f8c4d81203a227dfa3a5d835d197a59": "COPY /go/src/github.com/target/impeller/impeller /usr/bin/", "f72e7a89cf409368369f180459cba5b1": "LABEL maintainer \"Ilya Glotov <ilya@ilyaglotov.com>\"", "9dfd33c4d8de87275a6298c739246e86": "COPY . /go/src/github.com/ilyaglow/badcapt", "09e7b9594a5090ee7989dbab89bb9dc1": "RUN apk --update --no-cache add libpcap-dev git build-base", "839930b1408815af2313f6bad1c16252": "RUN cd /go/src/github.com/ilyaglow/badcapt", "5ac5822acfda015859be62c39a77ec6b": "RUN go build -ldflags=\"-s -w\" -a -installsuffix static -o /badcapt cmd/badcapt-nats/badcapt-nats.go", "552f6be762e07308afae034eead51568": "COPY /badcapt /", "c4957d54e6d2796e02d6115a69031761": "RUN apk --update --no-cache add libpcap libcap", "faae99d9bbbdd1f76e381da6e68dd7fd": "RUN setcap cap_net_raw+eip /badcapt", "0848c234b6d76d1baf916c61627b228d": "RUN adduser -D badcapt", "29da85c85a8aa73b122c9c866d61c466": "USER badcapt", "42705884c7231dad7cc01bbce5bfec80": "ENTRYPOINT [\"/badcapt\"]", "61ce8365b3bc4e777046f95d30701b90": "CMD [\"-h\"]", "50b267538ab2469e00cbe099916031b0": "FROM golang:1.12-alpine3.10 AS builder", "75b02c94ca6cf7368ec974497e6d92f1": "WORKDIR /go/src/github.com/iavael/test-project", "cce093de9530c0d3d69d11cc3f27f739": "RUN go build -v .", "41578a77a96b951ce27982c2b3fb4a9a": "VOLUME /var/lib/metrics/", "f722bdd013b0bbcd4935a70f6c0e27ed": "COPY /go/src/github.com/iavael/test-project/test-project /usr/local/bin/", "a7739db9bb8c210ec8590b61f59b04e7": "ENTRYPOINT [\"/usr/local/bin/test-project\", \"-s=/var/lib/metrics/storage.txt\"]", "fd7ee9303d3a309c6bebbce54056cc3e": "CMD [\"0.0.0.0:8080\"]", "6a6911e86ae6487945fccfa9c28a0919": "FROM golang:alpine AS golang", "0cf79903d1f7960e9e7547669ebd02bf": "WORKDIR /go/src/github.com/shadowsocks/v2ray-plugin/", "3ccb5a36ce0201dd413036b3fbbdfdb8": "RUN go get -d -v github.com/shadowsocks/v2ray-plugin", "b935e7c290ed5a0ca956a0e7d785b16b": "LABEL maintainer=\"acrisliu@gmail.com\"", "ba325b0d135e20ab19107e8a37afb657": "ENV SHADOWSOCKS_LIBEV_VERSION=\"v3.2.3\"", "6387505dc07214b63cd00ae6fbcca50e": "ENV V2RAY_PLUGIN_VERSION=\"v1.0\"", "ece7cc616b57d1713ff619af45ab5775": "RUN apk add --no-cache --virtual .build-deps autoconf automake build-base libev-dev libtool linux-headers udns-dev libsodium-dev mbedtls-dev pcre-dev tar udns-dev c-ares-dev git", "521c1d4553d9d0cadcdaa189f349f85e": "RUN mkdir -p /tmp/build-shadowsocks-libev", "8bdb5ef0dd3e711b5ce6669634f5592b": "RUN cd /tmp/build-shadowsocks-libev", "ead6ec8367d1e38f1b4a2085d50cf261": "RUN git clone https://github.com/shadowsocks/shadowsocks-libev.git", "05c65284fba7e568a91a34e2c19e0c8c": "RUN cd shadowsocks-libev", "9142c53ab56be78d1074e7bb135f1b78": "RUN git checkout \"$SHADOWSOCKS_LIBEV_VERSION\"", "b332a9cb959704b3266b1638d0eb36e5": "RUN git submodule update --init --recursive", "a7896b6d740a21ef306a5cbb27bec28e": "RUN ./autogen.sh", "46909a5a49f775f26dd790c58a86b952": "RUN ./configure --disable-documentation", "84a45a78fb5fcf10d5c426de90184df7": "RUN ssRunDeps=\"$( scanelf --needed --nobanner /usr/local/bin/ss-server | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | xargs -r apk info --installed | sort -u )\"", "920e57eb7f1747fbe0dfdc4566aecd5d": "RUN apk add --no-cache --virtual .ss-rundeps $ssRunDeps", "dd9b12ada2ea3cdfd10356a988829f4f": "RUN cd /", "b9c95824653c7398e214ccb631aaf8e6": "RUN rm -rf /tmp/build-shadowsocks-libev", "7476f7f51b1c4b314e4c0827daadaecc": "COPY /go/src/github.com/shadowsocks/v2ray-plugin/v2ray-plugin /usr/local/bin", "5d4c19b51789c75e26aa4151e6279e7b": "ENV SERVER_HOST=\"0.0.0.0\"", "a385de5c1b163cdebd4c5e3245a54008": "ENV SERVER_PORT=\"8388\"", "0cc649c484c8d45ea66e8d5ebf904ea6": "ENV PASSWORD=\"shadowsocks\"", "c6ec0b6f80c5adad09ed4c972a04a547": "ENV ENCRYPT_METHOD=\"chacha20-ietf-poly1305\"", "c006fbcb5f04187a3842ace1b9afe44b": "ENV TIMEOUT=\"600\"", "fc06beee882b5f9f34dab4b54de93009": "ENV DNS_ADDR=\"8.8.8.8\"", "036e8f1a0e55a0614961779c30053a5b": "EXPOSE $SERVER_PORT/tcp $SERVER_PORT/udp", "d68f525f9b9b4c9b85746e16090c380a": "ENTRYPOINT ss-server -s \"$SERVER_HOST\" -p \"$SERVER_PORT\" -k \"$PASSWORD\" -m \"$ENCRYPT_METHOD\" -t \"$TIMEOUT\" -d \"$DNS_ADDR\" --plugin \"$PLUGIN\" --plugin-opts \"$PLUGIN_OPTS\" -u --mptcp --reuse-port --fast-open --no-delay", "7c84043e7a7964651d1f4bf5f5b13eb1": "RUN adduser -D -u \"$UID\" -G \"$GID\" -g '' sensoroni", "51f06faaeab464763d131a2d2020d3c4": "RUN make release-assets", "ab3527caf8107939a36611f36f64ab9a": "WORKDIR /usr/src/app", "fa3c28cf6f0d5dcaedf03066fd0822bf": "COPY . /usr/src/app", "882e6841ed1dcd1d903862d570c5dc84": "SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]", "9d0514a2e08fd83a9a686808eef303d4": "COPY Makefile *.json *.js yarn.lock *.go ./", "116952ca14ea63ef8df51fdf7a40f8c3": "COPY static static", "dcb4699a7aab0f2a8e7cd3292d08f4b3": "COPY lib lib", "1382dcffc05b3641172e877b98a135ea": "COPY cmd cmd", "4a865176d7a960f34c4346a49e6e5f88": "RUN make setup", "ca5ea706281815ccef84c0fe5edc2307": "RUN make build BUILDFLAGS='-mod=readonly'", "f00341c120eb0464fe814e11e75210a3": "CMD if [ -n \"$LOCAL_CA_CERT_BASE64\" ]; then echo \"$LOCAL_CA_CERT_BASE64\" | base64 --decode > /usr/local/share/ca-certificates/local.crt; fi && if [ -n \"$(ls -1 /usr/local/share/ca-certificates)\" ]; then update-ca-certificates; fi && exec ./prchecklist", "db9974640a49d9a5a38a97cd50231021": "RUN apk add --no-cache make gcc musl-dev linux-headers git", "c128dac1b8dbd2e4d0465cf6f49f84c8": "RUN git clone https://github.com/vechain/thor.git", "cbe142d9b9a48c363801638ebee26396": "WORKDIR /go/thor", "d92106d721f8b444084fdbfe4265475d": "RUN git checkout $(git describe --tags `git rev-list --tags --max-count=1`)", "0b1b8595919b0f74e78bd371601f0b3e": "RUN make dep", "788f6208de89dc5c52668ab3de66d04f": "RUN make thor", "8c0efec2ce358c5f92bec4bf9dfe8558": "COPY /go/thor/bin/thor /usr/local/bin/", "abbd7f2a34127ecf7422a0b6e704f321": "EXPOSE 8669 11235 11235/udp", "17268eb337bd985ee8141273e7dd6d4b": "ENTRYPOINT [\"thor\"]", "2d33727e431a3cfc6f54a42d8c30eb80": "FROM golang:1.11-alpine AS build", "eff1050a40b11bd5fa6af4628878879e": "FROM golang:1.11-stretch as builder", "2692d2210d53d804d3fb8a1967830d61": "ENV PROJECT=\"github.com/XciD/loxone-prometheus-exporter\"", "f8745aee509001d7f6f7991bebdb17a2": "WORKDIR /go/src/$PROJECT", "127bd3b120714556845245192930e41d": "COPY go.mod /go/src/$PROJECT", "8ca305c0dce1432aa75506c8193386b8": "COPY go.sum /go/src/$PROJECT", "370d77efa54a704de8ceca719f0964f7": "RUN CGO_ENABLED=0 GOOS=linux go build -o /main .", "4916dc2fe26f7d19e7802ef78ff256bc": "FROM alpine as release", "acd6271603607cbffa031f27ab6bbd69": "COPY /main /", "0833e5f54e7432d116b0f11f1802137a": "ENTRYPOINT [\"/main\"]", "bac24116dde787eb7e483a5490ecc15f": "FROM golang:1.8.3 as builder", "61046bcae8b6036a85f4927f97c887b2": "WORKDIR /golang/src/gcached", "3573ab55eccb343809f306f01ea83763": "ADD . /golang/src/gcached", "965ac4916f401c883e176cdb07ae83b4": "RUN go get -d -v", "e1dc090acdc6f1e35cd386ed3c0a053f": "RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o gcached .", "e2b23043161855ed8b32cbc4c4819060": "COPY /golang/src/gcached/gcached .", "76f1cd8ed1a7d319f39f45e13cd4a151": "EXPOSE 3000", "b1ee5837fdc3c53528381390a0674d9e": "CMD [\"./gcached\"]", "ff305d8e3bb07e19a6b5b08578b505ae": "RUN chmod 755 outputs/*", "1c5b21abd6da0558d72af02d18b8e001": "COPY /go/src/github.com/pidster/dummy-concourse-resource/outputs/* /opt/resource/", "c02c56e04e37953b42aadef5f79744e2": "FROM golang:1.8.3-alpine", "9688bc12c2a5abea32313e7b64bb1081": "ARG GLIBC_VERSION=2.25-r0", "6f0c27c38208807b52e7e550cad5b13d": "RUN apk add --no-cache su-exec curl bash git openssh mercurial make ca-certificates expect", "e19e41a6c1bd8495b69ab32df5a477ee": "RUN curl -sSL https://raw.githubusercontent.com/sgerrand/alpine-pkg-glibc/master/sgerrand.rsa.pub > /etc/apk/keys/sgerrand.rsa.pub", "0aaa2110a8190e1d86e3ea80f45f97a2": "RUN curl -sSL https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-${GLIBC_VERSION}.apk > glibc-${GLIBC_VERSION}.apk", "1207b4524700897c5c9482aaa678f082": "RUN apk add --no-cache glibc-${GLIBC_VERSION}.apk", "85fdac27e61ae692ef345cc39bea7daf": "RUN rm -f glibc-${GLIBC_VERSION}.apk", "2aa64ea942c392b9af2935b4c99b207f": "RUN go install -v std", "1102e213f3c0287aff15e7c44ed69084": "RUN go get github.com/Masterminds/glide", "1f371c351711ce98189c3ca650aae375": "ENV GLIDE_HOME=\"/home/user/.glide\"", "73e321923df914927c7cc32bc3d7b491": "RUN go get github.com/onsi/ginkgo/ginkgo", "72ed489cbd648099dc36a94e9ad83c1c": "RUN go get github.com/onsi/gomega", "e04f28e72199f1193ac5375cf17be89e": "RUN go get github.com/wadey/gocovmerge", "5ebde527d4b27fab1178568597a2f036": "RUN go get github.com/axw/gocov/gocov", "80cb66e8d1721107184c27b2188110e6": "RUN go get github.com/AlekSi/gocov-xml", "aecafe52d800ff0a8c7882e905e3f244": "RUN go get github.com/jteeuwen/go-bindata/go-bindata", "43ae64a07c83cb414f1c5ab5d1ac7e8e": "RUN go get github.com/tmrts/boilr", "1ebf324a2d176955bfa4e54b102c3bf1": "RUN cd /go/src/github.com/tmrts/boilr", "5a4976fdde066b833a426ac2c2280357": "RUN git remote add iancmcc http://github.com/iancmcc/boilr", "8a9523e6f7ba0fa43d5c781ab59243f4": "RUN git fetch iancmcc master:iancmcc-master", "d10eaf6e1975d667f96ced813bccbb2b": "RUN git checkout iancmcc-master", "4092f99946e61837a66a5c56a2004770": "RUN chmod -R 777 $GOPATH", "1953ad0899d9c8227ad66aa994c42183": "COPY create-zenkit.sh /usr/local/bin/", "56158703b040b3741875a7b148b08302": "COPY docker-entrypoint.sh /usr/local/bin/", "29e9119a3099ac90b83a5214ba4a6f62": "ENTRYPOINT [\"/usr/local/bin/docker-entrypoint.sh\"]", "67a85dc10e6d7e7215a63d4525056712": "RUN apt-get install -y --no-install-recommends apt-transport-https ca-certificates gnupg2 software-properties-common", "0915c5c5f1fb3de80f821f16f31b56b5": "RUN apt-get install -y --no-install-recommends docker-ce golang-glide openssh-server task tmux tree vim-nox zsh", "eb00a0103297b68e4808dc29625a2576": "COPY ./dotfiles/vimrc /root/.vim/", "96e28e161480edf4f1ef409ede7c0aef": "RUN vim -c 'PlugInstall --sync' -c 'qa!'", "32c8fd58ac9810f53242b8229618321e": "RUN rm /root/.vim/vimrc", "4a87de48bfc94c07d9863443547af0d9": "RUN mkdir /var/run/sshd", "57e85ff4838a859f4fa091173c8328b9": "RUN echo 'root:root' | chpasswd", "a03e10965f6631fd105910ab51fc3206": "RUN sed -ri 's/^#?PermitRootLogin\\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config", "5b558b9351e1295cbc609320241c0d14": "RUN sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config", "9466ba756aa39f0730562669d6b18782": "RUN mkdir /root/.ssh", "af77f8542153c4ba9f1115dc589b03ad": "ENV LANG=\"C.UTF-8\" LC_ALL=\"C.UTF-8\" TZ=\"Europe/Madrid\" TERM=\"xterm-256color\" TASKRC=\"~/dotfiles/taskrc\"", "abf5cfb0c40c9a5932639dbe90c3cdbd": "COPY ./dotfiles /root/", "20111bf91e8d51dc2f353cc5f969e0c7": "RUN /bin/bash -c \"/root/dotfiles/fiddle.sh -ztvwg -n bluebrown -m nico-braun@live.de\"", "4a9ff25b5263b1d871dd2f7c888b804c": "FROM golang:1.13-alpine3.11 as build", "150d511599e2aca1450960d83f695cd1": "RUN apk add --no-cache git curl unzip", "69e69a6225fb73c249b4341b268e6bd6": "RUN export GOPATH=/work", "9664dc4abed4f28775e788288d8a1ced": "RUN export CGO_ENABLED=0", "24a3e4b3e63e200d3d3fe7fcf909410e": "RUN go get github.com/mattn/goreman", "2a421d65c4594f5a3701c9ef869d3e7f": "RUN GITHUB_REPO=\"https://github.com/mayswind/AriaNg\"", "9f9da3222db7ebedb54c61a1c841885f": "RUN LATEST=`curl -s $GITHUB_REPO\"/releases/latest\" | grep -Eo \"[0-9]*\\.[0-9]*\\.[0-9]*\"`", "97eee5ee6bdfc771809401bb89e03baa": "RUN curl -L $GITHUB_REPO\"/releases/download/\"$LATEST\"/AriaNg-\"$LATEST\"-AllInOne.zip\" > ariang.zip", "ac55140086015861cf7dbc64ec4ac7c1": "RUN unzip ariang.zip", "cb1af39a93bebf71a4c5a60d6d9e84bc": "ENV RPC_PORT=\"6800\"", "5b820456e9424e4e97f2c9f41bc16c5b": "ENV HTTPD_PORT=\"8080\"", "bf523c95a321ca9be46eb282f60debc4": "ENV DUMMY_UID=\"1000\"", "d7ff41470ed92c463c77e0e8ad2b8e1a": "RUN addgroup -S dummy", "51cb5fb6c50a8ea1ceb9f1bd92c565fa": "RUN adduser -S -G dummy -u ${DUMMY_UID} dummy", "37a5b140cd1ac853497d74ce1f08cf68": "RUN apk add --no-cache busybox busybox-extras aria2 su-exec", "ea964899090f1d9878601c50a499f5ed": "RUN mkdir -p /ariang/www", "95dfeadcb8ddc4fa110c5612bf662540": "WORKDIR /ariang", "061487133b9a9acbc61b4529f3593d81": "COPY /work/bin/goreman /usr/local/bin/", "6d6e779cd469ae37d1758811d9c45e3c": "COPY /work/index.html /ariang/www/", "2b0f6ace77b014cab316d2d649d302b2": "RUN echo \"web: su-exec dummy:dummy /bin/busybox-extras httpd -f -p ${HTTPD_PORT} -h /ariang/www\" > Procfile", "4ed69474dceeb261d812327b59c03d99": "RUN echo \"backend: su-exec dummy:dummy /usr/bin/aria2c --enable-rpc --rpc-listen-all --rpc-allow-origin-all --rpc-listen-port=${RPC_PORT} ${EXTRA_OPTS} --dir=/data\" >> Procfile", "386af7f57a22192fda8af2f10e5dff74": "VOLUME /data", "041be16f5ab06ac558a086e7b6fc2262": "EXPOSE ${RPC_PORT}/tcp ${HTTPD_PORT}/tcp", "937897eb7e1cf2548db6f4764d0f2a88": "CMD [\"start\"]", "69b96d7450b6a444d19239ad7475cb31": "ENTRYPOINT [\"/usr/local/bin/goreman\"]", "d4e6af648acb5dfa33750a037e380471": "FROM golang:1.13.8-alpine3.11", "95a1603b0f106bddd87aa9f2e7887257": "WORKDIR /go/github.com/h3poteto/slack-rage", "4cbc454d47bd980ac9021223840022ab": "ADD . ./", "c58eeff3bdb9abecf99fb2508606dfe7": "CMD [\"./slack-rage\", \"rtm\"]", "92683927176c1cd2a88ee934bb4dd23e": "LABEL maintainer=\"Ilya Dokshukin <dokshukin@gmail.com>\"", "10fd3510809a0d03144023edad14c493": "WORKDIR /go/src/github.com/dokshukin/gl2j-gw", "987ee94bcf3a6cf49eb1a0ec6353ee8a": "RUN apt-get install -y unzip upx", "c3784d7653f6be1ae6875f5f32123f6f": "RUN wget https://github.com/dokshukin/gl2j-gw/archive/master.zip", "a2fa97fe5fd1aeb69744ffddcaeb3afb": "RUN unzip master.zip -d /tmp/", "aef0d4568f17080908d5914aa8df7f5f": "RUN mv /tmp/gl2j-gw-master/* .", "6612b25bc03f622407f46b7b56b715a0": "RUN rm master.zip", "98cc6be5ee0ed08048d6acb15bfc19bc": "RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build --ldflags \"-s -w -X main.version=${DOCKER_TAG} -X main.build=2019-06-04\" -a -installsuffix cgo -o /go/bin/gl2j-gw .", "b1784070a175fec5f980eeb30181bbb3": "RUN upx /go/bin/gl2j-gw", "746384f1452fac2f55f1337800de67cd": "COPY /go/bin/gl2j-gw .", "ea1fe1870a974acf18823988b867db16": "CMD [\"./gl2j-gw\", \"-c\", \"/etc/config.yml\"]", "6420aa8fc5113973ea603a5bd8b00913": "ENV DISTRIBUTION_DIR=\"/go/src/github.com/docker/distribution\"", "d8f89027436c6ff62eeca4b4fa1e846f": "ENV BUILDTAGS=\"include_oss include_gcs\"", "d005d6561141dcf716ae278e5240197e": "ARG GOARM=6", "d13dd67a51ab0d03c6f905b8946f5cd1": "RUN apk add --no-cache make git file", "c9bd91271694dde358b4d0184fa4cf84": "WORKDIR $DISTRIBUTION_DIR", "8f84bf28963a60fa5274c262d84552fb": "COPY . $DISTRIBUTION_DIR", "c3000dd07cccadbb7b1583597a7d3b88": "RUN CGO_ENABLED=0 make PREFIX=/go clean binaries", "7fed11f2acc85ebe9c0919be406dde8b": "RUN file ./bin/registry | grep \"statically linked\"", "1fa8439d1f39f28e0e6a48ae8a7a09e6": "COPY cmd/registry/config-dev.yml /etc/docker/registry/config.yml", "450c05abcc1a189fcf97679f219f4325": "COPY /go/src/github.com/docker/distribution/bin/registry /bin/", "cd23de937e47bcd3bdcdd095d932b13b": "VOLUME [\"/var/lib/registry\"]", "439860d3f1c5d2b84063386c61ceecbc": "EXPOSE 5000", "77ca8d64433dffb5ece6845ff4a29340": "ENTRYPOINT [\"registry\"]", "81973a68662cfd90b587ec46cd0cdc6a": "CMD [\"serve\", \"/etc/docker/registry/config.yml\"]", "8d52b5e2f10e2b998fb9dc7cb94abcdc": "FROM golang:1.15-alpine as build", "6261828c00978bb31e295100e3cfb1a6": "ARG VERSION=v1.1.0", "a389bb6ab01f6e7ab3e0b9a0b3edf4a6": "WORKDIR /go/src/github.com/vmware-tanzu/velero-plugin-for-aws", "90b84657014121ff2d09ab5b568f556f": "RUN git clone --depth 1 -b ${VERSION} https://github.com/vmware-tanzu/velero-plugin-for-aws.git .", "bdac8902eb57d3e8474d1f426a0a23eb": "RUN go build -o /go/bin/velero-plugin-for-aws ./velero-plugin-for-aws", "9adae0a78a33663aae1a63429c0cf91b": "FROM alpine:3.12", "25630e9a9f94089197fc4e597571a00c": "WORKDIR /plugins", "23c458957738da7244c97b33b56abf58": "COPY /go/bin/velero-plugin-for-aws ./", "9547e019c4bfdf6b110e2869246e5bb2": "ENTRYPOINT [\"/bin/bash\", \"-c\", \"cp /plugins/* /target/.\"]", "4966e8d9688b35a513a790c1a8a385cc": "WORKDIR /go/src/github.com/lcnem/identity", "ec71e42490d91fe4a674737ea075312d": "RUN go install ./cmd/identityd", "7954d34f1cf6558877ef86878a2936b5": "RUN go install ./cmd/identitycli", "a49d39eb6d1c655fe64656622d7a8a85": "COPY scripts/genesis.json genesis.json", "b3a833952ca0e8996ab1b4423dd7caac": "COPY scripts/init.sh init.sh", "a3a8d766546cdde290e86628b1808773": "COPY /go/bin/identityd /usr/local/bin/", "79bbc73648747dfd72957adc8f80903c": "COPY /go/bin/identitycli /usr/local/bin/", "8c12febf38024419f82629e1cb4cf2fe": "CMD [\"identityd\"]", "2d72777a79a61717eb8e92802869bda4": "ENV CADDY_VERSION=\"1.0.3\"", "baed2fea4b7a5e79befef4e930eb8795": "WORKDIR /build/", "ff8c1d44d109af04dbc0ea80848e41a3": "ADD caddy_main.go /build/", "d8b65124198b289bfb0edf83aa299cde": "RUN go mod init caddy", "f8f8b6dedd135742e43f4d2f70490d06": "RUN go mod edit -require github.com/mholt/caddy@v${CADDY_VERSION}", "edfee3cf5fea1aa20bf46bcaebe19908": "RUN go build -o caddy", "7cd6db22e60a4f412f9c0ff44a629a8d": "RUN ./caddy --version", "390411c0b57ab26a25520241206c1ce6": "LABEL maintainer=\"Johannes Mitlmeier <dev.jojomi@yahoo.com>\"", "5a7616c5419cd60b00f05be9d1f83b57": "COPY Caddyfile /app/", "c5cdbaec403597e6e5c42e1a029807d7": "WORKDIR /opt", "ec660f843d5004f4e80e9d8687884eec": "COPY /build/caddy /opt/", "69b2bb5800210a64561936b74471698e": "VOLUME [\"/app\"]", "db5e69c6914216cad2e82fcc8005c401": "CMD [\"/opt/caddy\", \"-conf=/app/Caddyfile\", '--agree=\"${ACME_AGREE}\"']", "64fa7ca36122cf579b79de5593a6f658": "FROM golang:1.13.3-alpine3.10 AS apibuilder", "7fb2529489a1ba8a54ca694006d72766": "RUN apk add --no-cache git dep", "a2ec0e9626420510d442e6cc31c36714": "COPY api $GOPATH/src/github.com/alexbrazier/go-url/", "f0f8a09937b296adfa9a901b731d418b": "WORKDIR $GOPATH/src/github.com/alexbrazier/go-url/api", "fefe8ef662fac1a6ed4386e843383745": "RUN dep ensure -vendor-only", "ccbb5753f86d180542906e7a6d8e8116": "RUN go build -o /go/bin/server", "7147364e2e07b58de566d83c2bdc6e27": "FROM node:12.13.0-alpine AS frontendbuilder", "e6d9351f37658ad0ddfabe629a29da2e": "COPY frontend /app", "4e80cc127ea2bfc665fe6561de399ab8": "RUN yarn --frozen-lockfile --network-timeout 600000", "16d01953d664ff787c5b0b349e37f853": "RUN yarn build", "a48dbce752f624f82741d26da5827bf4": "RUN apk add dumb-init ca-certificates", "1694699b86f2b74bc115f9014f7b8ea8": "COPY /go/bin/server /go/bin/", "24eee44aae208bcbad6913a9a7ffcb45": "COPY /app/build /go/bin/public", "0b309fb065be1f6e4551c113f309197c": "WORKDIR /go/bin", "5c770dce277d7b30c9d9aa88cb55d1ea": "ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]", "f1fd71bbb0b179e5e9c9b06e7d921194": "CMD [\"/go/bin/server\"]", "2c76ab629b46abb1eaad91d41e1d919d": "FROM golang:1.13.7-buster", "d1441e54fdd1a86c27377ee3bf90247b": "RUN curl -sL https://deb.nodesource.com/setup_12.x | bash -", "9d0f321adf10a1476a8906375a631765": "RUN apt-get install -y nodejs", "c3c00328042fae1521d0115d88d382cc": "RUN mkdir /data", "b917d6e0c1e3076fb9379ee167eed071": "VOLUME [ \"/data\" ]", "91f7475ad01d55101d47e478aa54ecdc": "RUN cd web", "a8a91912f8123f84ce57344546fb053f": "RUN test -d node_modules", "64f71c0547c55529ad5743f07dc9b690": "RUN rm -fr node_modules", "8ac75896a9faaef5251e3bd545dad7d7": "RUN npm install -g gatsby", "8a921dda23ceac9addb934cff3a5907f": "RUN gatsby build --prefix-paths", "9f80c6375faa73408e2409d29b41fc99": "CMD [\"kaamer-db\", \"-server\", \"-d\", \"/data\"]", "df1ab7a2b7b875d8627c52fa4193f56e": "RUN go version", "50aed97f1afcde2d1c10930eb168b370": "RUN mkdir /src", "c90860912a46fd262394d4328bc024e2": "ENV GOFLAGS=\"-mod=vendor\"", "e90350042f9dd8688e84bf9d57ca96bf": "RUN go build -o ./bin/globber ./cmd/globber", "b92a6b3e0a2f6893843ba12f951d0cf7": "COPY /src/bin/globber /bin/", "99c4d3d3404aca9436c47d97e2bf91f0": "COPY /src/static ./static/", "259000831b67ea69ce8d35c2bfa00c6a": "COPY /src/templates ./templates/", "8ea657419e0a89d53cdbb0911f40987c": "ENTRYPOINT [ \"globber\" ]", "7eabcf188cdfb31c95e75b7d6db295ce": "ENV NODE_VERSION=\"10.9.0\"", "e103414423d4533723c84741ed144cec": "RUN apt-get install -y --no-install-recommends g++ gcc libc6-dev make pkg-config xz-utils software-properties-common", "c7345c63cea0f0df96732096cc1580a0": "RUN for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 56730D5401028683275BD23C23EFEFE93C4CFFFE 77984A986EBC2AA786BC0F66B01FBB92821C587A 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 ; do gpg --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done", "596862d8ed3577f484cda09704660253": "RUN go get -d github.com/goreleaser/goreleaser", "be56b979d6241c6b741953c85784b01e": "RUN cd $GOPATH/src/github.com/goreleaser/goreleaser", "be509a5a84a6bf9fd6ba5e8eb974fe60": "RUN make setup build", "dfccad6b651d37f1c6a1d169e944507f": "FROM golang:1.9", "26be365ff3d32edf1e6e262bd90265a4": "ADD . /go/src/app", "2da0c5f498d7340e7e5d7be9daa0d46e": "RUN git rev-parse --short HEAD", "d234d3fed9b8b897ae9a81425ef6820d": "RUN go get -u github.com/golang/dep/...", "7eac99ae688683b4d6bdf9f822ce570a": "RUN go build -o /app/main .", "841563d07a45c8966fe0f5f8085fe9aa": "ENTRYPOINT [\"/app/main\"]", "c6f5f369fa25ed3bf9746e9f036caeba": "WORKDIR /go/src/github.com/toyo/p2pq", "9f6e95df0ba6a71be4d83e600e5ed0ae": "RUN cd cmd/p2pquake", "a8b8e09cba3bb582dad27ae6a1d00e85": "RUN CGO_ENABLED=0 go build -o app", "596b941a92eb3cf5ce2674d29fbc9c27": "COPY /go/src/github.com/toyo/p2pq/cmd/p2pquake/app ./", "12a03cfec1e0013ba3d3dd1a4d5cc177": "COPY /go/src/github.com/toyo/p2pq/cmd/p2pquake/html/index.html ./html/", "622680d6057382f5ab755d1ef4472d87": "ENTRYPOINT [\"./app\",\"-d\"]", "ec968031744eb1acac0cc512f541372f": "VOLUME [\"/tmp\"]", "0b9b3d78859b0fd5eb33421f85938d95": "EXPOSE 6911:6911", "bbbe07674e6dd10630a57b56ea3f1356": "EXPOSE 6980:6980", "994df194cf3b10c2af3f3db97e0f0c59": "COPY . /src", "d4ca1e9704552a43e17e692e151e820e": "RUN apk add --no-cache bash", "8f30dbe41cf36fd7eaf0e3b3aec5ed20": "RUN bash ./build.sh", "06c83d5f8a0fdca805360ea5b0b5d2f4": "RUN ./rr -v", "dd8ffc3a1fe80b3321e12c38ecc7b41a": "RUN test -f ./.rr.yaml", "3a5fc58384cd191e877ad5f5ec2abe29": "LABEL org.label-schema.name=\"roadrunner\" org.label-schema.description=\"High-performance PHP application server, load-balancer and process manager\" org.label-schema.url=\"https://github.com/spiral/roadrunner\" org.label-schema.vcs-url=\"https://github.com/spiral/roadrunner\" org.label-schema.vendor=\"SpiralScout\" org.label-schema.license=\"MIT\" org.label-schema.schema-version=\"1.0\"", "92e62b8a4027434dcc74ed6dede648e8": "COPY /src/rr /usr/bin/", "389d7b3a2cf5f7c6534be21e778b082b": "COPY /src/.rr.yaml /etc/rr.yaml", "ec679fed1fbc6a2c549854a4c9aa3ac9": "ENTRYPOINT [\"/usr/bin/rr\"]", "c97b560817c83f4e7b3c6623be1304d7": "ARG alpine_version=\"\"", "86977ab626f4fa36f1b60fd16aa140d1": "FROM golang:${golang_version:-1.12}-alpine${alpine_version:-3.9}", "d95b0dfc64afb9b6cda337f8daa54dc2": "ENV TERRAFORM_VERSION=\"${terraform_version:-0.12.3}\"", "3b4aa47abfce85d225d8c0576d8e327f": "ENV ANSIBLE_VERSION=\"${ansible_version:-2.8.2}\"", "5185b95c6c4bb4e5a6fbaa862c677ff5": "ENV AWSCLI_VERSION=\"${awscli_version:-1.16.196}\"", "b7af496f13b170001e42900938deca05": "RUN apk add --no-cache --purge -uU sudo curl ca-certificates openssh-client unzip python3-dev python3 libffi-dev openssl-dev git vim build-base", "12b4edf11b66d38b8e72ce50865bdb0b": "RUN python3 -m ensurepip", "75fef97822ee213717a4df8836b72bba": "RUN rm -r /usr/lib/python*/ensurepip", "1841b864ad4d1bf9b0b8d7460070ed7a": "FROM golang:1.8 as builder", "c3f77151a7074ee8883735941126093d": "WORKDIR /go/src/github.com/msull92/portfolio-metrics-ingester", "36859c7b3244f1e26dd50a9e363c6c9a": "RUN go get -d -v golang.org/x/net/html", "8a515ccf789db9d6bcaea8bcb010e2d9": "COPY /go/src/github.com/msull92/portfolio-metrics-ingester/main .", "8888e73e5ab763cbe3e6055a586ea429": "RUN git clone https://github.com/goreleaser/goreleaser", "adb00147174c27fdb51b51d54628177d": "WORKDIR /goreleaser", "3b683fd0dd9e713db83bda0ddcb10479": "RUN go build -o goreleaser .", "327b1ea3b604796223762ff944560922": "RUN mv goreleaser /usr/local/bin/", "6f8fad5351891c6d6c73107b289dc66f": "RUN rm -rf goreleaser/", "f458f36352e28eb672d9ffd97b8ae162": "RUN chmod +x /usr/local/bin/goreleaser", "233b3f99a557a821890b57e1f935cb4c": "CMD /bin/bash", "5a98c0a1a14409939fb24a10857ed229": "FROM golang:1.19", "9838fac83c1ba7a0e54002240ec9bb68": "LABEL maintainer=\"https://discord.gg/2TsNFKt\"", "85f78b581f86635ae3d89550cb1affe8": "RUN apt-get install -y apt-transport-https", "a5ecfe9f24e5839314e180ed1a955c72": "RUN curl -sL https://deb.nodesource.com/setup_lts.x | bash -", "889f5b76970cb5b5a6bb20f6f6f8a140": "ADD https://dl.yarnpkg.com/debian/pubkey.gpg yarn.gpg", "a4477f18e42823bfbdf4f780ec8140a1": "RUN cat yarn.gpg | apt-key add -", "16481723f35a3d26b8ddbf01885a34d9": "RUN rm yarn.gpg", "bbe39f87a0b039c6e7d09ebe4cfbf467": "RUN apt-get install -y automake autogen cmake libtool libxml2-dev uuid-dev libssl-dev bash patch make tar xz-utils bzip2 gzip zlib1g-dev sed cpio gcc-10-multilib gcc-mingw-w64 g++-mingw-w64 clang llvm-dev gcc-arm-linux-gnueabi libc-dev-armel-cross linux-libc-dev-armel-cross gcc-arm-linux-gnueabihf libc-dev-armhf-cross gcc-aarch64-linux-gnu libc-dev-arm64-cross nodejs yarn zip --no-install-recommends || exit 1; rm -rf /var/lib/apt/lists/*;", "d54ba9acd71626adc02ddb6db2765386": "ENV OSX_SDK_VERSION=\"11.3\"", "b818b281b96d82f11c168117afb114a4": "ENV OSX_SDK_DOWNLOAD_FILE=\"MacOSX${OSX_SDK_VERSION}.sdk.tar.xz\"", "c29db05bb86855345d0eba7f452a9134": "ENV OSX_SDK_DOWNLOAD_URL=\"https://github.com/phracker/MacOSX-SDKs/releases/download/${OSX_SDK_VERSION}/${OSX_SDK_DOWNLOAD_FILE}\"", "fe6178a92c8a219336248cf51da6cae2": "ENV OSX_SDK_SHA=\"cd4f08a75577145b8f05245a2975f7c81401d75e9535dcffbb879ee1deefcbf4\"", "74d76e0c6b0f1c72209e38f793d2ad8f": "ENV OSX_SDK=\"MacOSX$OSX_SDK_VERSION.sdk\"", "d82fa03fbb94376b504d55ebfa650b97": "ENV OSX_NDK_X86=\"/usr/local/osx-ndk-x86\"", "47f2471e435c78c85f5d7c7a880d120e": "RUN wget ${OSX_SDK_DOWNLOAD_URL}", "678f13ee410701df6bc7b972c9625f5a": "RUN echo \"$OSX_SDK_SHA $OSX_SDK_DOWNLOAD_FILE\" | sha256sum -c - || exit 1; git clone https://github.com/tpoechtrager/osxcross.git; mv $OSX_SDK_DOWNLOAD_FILE osxcross/tarballs/", "f7f3929e3c7c9297751513e6e10844c0": "RUN UNATTENDED=yes SDK_VERSION=${OSX_SDK_VERSION} OSX_VERSION_MIN=10.10 osxcross/build.sh || exit 1;", "5d4fe2e94a6a33f637a1a56c80816b33": "RUN cp osxcross/target/lib/* /usr/lib/ ; mv osxcross/target $OSX_NDK_X86; rm -rf osxcross;", "96fff77cb52abb7e305b21eb701ae311": "ENV PATH=\"$OSX_NDK_X86/bin:$PATH\"", "1a35d166ba5bf431ed73456cc6b7db0e": "RUN mkdir -p /root/.ssh; chmod 0700 /root/.ssh; ssh-keyscan github.com > /root/.ssh/known_hosts;", "199fbf186cef3e6fdbb3059cffb60eca": "FROM golang:1.19 as builder", "210d543c4039d791261231ac0c1d944d": "COPY go.mod go.mod", "85ae77bc69baeb99d6f8efc6ce4672cb": "COPY go.sum go.sum", "7c7fee76bc8812f9af87163ff67e7185": "COPY cmd/main.go cmd/", "f7c6895e74a5e3c30cc219c6e98f4d51": "COPY api/", "a3ea99b82ea91fe192cedd968b12c3b8": "COPY internal/controller/", "f0a0a199a5c27476fe536bd192905f9c": "RUN CGO_ENABLED=0 GOOS=${TARGETOS:-linux} GOARCH=${TARGETARCH} go build -a -o manager cmd/main.go", "7b76043cb062d08c3f03dafdc1fa6d03": "COPY /workspace/manager .", "6c9e34964b1abe4512fb44391250c361": "USER 65532:65532", "1bd9ac3f0df93f78ddc77fc8de827025": "ENTRYPOINT [\"/manager\"]", "1f8a105d3bcd3778235b15e46c3a68e9": "FROM golang:latest AS build-env", "1784b9d9d3298243e3059be87048ca4c": "ARG LENSVERSION=\"\"", "9b0adae80312d94bf2cdc7c465fb74b8": "ARG TENSORFLOW_DIST=\"\"", "3f92159c9ea0da057e70d9d20694118f": "RUN apt-get update; apt-get install -y sudo curl git", "1c7f3f55c3d0d9cb96f4d6aa55b8d11d": "RUN bash setup/scripts/tensorflow_install.sh", "8e7fe3812ae329c85106ba67594c4d7a": "ENV LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH}:/usr/local/lib\"", "fea6dc1740e43ff6c81a7734736ed2bd": "RUN bash setup/scripts/tesseract_install.sh", "d2add8df23d533df0863312a9a91edcd": "RUN go get -u -tags gcc7 github.com/gen2brain/go-fitz", "938206a257c0991500cf6b5419a72967": "RUN go build -tags gcc7 -o /bin/temporal-lens -ldflags \"-X main.Version=$LENSVERSION -X main.Edition=$TENSORFLOW_DIST\" ./cmd/temporal-lens", "f190853a3712051d02b18347126dc732": "FROM ubuntu:16.04", "8ad8086d3ed55d1b81230e7de40d4f47": "ADD setup /", "9a5855a9c31c322b479274f96615cb8c": "RUN apt-get update; apt-get install -y sudo curl bash", "c590855c18adaf5d40fbf00cb12271be": "ENV LD_LIBRARY_PATH=\"/usr/local/lib\"", "7885ca0f985d5e526ad172e384008020": "RUN bash /setup/scripts/tesseract_install.sh", "1392ce204a3f97529fbb2b66a6526962": "RUN ls /usr/lib/x86_64-linux-gnu", "2e0052dd314951775a318ada89310933": "RUN mkdir -p /data/lens", "51dc668c2ca2d53562e5c0b2ed2f724a": "ENV CONFIG_DAG=\"/data/lens/config.json\"", "b7b2539a3cd08434236325b7c73ffedf": "COPY ./test/config.json /data/lens/", "92c95fd9f7a46be08ca81b34d6b7271f": "ENTRYPOINT [ \"temporal-lens\" ]", "82dd85f7ee44fe40186a5432db354c93": "CMD [ \"v1\" ]", "8bc2b8951e0081c43eaa7dfd1ae2455b": "LABEL maintainer=\"korjavin@gmail.com\"", "39705d13748c1666a6a523e1acc0bd29": "RUN curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v1.16.0", "e5c4b0a397502168d271b8f15d1de43b": "ENTRYPOINT [\"/bin/golangci-lint\"]", "b19a6a7bdda401f95abc992d6dc0a201": "FROM golang AS build-env", "9085c9c81dbe25a2aefad4c54be39812": "RUN go get -u github.com/esrrhs/pingtunnel", "a610eba280a2e92a2d8bd8538db706cf": "RUN go get -u github.com/esrrhs/pingtunnel/...", "c113b9fe26ffbd280b94a5a6f9702c18": "RUN go install github.com/esrrhs/pingtunnel", "8690c0eaac9dd84d71a22c51502faf1d": "FROM debian", "fe15d999b49b2ef575b4c2ac892e6edd": "COPY /go/bin/pingtunnel .", "d2d84efbdd49ae37e9def746b1e8bf6e": "COPY GeoLite2-Country.mmdb .", "f642d02a41e5417597b093756ee6c25c": "WORKDIR ./", "96cf4ae9508ff7a9d9cdb6e77ad77a2c": "WORKDIR /paygo", "9479bf241078ccd40e9b30061b4e5046": "RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main ./cmd", "00440b1605ef29d2db8d76b496e986cb": "WORKDIR /paygo/", "93c2a3ece37f9a3f343343cf73daea59": "COPY /paygo/config /paygo/config/", "9c93ea7bd5df7475612c9d3f84197a09": "COPY /paygo/main /paygo/cmd/", "1ebe7b98c286151d30bd0d07d89f4c42": "CMD [\"/paygo/cmd/main\"]", "08d0a763d1d7f4c0c226e77efbc92be7": "FROM golang:1.11 AS builder", "36c70d75dd99b1e813211f043c94b7e5": "RUN go get -d -v github.com/czerwonk/ovirt_exporter", "f850be37ff6371c2d345e5a8182a07b9": "WORKDIR /go/src/github.com/czerwonk/ovirt_exporter", "44a29c4d38c5b13935cddcef566cd8ec": "COPY /go/src/github.com/czerwonk/ovirt_exporter/app ovirt_exporter", "1907ba42e0c948629e3eecadb0a6f514": "MAINTAINER Joey Fang <josudoey@gmail.com>", "bf4928611c2e55683d0b51333e941a4d": "RUN apk add --no-cache --update alpine-sdk git make", "27ca3f88375656d7c52e297aa930d0a9": "ENV GODEBUG=\"netdns=cgo\"", "3b1590cffa6276cab5460d6c8e17215f": "RUN go get -d -v github.com/lightningnetwork/lnd", "7106d56cab10357143f92e0c837cd897": "RUN git checkout tags/v0.5.2-beta", "c87a55b389562d10d70e56de5e80df1d": "RUN cd /go/src/github.com/lightningnetwork/lnd", "3f296cb8a38ffc188157c1c4dc528bff": "FROM alpine as final", "a4429947b2047bbaad3d43bc5dbe06cc": "EXPOSE 9735 10009", "eb578d8ea3099cd026ee8d5be21b9dd3": "COPY /go/bin/lncli /bin/", "961c0dd1f12dadeaf9b452714a70d6bb": "COPY /go/bin/lnd /bin/", "413ea875a406749408c782894d3815c5": "RUN go env -w GOPROXY=https://goproxy.io,direct", "a96403feba673fa414730f1d1763d4cf": "RUN apk add --no-cache git ca-certificates build-base", "0ac19b9fd6acd4d0c18916cdfab3d377": "CMD [\"/bin/sh\"]", "6a0e1ea32e0434a2e989a0c5f4cc9dec": "FROM golang:1.10.1-alpine as builder", "f93c5c3e60293569d4cec83dace8e47a": "WORKDIR /go/src/github.com/battlesnakeio/engine/", "672b55bc783684eaf923e7357c08e531": "RUN CGO_ENABLED=0 GOOS=linux go install -installsuffix cgo ./cmd/...", "2ae3fe5e45be1fd5db23ac49ad07bbf7": "COPY /go/bin/", "d19a0002165fcdb4565a285609cd6659": "CMD [\"/bin/engine\"]", "c4cd26e7fff21c775c05f976b60b81cf": "FROM golang:1.8-alpine AS compile", "ca3059ddd56b78722733f503113aa731": "COPY hello-docker-web.go /go", "ff7c4d6275c5d6574b856fb4fcf1771d": "RUN go build hello-docker-web.go", "01c34871e98c1a8233cc9903b76c24a5": "COPY /go/hello-docker-web /", "b9ceb9ff2e246569188e9f4d37e86162": "USER nobody:nobody", "9a19e790ac9569d664cd9690c457497b": "ENTRYPOINT [\"/hello-docker-web\"]", "c036048804e6d832883290d0110c63c9": "COPY . /go/src/github.com/wuvt/slack-hooks", "06ae670894e9e2bc8a73f41156059daf": "WORKDIR /go/src/github.com/wuvt/slack-hooks", "0ebfb7ef619e9aa70a4bc5841451c0fe": "FROM golang:1.8", "8af7699c92328e3fcb5b58c340d6f791": "RUN apt-get install -y openssh-client ca-certificates tar gzip python-pip", "e9da706feaa723d20570fd006003a496": "RUN go get github.com/jstemmer/go-junit-report", "e754369b076b79634750314858066719": "RUN export DOCKER_VERSION=$(curl --silent --fail --retry 3 https://download.docker.com/linux/static/stable/x86_64/ | grep -o -e 'docker-[.0-9]*-ce\\.tgz' | sort -r | head -n 1)", "6aec998d4362f1f619d4ef7be4db6ac1": "RUN DOCKER_URL=\"https://download.docker.com/linux/static/stable/x86_64/${DOCKER_VERSION}\"", "88affb415880b98df4d67b7d11810c73": "RUN echo Docker URL: $DOCKER_URL", "dd47ae7f01c33ac66752270680865219": "RUN curl --silent --show-error --location --fail --retry 3 --output /tmp/docker.tgz \"${DOCKER_URL}\"", "f72311fc9c51d73c9c7ff7f7264ce0ac": "RUN ls -lha /tmp/docker.tgz", "9a56b2cca7ed140c6246b9cd86d4592d": "RUN tar -xz -C /tmp -f /tmp/docker.tgz", "059d29b7a3268b2b5f183c7b87ca1ef1": "RUN mv /tmp/docker/* /usr/bin", "49e500e56b97eef59eacc60baafaf4a9": "RUN curl -LO https://s3.amazonaws.com/chartmuseum/release/latest/bin/linux/amd64/chartmuseum", "4898cd5ec424b01def0562923d4429e4": "RUN chmod +x ./chartmuseum", "051a3390855a3dabe1ead2aed3c5ed6a": "RUN mv ./chartmuseum /usr/bin/", "30700430a1859b20404f161871fc6daa": "RUN rm -rf /tmp/docker /tmp/docker.tgz", "a62d43217df09ca763fc1e5c16a29437": "RUN pip install --upgrade awscli", "6af1634d016215e408da2157e35a0ea5": "COPY tools/* /tools/", "bf08ce258de3f3a317d557ce85d95ec3": "FROM golang:1.13-alpine as build", "e9f07899a9595f46209b9415c0bf813b": "LABEL maintainer \"Jun Kurihara <kurihara@ieee.org>\"", "981c0961c322b705dbcf9a6517580f7b": "RUN git clone https://github.com/junkurihara/dnscrypt-proxy.git /go/src/dp/", "e3bd2d1ea3bcf811bb09a47b748d2634": "RUN cd /go/src/dp/dnscrypt-proxy", "b998020c853f95b8b379a9d0587e1567": "RUN git checkout filter_nxdomain", "63462b41017b8eadeab1e49f5416476a": "RUN CGO_ENABLED=0 GOOS=linux go install -a -ldflags '-s -w -extldflags \"-static\"' -v ./...", "9a9f01f92c6b50538c97ccaa953eb880": "RUN apk --no-cache add ca-certificates python2 git", "0a38068e84311f6e99cd7a79b4d1dfc2": "COPY /go/bin/dnscrypt-proxy /usr/local/bin/", "b9113b418b983ed2a8948e4896305ff0": "COPY /go/src/dp/utils/generate-domains-blacklists/generate-domains-blacklist.py /usr/local/bin/", "73ea2dd0033ae512bc398753ea948848": "COPY ./docker-bin/* /usr/local/bin/", "cfaeca77aba70572a99446740b891508": "RUN chmod 755 /usr/local/bin/*", "4d86e72bac9abd3ef83d76f28628f9ed": "VOLUME /config", "1f6b39e5494a06bfb2d750cec399d0c7": "VOLUME /var/log/dnscrypt-proxy", "1e0e2497d768abd44562097c3cf513d1": "EXPOSE 53/tcp 53/udp", "d35a1a15af7043227fc7b7b2d24decfd": "CMD [\"/usr/local/bin/start.sh\"]", "efac8d361f5cc66b57738acc8d81271a": "FROM golang:1.4-wheezy", "eba304999bde2db6724b7bd72c7b5bc6": "RUN apt-get install -y whois traceroute --no-install-recommends", "9a81f5d66c1f11850d0239c541f1c004": "RUN mkdir -p /go/src/app", "2165aff3839f340d60770ceb1011be23": "RUN go-wrapper install", "a35d278dcb6068fb7cdc9db0637c5c76": "CMD [\"go-wrapper\", \"run\"]", "4502875e1d1239a463874dd2e73acdfc": "WORKDIR /go/cache", "91e67ef863c634b5ef65d474a6c7dc45": "WORKDIR /go/release", "6e74ba03b1d95a494ba44bd6bd4b1dfe": "RUN GOOS=linux go build -v .", "d0cc2977cb740e5b557f8aeaf5ffcf55": "COPY /go/release/labform /", "8b5b6ca4eb1b45a625e576ff7778ac02": "COPY /go/release/config/config_dev.yaml /config.yaml", "8f8951c0b724c30ce082314b31b01efe": "ENTRYPOINT ./labform -c config.yaml", "a9f992ca43bd854e95f959a355722871": "FROM golang:1.12-alpine3.9 AS builder", "9fc2ba6f880854b044f6fd8423de75af": "COPY . /go/app", "715e1b8c1c21002286686517d3b90115": "RUN apk add --no-cache --no-progress libgit2-dev gcc git musl-dev", "83856854401c83cb01da0238112e70f8": "RUN cd /go/app", "f3fde3902eff02f1b5ee207850f97051": "COPY /go/bin/concourse-git-resource /opt/bin/", "a064b104abd72d3233e691e20049d7dd": "RUN apk add --no-cache --no-progress libgit2 musl", "5afde37fa6f6d6e5f9b61aaa4ae09980": "RUN mkdir -p /opt/resource", "1e63b3d2720badcb0e7d4f383d43d227": "RUN ln -s /opt/bin/concourse-git-resource /opt/resource/check", "908bc997df02b07228bc05f8ce0d4f81": "RUN ln -s /opt/bin/concourse-git-resource /opt/resource/in", "b54ec75c559d5cc8f029a5d97b6045ce": "RUN ln -s /opt/bin/concourse-git-resource /opt/resource/out", "c74682f7d5b8d894e15a95a1b66e59be": "RUN GOOS=linux go build -o simple-http-server", "d87a1237b3ffe91beb1c417958c3fe5e": "RUN apk add --no-cache libc6-compat", "4998a36ca60129ba5f493dc784a5bc95": "COPY /go/simple-http-server .", "6524a94d99a2d475ee1d3398860f5975": "CMD [\"./simple-http-server\"]", "a2be9dc5918d9be91ca02133635e0036": "FROM golang:1.14.2-alpine3.11 as builder", "98f3eabea0388fb84a81b82395fe7263": "LABEL maintainer=\"Khanh Ngo <k@ndk.name\"", "5439796949ba362aca905fdfed421037": "ARG BUILD_DEPENDENCIES=\"npm     yarn\"", "ae1a4083b493cecab2c7939883b77ec2": "RUN apk add --update --no-cache ${BUILD_DEPENDENCIES}", "95152c526d13fc00d7665c698ffb33d1": "COPY . /build", "e634d0baa5235b75ef4dd4537ccc6bba": "RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -o wg-ui .", "391e04b1dfd0acab6fc3e72a881c755b": "RUN yarn install --pure-lockfile --production", "3daf36c6756e73b65611a9fa2f3e70b7": "RUN yarn cache clean", "7b9008dbc4ae8230146e3e36193c3521": "RUN mkdir -p /assets/plugins", "e2c24d3f8ac1c2cbed4b37a0d1741c79": "RUN cp -r /build/node_modules/admin-lte/plugins/jquery/ /build/node_modules/admin-lte/plugins/fontawesome-free/ /build/node_modules/admin-lte/plugins/bootstrap/ /build/node_modules/admin-lte/plugins/icheck-bootstrap/ /build/node_modules/admin-lte/plugins/toastr/ /build/node_modules/admin-lte/plugins/jquery-validation/ /build/node_modules/admin-lte/plugins/select2/ /build/node_modules/jquery-tags-input/ /assets/plugins/", "9fe3a7102c78617b059e5bb84aaf8544": "FROM alpine3.11", "645d6218dd8e1b821224f2e868b527ac": "RUN addgroup -S wgui", "895858f7f265b3618c64cde0dd60e284": "RUN adduser -S -D -G wgui wgui", "f4c301e9a123ccce64b3df356a673414": "RUN mkdir -p db", "a1798baf7295040076c8b83eb486e41d": "COPY /build/wg-ui /app", "2495b5291c8faeeab0946a94cec60eb9": "COPY /build/templates /app/", "abafeb0fb6090e3b95f447a6edec8ad0": "COPY /build/node_modules/admin-lte/dist/js/adminlte.min.js /app/assets/dist/js/", "590a33bb6e4dd33b30756d15f39573eb": "COPY /build/node_modules/admin-lte/dist/css/adminlte.min.css /app/assets/dist/css/", "e217245063e1de807af65809b4aa1678": "COPY /assets/plugins /app/assets/", "55293b049c9598758213b430de775f93": "RUN chmod +x wg-ui", "b5f298ab2777a5de9433f2b86c7bfccf": "EXPOSE 5000/tcp", "3a6de92869e0ee0bb7f0fe2855bcd4d1": "HEALTHCHECK CMD [\"wget\",\"--output-document=-\",\"--quiet\",\"--tries=1\",\"http://127.0.0.1:5000/\"]", "6f0e3a48eb37ec07dd5252ff79e58ab1": "ENTRYPOINT [\"./wg-ui\"]", "02079d60b57aa68b4719304dd2b40cac": "ENV HUGO_VERSION=\"0.59.1\"", "18ffc9d3276710341c23ad906ee9338b": "RUN apk add --update --no-cache alpine-sdk git", "36b43f9189c6b8c11456c183f4f06f73": "RUN wget -O /tmp/hugo.tar.gz https://github.com/gohugoio/hugo/archive/v${HUGO_VERSION}.tar.gz", "5f4fa1eca562480285db5e1b3e2495b6": "RUN tar xvf /tmp/hugo.tar.gz", "c84b50da486a307543f6cd8b89600c20": "RUN cd hugo-${HUGO_VERSION}", "8f9a0e128e5ba67f7272e9053ef7a9aa": "RUN go install -v -ldflags '-s -w' --tags extended", "14c9dd2195cc65ec39c963d0460dc14a": "ENV HUGO_VERSION=\"0.62.1\"", "5366fbb475f3ad0f677e901e541d1a8c": "ENV VNU_VERSION=\"18.11.5\"", "0edd8596b2578f5cb1be1c6742155d58": "COPY /go/bin/hugo /usr/local/bin/", "f2313e7711be0d30132f7d56604d9d66": "COPY vnu /usr/local/bin/", "7f65c8ffbcb5a422cb7f11c1be6e76d1": "RUN apk add --update --no-cache git openjdk8-jre-base", "40bc2f65aa185629056d5deab2b86329": "RUN wget -O /tmp/validator.zip https://github.com/validator/validator/releases/download/${VNU_VERSION}/vnu.jar_${VNU_VERSION}.zip", "2a28c1072bde6101bf21c11321a7f738": "RUN unzip /tmp/validator.zip", "e38cd0fc427fd2fa8af1d8f50e0fe376": "RUN mv dist/vnu.jar /usr/local/lib/vnu.jar", "236631f3fe241187ee089ef86d1fa42a": "RUN rm -rf dist /tmp/validator.zip", "457327d5cd2b0aa743febac27350368b": "RUN vnu --version", "365189c269436c4aa4844fcee7d04b9c": "RUN hugo version", "88e2eee0a550240c1ab5216792a96b91": "RUN mkdir -p /site", "7cfed27f549650b7f143e628cd742a4b": "RUN apk del libc-utils", "94f9cccc3456c1ce38d253bc95b2ca7f": "RUN apk info -vv | sort", "beb65972362668cc60bf24eed92ca2b3": "WORKDIR /site", "c45474f60a7f39b3a97fe9003a3cef62": "LABEL org.label-schema.vcs-ref=\"${VCS_REF}\" org.label-schema.vcs-url=\"https://github.com/t-richards/docker-hugo\"", "e3bc3a84a5f84df264318420c28be3c4": "FROM golang:1.13.8", "bde0e9516eecab867454bf39fb7ec26e": "ARG RHINO_VERSION=0.1.1", "89116710f8144a3bce9a9014e2792c56": "RUN mkdir -p /app/configs", "5c01ffc49214a1b4264549d68b0d4111": "RUN curl -sL https://github.com/Clivern/Rhino/releases/download/${RHINO_VERSION}/Rhino_${RHINO_VERSION}_Linux_x86_64.tar.gz | tar xz", "e0aace060ee439fccbfa5d4394c948de": "RUN mv Rhino rhino", "e8acff5dda1def80f0869cc851133412": "COPY ./config.dist.json /app/configs/", "b30312ddefb980d67039457d6485bd50": "RUN ./rhino --get=release", "f7623ae54d0603bb086ffb479e244559": "VOLUME /app/configs", "5b93188ee9ab6f4977f136a9c5130575": "CMD [\"./rhino\", \"--config\", \"/app/configs/config.dist.json\"]", "95bb56fcb92822c079d8b304dbf53b23": "FROM golang:1.10.1-stretch", "2b96629fad0b989b27c7319085346e6d": "WORKDIR /go/src/ddex/ethereum-jsonrpc-gateway", "a3476e629ec3e32106a31caa850f451b": "COPY . /go/src/ddex/ethereum-jsonrpc-gateway", "c29c2805c5d59e021159fb55a47471d2": "COPY /go/src/ddex/ethereum-jsonrpc-gateway/bin/cli /bin/", "ef7c5f5d2f82ee8e28a94897b4e4f221": "CMD [\"cli\"]", "2a5c83638e056abba8ecb279cecd9d36": "CMD [\"bqv\"]", "b03fd70d9ccc1b6cdfe5d97c5da01abd": "RUN apk add --no-cache git libgit2-dev alpine-sdk", "04951a39e900b3e32e314375009feccc": "WORKDIR /go/src/github.com/bondar-pavel/pitank-server", "4e93071762c5846b141bcc294ac58cb1": "COPY ./go.* ./", "7b28a72d55acd71873f70eac4b7224bc": "COPY ./*.go ./", "4ab1a0a01801957025b97cccd3158897": "RUN CGO_ENABLED=1 GOOS=linux go install -a -ldflags '-extldflags \"-static\"' .", "caa26447e6e8a9fed756595de7b50e7b": "COPY ./static ./", "6aed490061d16aafe203bd5c54d16c86": "COPY ./templates ./", "149e5b8c7b3a6fa884e3f51d25503231": "COPY /go/bin/pitank-server /root/", "09b881339902b60135bc39a6d152c5e2": "CMD [\"/root/pitank-server\", \"--port\", \"80\"]", "b962f6ae80e3de4df6306fb98fbfbaf2": "FROM golang:1.12.9-alpine3.10 as golang", "fe58020716ca184db8c9ab8f6b4d55a7": "RUN mkdir /opt/speedlog", "5750d926d0f70cf9494fcb26860216f6": "WORKDIR /opt/speedlog", "8f001531c5d1b2ea489ad5afe6748a7e": "COPY /go/src/app/main .", "4f463792c1c99d8e49fe7ca9f45262ba": "EXPOSE 8012", "a0585118591fc9a55f0fc0394190dfed": "ADD . $GOPATH/src/github.com/aiotrc/mqttlg", "72c6d213d8fe96ef8a3f86a37c16f530": "RUN cd $GOPATH/src/github.com/aiotrc/mqttlg/", "1443a5a98aa1420b43e795c88f1dd09d": "RUN go build -v -o /mqttlg", "cedd5c89f63e5530178edd059714d4ad": "COPY /mqttlg /app/", "873b815c4ffdf0725b15315729202fe8": "ENTRYPOINT [\"./mqttlg\"]", "c50462531c92af18d9beebd18682ba12": "COPY . /go/src/github.com/porjo/ytdl-web", "81ca0b5ed830182254c5812fce1fdee4": "WORKDIR /go/src/github.com/porjo/ytdl-web", "39321ab990881a6280da6c9982454e1c": "RUN go get github.com/gorilla/websocket", "602f1a72434c37527a928943abd71cd9": "RUN go build -o ytdl-web", "82c7b7eb06c4dc8ad4a395ea17f99e70": "RUN apk --update add --no-cache youtube-dl", "8a5305692c0aa74815eab403797b0e69": "WORKDIR /app/ytdl-web", "8b5c08d4745e07732f0b185c212510d5": "COPY /go/src/github.com/porjo/ytdl-web/ /app/ytdl-web", "4946906b1b5907509af7118a1520da3d": "CMD [\"/app/ytdl-web/ytdl-web\"]", "c602e829b8001b1702a2495c94aab663": "FROM golang:1.10.0-alpine", "72cf56820825915d9e77040a3919540b": "RUN echo 4", "2e7149dde8eb57db682e7789bea22efb": "RUN apk add --no-cache git make", "415efb5bba158762a2b9c72fed11d4de": "RUN /bin/true", "884b969e430105816d2a68b08d58f95b": "RUN go get -u github.com/alecthomas/gometalinter", "b72a9b57421433376306d2e69a5b31b0": "ENV SOURCE_US_BIG=\"http://app.aspell.net/create?max_size=70&spelling=US&max_variant=2&diacritic=both&special=hacker&special=roman-numerals&download=wordlist&encoding=utf-8&format=inline\"", "6e219dd37e703d178589d2cd9ec4fc91": "ENV SOURCE_US=\"http://app.aspell.net/create?max_size=60&spelling=US&max_variant=1&diacritic=both&download=wordlist&encoding=utf-8&format=inline\"", "3aad793b6db43edcf294030a38c781d5": "ENV SOURCE_GB_ISE=\"http://app.aspell.net/create?max_size=60&spelling=GBs&max_variant=2&diacritic=both&download=wordlist&encoding=utf-8&format=inline\"", "ea561f214cb327c1630f433a0acf8032": "ENV SOURCE_GB_IZE=\"http://app.aspell.net/create?max_size=60&spelling=GBz&max_variant=2&diacritic=both&download=wordlist&encoding=utf-8&format=inline\"", "c5a158dab49b830813d9d02e6bc73899": "ENV SOURCE_CA=\"http://app.aspell.net/create?max_size=60&spelling=CA&max_variant=2&diacritic=both&download=wordlist&encoding=utf-8&format=inline\"", "eee6521dd2c0f9e148fb39eba202dcc4": "RUN mkdir /scowl-wl", "9e6764b4182ca406665c73c34f906d3f": "RUN wget -O /scowl-wl/words-US-60.txt ${SOURCE_US}", "c01e8ddd0c1a5565d65f709c4ee3cb71": "RUN wget -O /scowl-wl/words-GB-ise-60.txt ${SOURCE_GB_ISE}", "932e5dc14aec8be636cafa64e16c0cd4": "FROM golang:1.10.1-alpine3.7", "f564ce302b5f73f55e551b5af07f967b": "RUN apk add --no-cache --update alpine-sdk bash", "52750db957d0ccf124140c7f52e12dde": "RUN curl -fsSL -o /usr/local/bin/dep https://github.com/golang/dep/releases/download/v0.4.1/dep-linux-amd64", "80bae0764284c1cd5a2a85d8e6e65018": "RUN chmod +x /usr/local/bin/dep", "89293d20dd6e384a97e7c94947412866": "COPY . /go/src/gitlab.com/mintel/dex-k8s-ingress-watcher", "4762f23c704042c292e2b75f708b39e6": "WORKDIR /go/src/gitlab.com/mintel/dex-k8s-ingress-watcher", "f2dc78fe67236f4d766b1584227ddf79": "RUN apk add --update ca-certificates openssl curl", "dac8932eacff3d09cbbf8080c7d0b16a": "RUN mkdir -p /app/bin", "89258de57b2453d482e7884f3790211c": "COPY /go/src/gitlab.com/mintel/dex-k8s-ingress-watcher/bin/dex-k8s-ingress-watcher /app/bin/", "6c00ea6dfaba8fb9b5ad6d7aa5e2e1ea": "RUN mkdir -p /certs", "6eed3485034028746fd67e02a597331a": "RUN chmod a+x /entrypoint.sh", "e0b99b2bbfcac0b0583ca89daa342b12": "ENTRYPOINT [\"/entrypoint.sh\"]", "b7117d1733ac54cda7e23674929edc8b": "RUN apk --no-cache add ca-certificates tzdata git upx", "7699b578fd1af31a848a72a375bbd41a": "ONBUILD ARG APPBIN=\"build/service\"", "c5dd09037dedc5a0dc75bc80d8f9e7ad": "ONBUILD ENV APPBIN=${APPBIN}", "43c3fb1560836dde6c141776ed8ec4c3": "ONBUILD ARG GOTARGET=\"service/*.go\"", "9dcb58f46a54a9094105bd7c94fb6a07": "ONBUILD ENV GOTARGET=${GOTARGET}", "05021b7ddcabdda97dfae58709716dd4": "ONBUILD ARG GOPROXY", "8ab130b7e14fec265f43e89872fcd75a": "ONBUILD ENV GOPROXY=${GOPROXY}", "88c5c2ad40af63c6b069f14454b6d29a": "COPY build.sh /", "a8abcc90da130ec5e023105a87eab8b7": "ONBUILD WORKDIR /repo", "137804bf22fa83e34e62320de2d02a11": "ONBUILD COPY . .", "2def9c7234dc13af17c1dbe80f98c793": "ONBUILD RUN /build.sh", "b50c639aa990694a8a0cc6c7675d4e74": "FROM golang:1.8-alpine AS builder", "c7b5ecebb1ba540b59bded43f745a94f": "RUN apk add make git", "a80476e54381adcb76a2ddaca7a165fc": "COPY deployer /usr/local/bin/", "ac2dc55ab4bc2801174d339da972e661": "COPY bin/xenserver /usr/local/bin/", "c74ce5e43fd4fe38efe28e17aad62679": "ENTRYPOINT [\"/usr/local/bin/deployer\"]", "a7b31b72e3b3b2a3f140b04ab99fde8f": "MAINTAINER Matt Bentley <mbentley@mbentley.net>", "814cee212f0c5e2ca7b34ecb076a24c3": "COPY gen_token.go /go/src/", "a763447a4a0465430578fd968833cfbd": "RUN cd /go/src", "dd2c96c85b2b15b1db5a278544587f48": "RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o gen_token", "30406905bf7b3611e84f26c8f5ca9c34": "RUN apk --no-cache add bash coreutils curl jq", "8eb4c15feb71b7bdfac052d8ed0424e7": "COPY /go/src/gen_token /", "9a3dfb8549e1a345526cf5915f2c2b6f": "COPY get-dtr-cve-db.sh /", "6202ace849f502855336752d5c6da43d": "CMD [\"/get-dtr-cve-db.sh\"]", "7c66d48ea32aab7967393d3687b5e0c7": "RUN apk add --update --no-cache ca-certificates git", "0ab9ca0c675d121a6a62ba53b1343e7f": "RUN apk add build-base", "b5abb47e5d49bc43965833e4535614ef": "RUN mkdir -p /build", "de29e5ba3332d487f1ae3af59ddb48db": "COPY go.* /build/", "ba7e83c9a54be8686a1edaf772f998c6": "RUN go install ./cmd", "319bf8dca56cd8f4f03c03d23476b8e5": "COPY /go/bin/cmd /usr/local/bin/jwt-to-rbac", "3e9b7d7fe5a4b1f46ea9b65ba2ffaaac": "USER 65534:65534", "3fb028b720123787d31cd934f25e0e6d": "ENTRYPOINT [\"/usr/local/bin/jwt-to-rbac\"]", "d4839420da7626bfb30ab84cd77c0e2c": "COPY ghbackup.sh /usr/local/bin/", "7d994a63a74083c2ad17e4796548792d": "RUN chmod +x /usr/local/bin/ghbackup.sh", "1744f5e43bb89d376c3ba13218971a72": "RUN go get github.com/qvl/ghbackup", "6b670da5285fc153a101bc64cae8df95": "RUN go build -o /usr/bin/ghbackup github.com/qvl/ghbackup", "7cb79d13c36301098e25636d949590d9": "RUN rm -R /go/src/github.com", "25ad7f8a5291eabcaae978c84cf2d6fe": "RUN ghbackup -version", "1756f68bc1690c7d62fb525de5659c86": "RUN echo '0 * * * * /usr/local/bin/ghbackup.sh' > /etc/crontabs/root", "0b74a295d188ab92f8e0fb88c0fde14b": "CMD [\"/usr/sbin/crond\", \"-f\", \"-d\", \"0\"]", "9f6b2461841a6f31bd4b0d64ce288cb4": "EXPOSE 8082", "3b6f537aeab420c557010a0b202456d2": "ENV APP_DIR=\"$GOPATH/src/github.com/elizar/tuku\"", "19aebcaef9d4f175e292a67088e1f69b": "RUN mkdir -p $APP_DIR", "7af51d13d493451b6decf455a43d459f": "COPY . $APP_DIR", "6a0518bb73141a6d862423d9aa9bc65e": "WORKDIR $APP_DIR", "0c8eef2cf41d2a8fafa7d4fe77749bf5": "RUN rm -rf .git*", "48a36ff0103df4d564877f6b47120eb0": "RUN go get -u github.com/kisielk/errcheck", "d365cfe55ef680b0e9d0eb04c7f16b2b": "RUN go get -u github.com/golang/lint/golint", "4d6e0948393a3182aa1e3bdfef46d5a6": "RUN go vet ./...", "5b8da8f4b0fe6805bb2050b575728d70": "RUN errcheck ./...", "73a6c3bf0b4e5b26d5437909f1e08b2b": "RUN golint -set_exit_status ./...", "b2dbce9dde022a2ecf7693a313564d78": "RUN go build .", "b04cf9a426a4e843f5776cc948597b55": "ENTRYPOINT ./tuku -port ${PORT:-0} --file=\"$FILE\" --filter=\"$FILTER\"", "0e91bbb17d6c1e1a53632db3b1fd0913": "ARG GOLANGCI_LINT_VERSION=1.16.0", "7ee60fd8d9240e07bcfc13352c91b4e1": "RUN adduser -u 1000 -D jenkins", "04f638f1f9bdaa4a8b751b71c622e9d1": "RUN wget -O - -q https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | ash -s v$GOLANGCI_LINT_VERSION", "9e421e6a7639816542ba06f59a383996": "RUN apk add --no-cache make git gcc protobuf", "a7680db431537c58a6b2562684cc5c1c": "RUN go get -u github.com/golang/protobuf/proto", "7a7820edb94b4ea7517c946ed3cdeffd": "RUN go get -u github.com/golang/protobuf/protoc-gen-go", "e46b3fcd63d6f5e9f56d1b9d6ce81c86": "RUN go get -u github.com/micro/protoc-gen-micro", "417e2b41ca240769da6c476fc69cbca0": "RUN go get -u github.com/micro/go-micro", "b71cf3d8dcbf9a2c277272c684f0d40b": "RUN mkdir /.cache", "54648a1bafce00bce4275ff14fbecd26": "RUN chmod -R 777 /.cache $GOPATH", "e60bd6de89ce56e1bca584a0db1b685a": "COPY /DynamicProxyEip/dynamicProxyEip /", "bba8c8958d58f315ef439aba38524b99": "RUN apk --no-cache add ca-certificates tzdata", "83bc09638ace59d22db93c6eaccf41c3": "RUN ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime", "8daebd18c49a53e03ac67b43c0dec2c9": "RUN echo \"Asia/Shanghai\" > /etc/timezone", "4c8ec3e624ef79eb96242a19b549a90d": "MAINTAINER Stephan Kirsten <vebis@gmx.net>", "1e9fcaa575c9dec385cc7f8319454166": "LABEL description=\"trigger-proxy builder container\"", "1788f52caedb3f4aee52beb10a6c5df2": "WORKDIR /src/", "baa4186a6536da39552c5b6b2622f443": "COPY ./*.go /src", "341404e1b741930595be3dfdb4bfa3c2": "LABEL description=\"trigger-proxy docker container\"", "be8e2268ee89a23255d91c2492ce8ee7": "COPY ./examples/example.csv mapping.csv", "56c4294132e43c1bcc3e2cfa66821bc4": "CMD [ \"./app\" ]", "454194e4ea1f268b470112251404c002": "MAINTAINER Roman Atachiants \"roman@misakai.com\"", "b31602c7d416c59889d354cc268ac09a": "RUN mkdir -p /go-build/src/github.com/emitter-io/emitter/", "f65109f10f87f60ed1d272bfef681009": "WORKDIR /go-build/src/github.com/emitter-io/emitter/", "d2a83e2c151cadcd3b897545aac06291": "ADD . /go-build/src/github.com/emitter-io/emitter/", "5052720c8bf7bfa0ea0b5ff15ef2e3f5": "RUN apk add --no-cache git g++", "37f05f096aed6cd73f964229930bddeb": "RUN apk del g++", "922d6e932a85d7fc58532bcadc88d10c": "COPY /go/bin/emitter .", "fc532c790f70411bd2a408ac4f0bc84c": "EXPOSE 4000", "abe0d63cc572e9c61b6f6cc64fc067fd": "CMD [\"./emitter\"]", "f0c9fd51c7315fe7ef82e900032def06": "WORKDIR $GOPATH/src/video-reproduction-ms", "5f0b7cc6ef53362846262f3c5494eaeb": "RUN apt-get install vim -y", "ac1a2bf69a780e42512c5c2c600c71eb": "CMD [\"./video-reproduction-ms\"]", "79bc5a4aa5c9e2c333a9672f202c6784": "FROM golang:1-alpine3.17 AS binary", "c492df5102825dff6340573a0cf83993": "ENV DOCKERIZE_VERSION=\"v0.6.1\"", "ab1da102be46bbe6d9df1c09abfe7cbc": "WORKDIR /go/src/github.com/jwilder", "313a870ff70430ef885f4810c49d768a": "RUN apk --no-cache --update add openssl git tar curl", "16268aa34aca0c54f9899399593955ca": "WORKDIR /go/src/github.com/jwilder/dockerize", "20d17f1f70003638700b7978ed6c9fac": "RUN go install github.com/jwilder/dockerize@$DOCKERIZE_VERSION", "11299fb3daa272858b608559bf2f5e42": "FROM alpine:3", "9317b1ce2d6f3e50e5c33b43e4415ecb": "RUN apk add --no-cache postgresql-client sqlite", "890721a1720c83a10da8bb649403dd42": "COPY /go/bin/dockerize /usr/local/bin", "ca24748b064ed1bb9fdb6ad5cac7f5f1": "COPY docker/postgres-setup/init.sql /", "89039cdc5d931dd35d1c7250a4ddc64f": "COPY docker/postgres-setup/init.sh /", "92f563a9a2a7893b7a081260d84770e2": "RUN chmod 755 init.sh", "343551236a3c72bd636d4bdc23f9c9a7": "ENV DATAHUB_DB_NAME=\"datahub\"", "43d3a5a91300d79a81c94fce5dde18ac": "CMD dockerize -wait tcp://$POSTGRES_HOST:$POSTGRES_PORT -timeout 240s /init.sh", "2aac9ee5887a0dbf11962d4793a0e30e": "RUN go build -o app -i cmd/gladius-edged/main.go", "8edb7e320056ffc8df12dc6ec0279cc4": "COPY /opt/genesis/genesis /usr/bin/", "05137a1ffe3f63f40b9e967e48c68f1e": "ENTRYPOINT [\"/usr/bin/genesis\"]", "c79abaf7485fe159cef4846d57df54de": "ADD . $GOPATH/src/github/1995parham/gosimac/", "fa335681eba758e52fae1da153e6ac46": "RUN cd $GOPATH/src/github/1995parham/gosimac/", "055cd50a216f0babb5b77c8612f8188b": "RUN go build -o /gosimac", "ec787aae30513ed828896fe1fa9f0faa": "COPY /gosimac /app/", "d32b5bfc7a3b8805ef2749a731435870": "VOLUME [\"/root/Pictures/Bing/\"]", "bd7866247bac0cc5c203bdc3f05ae4f0": "ENTRYPOINT [\"./gosimac\"]", "a4f0358c4fe7509241737442f5e2bf66": "WORKDIR /go/src/github.com/oduwsdl/memgator", "90ed2629cbff2f67928042adba8ca0e1": "RUN CGO_ENABLED=0 go build -o /go/bin/czds-dl cmd/czds-dl.go", "6405b04909f32cdc20c92ab19184a33c": "WORKDIR /zones", "37bfcfa6a6a2a5aa1cb27d7d983d9fa2": "RUN chown 1000:1000 $(pwd)", "e64e0c49e3ee03d867ba6b46d475ae87": "USER 1000", "bd4451a8f240846bb9399e9b42324558": "ENTRYPOINT [ \"czds-dl\" ]", "3df16bf000d3e4b2baf414e973527de4": "COPY ./login ./", "e4ea64a3c8a1e768829468b4ad290609": "COPY ./store ./", "ebf0e31749a9924a835685e13acefbfb": "ENV HOST=\"localhost\"", "5d9045a73eb2550fdfe541ed53c8fe8e": "ENV PORT=\"8100\"", "ef63d98f1631b22e19b8d5a0c8ca19a3": "ENTRYPOINT goload", "a779fceaf4ffc298f17bc25d83fd6562": "FROM golang:alpine as confd", "8154d2704bdbcc58f328a29f873a1c81": "ARG CONFD_VERSION=0.16.0", "c5b14693da3a5ff5b3a17c78978fda29": "RUN apk add --no-cache bzip2 make wget", "3c31e1024f2b0bc34e622f0b98d60c33": "RUN wget --no-verbose https://github.com/kelseyhightower/confd/archive/v${CONFD_VERSION}.tar.gz", "2eb292aeefedc2aa7bc94fb9a08b8d49": "RUN mkdir -p /go/src/github.com/kelseyhightower/confd", "345500e29a4482f7fd0b8fa3999e5d3c": "RUN cd /go/src/github.com/kelseyhightower/confd", "7ba8e4820cfa1538f572d9f3ab0d5a33": "RUN tar --strip-components=1 -zxf /tmp/v${CONFD_VERSION}.tar.gz", "df330cbcab685fe9bec92433b35f8ef1": "RUN go install github.com/kelseyhightower/confd", "2bb60794c618c6d0a1c176111ce2c72f": "RUN rm -rf /tmp/v${CONFD_VERSION}.tar.gz", "c0c9fad6b14c776060926968105f9f62": "ARG TOR_VERSION=0.3.5.8", "6bcb181bd2d4dd16911f13f9a5a64a7d": "LABEL org.label-schema.build-date=$BUILD_DATE org.label-schema.name=\"docker-tor\" org.label-schema.description=\"Simple docker container for a tor node\" org.label-schema.vcs-ref=$VCS_REF org.label-schema.vcs-url=\"https://github.com/svengo/docker-tor\" org.label-schema.vendor=\"Sven Gottwald\" org.label-schema.version=$TOR_VERSION org.label-schema.schema-version=\"1.0\"", "ac8d1855380775a3e037266290569a78": "COPY /go/bin/confd /usr/bin/", "56b8b9782a6e81d62ddf2e7ea2f92c67": "RUN apk add --update curl libcap libevent su-exec xz-libs zlib zstd zstd-libs", "b34facdd83c273957949182457413df8": "RUN apk add --virtual build build-base ca-certificates gnupg libcap-dev libevent-dev libressl-dev linux-headers w3m wget xz-dev zlib-dev zstd-dev", "24c02ef8cfc5a8948192d8bd946e0cf9": "RUN wget --no-verbose https://www.torproject.org/dist/tor-${TOR_VERSION}.tar.gz", "99b1035b5e06c2281715542edb77866c": "RUN wget --no-verbose https://www.torproject.org/dist/tor-${TOR_VERSION}.tar.gz.asc", "cf20bd993c3b9da4a5c32ac4261e7289": "RUN gpg --keyserver ipv4.pool.sks-keyservers.net --recv-keys 0x6AFEE6D49E92B601 0x28988BF5 0x19F78451", "02ad09badd054bd6ebe29c1164da21a8": "RUN gpg --verify tor-${TOR_VERSION}.tar.gz.asc", "3e73d43de62b303ecbbc2abdf337b6bc": "RUN export \"CFLAGS=-Wno-cpp\"", "631c680234de65518a2696520cf92515": "RUN tar -zxf tor-${TOR_VERSION}.tar.gz", "1dbf25cfa6bf519a27ed8efdc6851c66": "RUN cd tor-${TOR_VERSION}", "af7e9088b7f72758fa6385bb82c00f2b": "RUN ./configure --disable-gcc-warnings-advisory --localstatedir=/var --prefix=/usr --silent --sysconfdir=/etc", "2b9c1440b086ce65eb07d6a734477371": "RUN make test", "edcfad9b4ba5e98589246c1a91fdb35a": "RUN apk del build", "b936e02e6edc2dfc60ecb186280717d5": "RUN rm -rf /tmp/*", "998ddd3fe61b82d76da835e67506f50f": "RUN addgroup -S tor", "fe879ce7b5019d9d542e2bed9efafc5b": "RUN adduser -s /bin/false -SDH -G tor tor", "b9f7f7a26cc393111e73115b54f49979": "RUN mkdir -p /etc/confd/conf.d", "082777253e3602108b5fb879c2f3aeb8": "RUN mkdir -p /etc/confd/templates", "fb303fe2c5b752e548451b73892982f7": "COPY torrc-defaults.toml /etc/confd/conf.d", "3d62beae7037c20c3055972d7927d8e3": "COPY torrc-defaults.tmpl /etc/confd/templates", "77abc72fbb2f3ae67e37948b7421ddc5": "COPY docker-entry-point.sh /entrypoint.sh", "26ea75e04523a5bda6d0a04a346afb00": "EXPOSE 9001 9003", "fb16168e9ad34793ae5be787d5f12677": "CMD [\"tor\", \"-f\", \"/data/torrc\"]", "3288deb32ea73494b10050a2be82933a": "HEALTHCHECK --timeout=5s CMD echo quit | curl -sS telnet://localhost:${ORPORT:-9001} && curl -sSf http://localhost:${DIRPORT:-9030}/tor/server/authority || exit 1", "765435744b81823c029494d13cdf4049": "RUN chmod +x /entrypoint.sh", "6b10cf26c8f91057446b3afeca5013de": "FROM golang:1.10-alpine", "556f96025edf00c6e519fc2bb6ed020e": "RUN apk add --no-cache ca-certificates git python3 ctags tzdata bash neovim", "1f1733be2e942b1132f18b52183133ba": "RUN apk add --no-cache zsh tmux", "3b04a1811b062b186123d945147290fb": "RUN git clone git://github.com/robbyrussell/oh-my-zsh.git /root/.oh-my-zsh", "54ff0a92990e48d67c02b49edc52ad50": "RUN git clone https://github.com/tmux-plugins/tpm /root/.tmux/plugins/tpm", "cd1ab3cd029b510bba30a8d50b0ad2d5": "RUN git clone https://github.com/tmux-plugins/tmux-cpu /root/.tmux/plugins/tmux-cpu", "4cb06edc39c12c9c48851effa62afdfa": "RUN git clone https://github.com/tmux-plugins/tmux-prefix-highlight /root/.tmux/plugins/tmux-prefix-highlight", "02adbd89ff172b7c5f2d6cc3f8de4927": "COPY zshrc /root/.zshrc", "ebc30da5fc25800389ce70ccada63cad": "COPY tmux.conf /root/.tmux.conf", "0639144f0a245614d3b1e0cb5a0cbc21": "COPY tmux.linux.conf /root/.tmux.linux.conf", "08cb0d9a7dd361a9a50b1fe63425711d": "RUN apk add --no-cache curl", "17c825b59121d3a9ef7ea7094fbb4126": "RUN curl -fLo /root/.local/share/nvim/site/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim", "76f2d5130fe0660968c7741333fc5708": "RUN apk del --purge curl", "c8dbbd238d0520cd60e345c995bf3bb0": "RUN apk add --no-cache -t .build-deps build-base python3-dev", "c73f0093c355924475e79653eaf18161": "RUN pip3 install -U neovim", "6d3143c1af9a952d11cb8280c88ce95c": "RUN apk del --purge .build-deps", "aa4b47ab2fe33fa2b38962ca7a95bdb6": "RUN mkdir -p /root/.config/nvim", "7b0560ee04929bbd3f35cf087071c228": "COPY vimrc /root/.config/nvim/init.vim", "42dcb327b9b5e3c2fc237b28392b97a0": "RUN ln -s /root/.config/nvim/init.vim /root/.vimrc", "8387a76ce17f9dea81c5a6b8dec7951a": "COPY nvim/snippets /root/.config/nvim/", "739c8df7b6cbc28f6b110a63f9af5a31": "COPY nvim/spell /root/.config/nvim/", "3dfd0b2f44aac604e21958a25dad6090": "RUN echo \"===> go get popular golang libs...\"", "9000ce74f39d96709f99cc061a4718fc": "RUN go get -u github.com/nsf/gocode", "0da22855308f049efca58ce387b2f747": "RUN go get github.com/derekparker/delve/cmd/dlv", "7598303884b4a634b90fbbee02181223": "RUN go get -u github.com/sirupsen/logrus", "747c15f54adc86510949282e2e6234b8": "RUN go get -u github.com/spf13/cobra/cobra", "617a1e6d293fcb1b5703ac33a41e2ea6": "RUN go get -u github.com/fatih/structs", "d8872cad97a678bf0274a720cf83389f": "RUN go get -u github.com/gorilla/mux", "76aea989e4c1a028590a6a7ec4980c04": "RUN go get -u github.com/gorilla/handlers", "751142054e8fb3e60199816b248cb21f": "RUN go get -u github.com/parnurzeal/gorequest", "414fafe94ec168ab551aa78764aa33c0": "RUN go get -u github.com/urfave/cli", "499dd511dad8f1fc37c4f3d144421614": "RUN go get -u github.com/apex/log/...", "2377d314a33e18e10a907fd6ea7487f8": "RUN echo \"===> get vim-go binaries...\"", "643c1b409383b1abe9f89cec77917c34": "RUN go get github.com/klauspost/asmfmt/cmd/asmfmt", "2e2ee8bdd18f3b32a5bcc2e2b3b86b39": "RUN go get github.com/davidrjenni/reftools/cmd/fillstruct", "30c4e0accf02e5dcbe209a3772c3be69": "RUN go get github.com/rogpeppe/godef", "216e825571be5e5ac176788cf6adbade": "RUN go get github.com/zmb3/gogetdoc", "23b3085f147b685db0769c18c83c9936": "RUN go get golang.org/x/tools/cmd/goimports", "6460c845bb05ab05a8083a2b4f5dd98a": "RUN go get github.com/alecthomas/gometalinter", "583a81833923324aa8bbb69ef67e9f17": "RUN go get github.com/fatih/gomodifytags", "16c4901bab7a5713ed4ecb21963ac5cb": "RUN go get golang.org/x/tools/cmd/gorename", "84612f6f5fd3c4ae3c27bd59069b8b63": "RUN go get github.com/jstemmer/gotags", "34f74c92ebd9a0958a58ebc50f402f3b": "RUN go get golang.org/x/tools/cmd/guru", "8f4b58e1fbf5aae16ac8d50d8585dc20": "RUN go get github.com/josharian/impl", "cfb54a426d3b8ffd377c05fb5570df7a": "RUN go get github.com/dominikh/go-tools/cmd/keyify", "6bf1b47b6b78616a063448e6b985cc5b": "RUN go get github.com/fatih/motion", "af49143a2c2f0cfeeee962b504814bef": "RUN echo \"===> neovim PlugInstall...\"", "96f21a49ea8fdaa075b6b23c2d96be63": "RUN nvim -i NONE -c PlugInstall -c quitall > /dev/null 2>&1", "db7e4f6a309a86f4e1fbb9c1dc3584e5": "RUN echo \"===> neovim UpdateRemotePlugins...\"", "65d128cbc1b136258d744cae2e2133df": "RUN nvim -i NONE -c UpdateRemotePlugins -c quitall > /dev/null 2>&1", "e9543e8f753cb919a18afe82b4787142": "RUN apk add --no-cache wget", "043a741d5a17c4bad72e130afe18519e": "RUN mkdir /root/powerline", "d2dcb3dddca9e107edf1c50dcb30e4af": "RUN cd /root/powerline", "b84cd43539119497788ab40c90fa5375": "RUN wget https://github.com/powerline/fonts/raw/master/Meslo%20Slashed/Meslo%20LG%20M%20Regular%20for%20Powerline.ttf", "52b9d6f48f8fc3c3f31d1b3089aac238": "RUN apk del --purge wget", "5cb1486087c4d52bbe5f7ce562269a20": "ENV LC_COLLATE=\"C.UTF-8\"", "b1727d0be177d8af948303a8447db986": "ENV LC_CTYPE=\"C.UTF-8\"", "390e754d046cc40e52e3ce20ff81befc": "ENV LC_MESSAGES=\"C.UTF-8\"", "c319f9d3c97af0c95d1491ab2f29b1aa": "ENV LC_MONETARY=\"C.UTF-8\"", "6f3d2866ad1431321d893c5adfb3f495": "ENV LC_NUMERIC=\"C.UTF-8\"", "cb5c9635096512b02eadb6ac078f2ed6": "ENV LC_TIME=\"C.UTF-8\"", "d06b037432234d0343c1904e539e89f9": "ENTRYPOINT [\"tmux\"]", "eeb3aab88a02c95de4bfb3ca340cbd99": "CMD if [ -n \"$(ls -1 /usr/local/share/ca-certificates)\" ]; then update-ca-certificates; fi && exec ./prchecklist", "00d335fea5b29c46f78e3c57aca8ce21": "ENV POSTGRES_DSN=\"postgres://localhost:5432/ct-diag\"", "fa2748f193e90584c944d2faed395a1a": "WORKDIR /go/src/ct-diag-server", "407012419dd1e075ec921c27f788f2e2": "CMD [\"ct-diag-server\"]", "e9b7d5f890afbfa8ebf33152594e5a96": "FROM golang:1.12 as golang-builder", "2757e22ceef6eb09b4b0c72c71083e42": "ENV CGO_LDFLAGS=\"-lmecab -lstdc++\"", "5836b24dada1f6f3647dbab127f66c59": "COPY . /", "393996ab7e6228495971ee8012790dd2": "RUN apt-get -y install mecab libmecab-dev mecab-ipadic-utf8", "02323964bbd5f7a9df1ae6535b3bf61c": "RUN apt clean", "2c03472d7965e1322e3312f67406cbec": "RUN go build -o /main /main.go", "8a7197bd19ea110e93f2a5a63672a3fd": "FROM debian:9-slim as neologd-builder", "e20f7952036a7de3ea641f3f2211559c": "RUN apt -y install mecab libmecab-dev mecab-ipadic-utf8 git make curl xz-utils file", "6947fbc35b72fff6397d37657f74bcbb": "RUN git clone --depth 1 https://github.com/neologd/mecab-ipadic-neologd.git", "7cb2a127c33e0b37ea777f6e442d8320": "RUN cd mecab-ipadic-neologd", "b9b37697615645aaccbcad13ba2f0d50": "RUN ./bin/install-mecab-ipadic-neologd -n -a -y -u", "64cf6f05c70f919133195b91bad2b2b5": "RUN mkdir /mecab-ipadic-neologd-dic", "f4e33d66dfd300f2788f9ccb648fb98d": "RUN mv `mecab-config --dicdir`/mecab-ipadic-neologd/* /mecab-ipadic-neologd-dic", "60e612f1c3ed35a6a841da060740d231": "FROM debian:9-slim", "9fa48a567132c4ea19cfdc6cd5cc64de": "COPY /mecab-ipadic-neologd-dic /", "d09ecd9ef0866466c7d175813650aa68": "RUN apt -y install mecab libmecab-dev mecab-ipadic-utf8 python3-pip", "9a99ff3d32fe6a572bf25492f85b0ca3": "RUN pip3 install awscli", "690ce7bb1b899a0efe2bc8d81fdfd081": "RUN echo \"dicdir = /mecab-ipadic-neologd-dic\" > `mecab-config --sysconfdir`/mecabrc", "ebccbe59e0da38ef1d4c593bec4e9e17": "RUN chmod a+x /run.sh", "511124cd828b8f770d930d00b377599a": "RUN date > /build_date.txt", "892f6c09ab4afa97f8387b758134f84a": "ENTRYPOINT /run.sh", "d93e52514ce4df9421d0448ef21405b9": "WORKDIR /go/src/github.com/msull92/macd-tracker", "84377d6cc576802abae2cd9c5b36f27e": "COPY /go/src/github.com/msull92/macd-tracker/main .", "083c7a636fd16ef6dcac7c58bb111240": "FROM golang:1.11.1-alpine AS builder", "b9949c89f9a3c8cee4c1c3bc48802bf0": "USER daemon", "85851dab71d54b2b2ae445c07b0c12ce": "COPY /go/bin/jira-to-slack /", "0ed229c9590941d23d622fac7ed93ad1": "CMD [\"/jira-to-slack\"]", "5073fc27dfbcb9cf1138b3dc4338d23d": "FROM golang:1.13.5-alpine3.10 AS build", "f27ce2c00d6dcfc1b784e5684b18999b": "RUN CGO_ENABLED=0 GOOS=linux go build -ldflags=\"-w -s\" -o botio main.go", "5422ecfad55e54c7e126f0c319e1afa7": "FROM alpine:3.10.3", "800f6218ee896e1216db546b4c478836": "COPY /app/botio /app/", "2572669e6cff195795c8c72bf4f9b846": "ENTRYPOINT [\"./app/botio\"]", "7a7303aed4d24d83cb79037726673dd4": "FROM golang:1.10-alpine as build", "11f88a720309373894bdc46fa4d0afe8": "WORKDIR $GOPATH/src/github.com/danielgtaylor/apisprout", "8a99e8b1536ca3a4c1776c695423e154": "RUN go get github.com/ahmetb/govvv", "7aee080e5ec507ea74063e74fafc9ebc": "RUN govvv install", "4c322d4b6fd4cf89815091c2e19a3d9f": "COPY /go/bin/apisprout /usr/local/bin/", "fc2d82f3503a5cf1d6215dc15472c6ef": "ENTRYPOINT [\"/usr/local/bin/apisprout\"]", "8dea033a4c477dc5ece76943e183122c": "FROM golang:1.13-alpine AS build_base", "bedbcea0311cfafdadcef3e856d14cd6": "RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/g' /etc/apk/repositories", "d8f7b6e0a6204c2eab4f870478ac2abc": "RUN apk add gcc g++", "2c73a9992388d7ad456173899619f349": "WORKDIR /wechat/", "32fc4a01988a48904b6c0563e82b5b9c": "ENV GO111MODULE=\"on\" GOPROXY=\"https://goproxy.cn\"", "d9f64e81a6849758fe925440c18f2f16": "RUN CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -a -ldflags '-extldflags \"-static\"' -o ./cmd/server .", "cd042c130fbedc00182ed94a69348841": "FROM alpine AS server", "4fcff06b223955709d37874f32142447": "COPY /wechat/cmd/server /bin/", "de5affe5a6a1bfd161f96c0fe903925c": "COPY ./config.yml /wechat/", "419a1f8d7f854f5ec0ec12580a9dd91b": "ENTRYPOINT [\"/bin/server\"]", "383760a3186919ad124e27ebc55c77a0": "RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o screenshot ./cmd/screenshot", "fd7b27bae7e94e75ff5701313e994dab": "COPY /app/output .", "7a069e62d558aefbf1ca0ccc944f8999": "EXPOSE 9000", "70c13145c5f1237c0cf910e214a2d568": "CMD [\"./output\"]", "d209fcc056f5f0bfea6c5f704a46f993": "FROM golang:1.12.7-alpine3.10 AS build", "c3fb5a0042b6472788a624d033c64d4a": "RUN adduser -D -u 10000 daniel", "98edcfaa652ddb78b86fec3584b6f1c4": "RUN mkdir /app/", "80b06c30daa07f9956061f0da67d72e8": "RUN chown daniel /app/", "b80d5817e89da16f349f05ac926fb58c": "USER daniel", "31060a62b5d2133648901c005da3e5d9": "RUN CGO_ENABLED=0 GOOS=linux go build -ldflags=\"-w -s\" -o tbot main.go", "a37839670bcbe03393df50b045bd6457": "COPY /app/tbot /app/", "e4296563955371eed71706126b14c0c3": "ENTRYPOINT [\"./app/tbot\"]", "98f0db324d8ad4b6a304e1c8c29552d5": "WORKDIR $GOPATH/src/jniltinho/cli-openssl/", "2331c4ba537baa1fc79ac5a6baee57e0": "COPY get-ssl.go .", "49b8db0fe2b79b72ca5a4d4096781d06": "RUN go build get-ssl.go -o /go/bin/get-ssl", "0c0d7810574a54490aed0cb0dc24b3e2": "LABEL maintainer=\"Nilton Oliveira jniltinho@gmail.com\"", "0e887fd76eae5373704d0c8331bc1113": "ENV TZ=\"America/Sao_Paulo\"", "f0b8cb356ef1ba50b81fae327c870265": "RUN apk add --no-cache openssl ca-certificates tzdata", "95b9c3fcac4f7e2e8b6c68bb3bded9a9": "RUN rm -rf /root/.cache /tmp/* /src", "45a6e6c151053dd6d4b0f90079d22a39": "COPY /go/bin/get-ssl /usr/local/bin/", "62a6bd1492cb8d8f053cebf87a5e5b9e": "COPY get-ssl.py /usr/local/bin/", "8cb7bbae6e4bd5b92df787a634a5f15f": "RUN chmod +x /usr/local/bin/docker-entrypoint.sh /usr/local/bin/get-ssl.py", "258751980fd633e574f3a2b4b2c3d78b": "ENTRYPOINT [\"docker-entrypoint.sh\"]", "5c8627b8a4cdaba821b00f231d294bd4": "COPY . /pwgen", "bbd7cfc1735c0f0b94dd05c7940015e5": "WORKDIR /pwgen", "db5970c47d4c002a5acd6a531e588729": "RUN CGO_ENABLED=0 GOOS=linux go build -mod=vendor -o pwgen cmd/pwgen/main.go", "ee6d315a1fb324bd711951d93d6c0fcc": "RUN addgroup -S pwgen", "32958f61c1cc234b0073d74004302906": "RUN adduser -S -G pwgen pwgen", "7e9da99ffb337435fc50b057cdd77a48": "USER pwgen", "a433c62d048e4d42e8717f8ba52f1e19": "COPY /pwgen/pwgen .", "b45274291470a41c39ae61b088fea1d3": "CMD [\"./pwgen\"]", "82f510f54a38a943d19a5b6066786167": "RUN go install sigs.k8s.io/kustomize/v3/cmd/kustomize", "2b23679c81a04dd640aaf10e66091639": "FROM gcr.io/distroless/static", "2f426cd69457cf6b9dd15abe1f9e38f2": "COPY /root/.config/kustomize/plugin /root/.config/kustomize/plugin/", "0356a4d30a2fb877a8e3efb5e0e2e9cc": "FROM golang:1.12-alpine as build-env", "3e14bb7cdd3aad1a018d3f71db9154f0": "MAINTAINER mdouchement", "123345472d924c481c2889d8960d9080": "RUN apk add --update --no-cache git curl", "b4fdbe7d849d526c3528ca76bb3d1396": "RUN curl -sL https://raw.githubusercontent.com/go-task/task/master/install-task.sh | sh", "35babe4cceeaaf215c9dc0d51cab83d5": "RUN mkdir -p /go/src/github.com/mdouchement/standardfile", "b8d7faf94cf9a26abccb7afe23029909": "WORKDIR /go/src/github.com/mdouchement/standardfile", "6b6261f8592415965290b560f9e4b742": "COPY . /go/src/github.com/mdouchement/standardfile", "c56d7603bb3eae392826f748fa84ba35": "RUN task build-server", "faa0ba12f83dee66d06e59f1c64e7ad0": "ENV DATABASE_PATH=\"/data/database\"", "0c050bc3f4cd42a8748f839a96bf3259": "RUN mkdir -p ${DATABASE_PATH}", "9d2f97eeda3414f5ffd34f786b10b346": "COPY /go/src/github.com/mdouchement/standardfile/dist/standardfile /usr/local/bin/", "fe6492c1f38f0b09a9564e905fabf3d0": "CMD [\"standardfile\", \"server\", \"-p\", \"5000\"]", "9e2bc35eb1f32dbcfdfd7ce47fd1ed92": "FROM golang:1.11.1", "6fab60152d6f401f4c31dafa5d9d19cf": "ADD . /go/src/spinnaker.io/demo/k8s-demo", "40f29a9e25226e71960619a37a9230ca": "RUN go install spinnaker.io/demo/k8s-demo", "7b3c1bbc6f7dea482cd63b11ba80734d": "ADD ./content /go/bin/content/", "1f7e087d344d7bf08bf1e0ff0e04c341": "WORKDIR /go/bin/", "cba2945eec415bf698c87e9e192267fb": "ENTRYPOINT /go/bin/k8s-demo", "fcda45369f52f34031207d000dae0c94": "FROM golang:1.11-stretch AS build", "90e8d5a305c8f3a0434d5e27c667b416": "WORKDIR /go/src/github.com/sigmonsays/webchat", "0dfe314295bfaa3d6cb908a11b31c857": "RUN apt-get install git gcc g++ binutils", "485a8810e7250dbf8614039dfe95e859": "COPY . /go/src/github.com/sigmonsays/webchat/", "9abc08ff68091442cd55d7defd78d976": "RUN go get -d .", "2e11b4cadda66b7e1c2810b503ef327b": "RUN go install -ldflags '-w -extldflags \"-static\"' github.com/sigmonsays/webchat/...", "484e0b880edae03e514a25a414d1cbb5": "FROM golang:1.11-stretch", "85698cc17e1eeb4c782316a1f5d222f5": "COPY /go/bin/chat /webchat", "076e929fc5767c21264181a6e96d1d1f": "COPY /go/src/github.com/sigmonsays/webchat/static /go/", "3b696f4ca8b16a8a9b245509a7d018fa": "CMD [ \"/webchat\", \"-static\", \"/go/static\" ]", "8fa1dee5b02ca9ff10db0d51ac00376f": "COPY models .", "621c58891d56caff4919e46b3b7fe0ce": "RUN sed -i -- 's/__VERSION__/0.1.1/' test_ci.go", "bc2f4fe803c90d5d087853d62ea71989": "ARG GO111MODULE=on", "4573bc67ffaafa5c5aab269778be00b3": "RUN npm install -g yarn", "8de11a58014b1be0d451408aee15872c": "RUN cd ui", "03a47c18b465af0c7e47f4385b854a55": "COPY /go/bin/factom-open-api ./", "ea226eb4b66d8dba5d8646bb2ccf00e7": "COPY ./ui/build ./ui/", "58eff599ed2c0a0d7ea21834e7b5bd9e": "COPY ./docs/swagger.json ./docs/", "50fb634619236f24137d67632b1a69b6": "FROM golang:1.13-buster", "e3379307ccbf3ee6fc134d577074d691": "RUN apt-get install -y git curl tree wget entr tmux ca-certificates nmap python-dev python3 python3-dev python3-pip ipython3 cmake libncurses5-dev", "2c21f3cca5b6fa0bfcc761956bb6f9e4": "RUN pip3 install pymongo jedi pylint pydicom google-cloud google-cloud-storage google-api-python-client flywheel-sdk requests google-auth oauthclient PyYAML", "ce9588b48f3f2c820c7d3604887fdc3a": "RUN curl -sL install-node.now.sh/lts | bash -s -- -y", "e63cd9dff3102087f93d9b85f0191cfd": "RUN npm install --unsafe -g dockerfile-language-server-nodejs", "9c9ddc37ff0e98e115b7141384a8a83a": "RUN git clone https://github.com/vim/vim.git", "5c0781832874d787bfaee71d1b31f98a": "RUN cd /tmp/vim", "d963d27738d7f29963ef91a6dd9fc1b5": "RUN ./configure --with-features=huge --enable-multibyte --enable-python3interp=yes --enable-perlinterp=yes --enable-cscope --prefix=/usr/local", "dbc0af103fb9cc0e0f57682fdb211440": "RUN make VIMRUNTIMEDIR=/usr/local/share/vim/vim82", "a23e2857db1028d6938603ed10096685": "RUN curl -fLo /root/.vimrc https://raw.githubusercontent.com/tcbtcb/work-image/master/.vimrc", "e9c29d0533a409fbfc2b176a00a234c4": "RUN curl -fLo /root/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim", "78dbde19b76b31c8a53c6b5664b8b1a4": "RUN curl -fLo /root/.vim/coc-settings.json https://raw.githubusercontent.com/tcbtcb/work-image/master/coc-settings.json", "6c7906c8998961c90beef7005327b77f": "RUN vim +PlugInstall +qall", "2c697fefad4608388dd0fd3543c313fe": "RUN vim '+CocInstall -sync coc-json coc-yaml coc-python' +qall", "4a951c8c858c917248471484e7494231": "RUN vim '+GoInstallBinaries' +qall", "da301171935ccbec737bb92fb13d1581": "RUN vim '+helptags ALL' +qall", "dde40f44f04750626b8dc4b4d9a4a357": "RUN echo \"deb http://packages.cloud.google.com/apt cloud-sdk-buster main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list", "d8b1a432101cbb77c7b02fe36dfe2a57": "RUN curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -", "2692d3c99c745a8e91a4379429f7c76c": "RUN apt-get install -y google-cloud-sdk", "7f14f30d2865f3b8220fe71dcd37b103": "RUN go get github.com/flywheel-io/sdk/api", "2eddba839bb41e7c00a24bb5261d8f79": "RUN go get github.com/spf13/cobra", "9d73f37f7a4cd484989108b9c05c2bb0": "RUN go get github.com/labstack/echo", "ef6c192ef0643a87951b7232b659a055": "RUN curl -fLo /root/.bashrc https://raw.githubusercontent.com/tcbtcb/work-image/master/.bashrc", "94a43b34c3ef9d185a59208c7e29ce46": "FROM golang:1.9-alpine", "0ad022c8c74e3a0fc849a243242efc04": "COPY ./glide.* ./", "dbabd6cea26a4ba0b06a3041fc37db03": "RUN glide install --skip-test -v", "787fd4bb8e126321351542225f3b25bb": "RUN CGO_ENABLED=1 GOOS=linux go install -a -ldflags '-extldflags \"-static\"' ./pitank_server", "5b198aa5b94ab8d896ccb9a1c40794ae": "COPY /go/bin/pitank_server ./", "dc00ae3356d674d2080aa17d328e3dc7": "CMD [\"/root/pitank_server\", \"--port\", \"80\"]", "0d7787448a273f76c6ad27b5c395c3c9": "RUN apk add --quiet --no-cache build-base git", "ca0665159b102d9407173fd4c2ecde60": "WORKDIR /go/src/github.com/n0madic/app2kube", "7766d07aa43403a70f507ea4fb05ebeb": "RUN cd cmd/app2kube/", "35540ee7d1725b54a8fdc238305d5cb6": "RUN go install -ldflags=\"-s -w\"", "d73244330cdc870cfa6946868c9c1b43": "COPY /go/bin/app2kube /usr/bin/", "f30e6f6c1ec72d26b2c9770ed2bfb4fc": "CMD [\"app2kube\"]", "b8c40e5c383ae14e28c017e2d8bd5f02": "FROM golang:1.13.0 AS builder", "b21355bb5cdae7de26f101d8c4f2fb2b": "RUN apk add su-exec", "c4781742254208f8e5f6afff7e4f9d41": "COPY docker-entrypoint.sh /usr/bin/", "3424409cac6e6d390f9caf5248766615": "ENTRYPOINT [\"/usr/bin/docker-entrypoint.sh\"]", "795d1c74a61b9f5d1bc59de084c00627": "LABEL maintainer=\"leerohwa@gmail.com\"", "fbcd0acd8d34e1459fd466aeabc83826": "LABEL add=\"https://github.com/aloxc/gobanner\"", "f6cdfc3e0288b55d1418e52dd1af2673": "LABEL description=\"this is a golang banner,using golang file create a banner\"", "9197b48da613a486c12fa24485a3fe18": "RUN go get github.com/aloxc/gobanner", "1b49c5abcc70e817e01bf8443983a890": "RUN /go/src/github.com/aloxc/gobanner/gobanner", "cc3519562ee32b8a52be63a11907c28d": "WORKDIR /go/src/github.com/go1com/rabbitmq-consumer-bridge/", "2f8a6649be96b927d9e3aeabf7d7438a": "COPY . /go/src/github.com/go1com/rabbitmq-consumer-bridge/", "c444fd77bb3c2a2b39316a3bc9a0d32f": "RUN GO111MODULE=on go mod vendor", "6f7e73e386dbcb5c51885d444b42e2fe": "RUN CGO_ENABLED=0 GOOS=linux go build -o /app /go/src/github.com/go1com/rabbitmq-consumer-bridge/cmd/main.go", "d159a58d905b22f66afe7d02773d7a35": "ENTRYPOINT [\"/app\"]", "0c47f8adda2a2921551210b4b5ec3c92": "FROM golang:1.7.1-alpine", "039819bfaa902b5ebf4848ff162b82a7": "ENV PROJECT_DIR=\"/go/src/coding_challenge\"", "00d62adcfbf3a78969c8ecfebe1bb782": "COPY ./wait.sh ./", "396fe94181cd80e360636d6db574798e": "COPY /go/src/coding_challenge/app/.build/coding_challenge ./", "07308a6c23f0beb2a62600102da7a5ba": "WORKDIR /go/src/docps", "707b913597099825f1dab207e4f532b1": "CMD [\"docps\"]", "88d9822bdb604044e487a99f499ad123": "RUN go build -o whaling", "b9c83b41f3dbebd2d8142c656f859cb5": "ENV URL_LABEL=\"\"", "b9d25fe5b2a3401cf93652bc4fc6cb88": "COPY /src/whaling /app/", "d70280ff60be8722cf3edc2f52dfb60e": "ENTRYPOINT ./whaling", "7fe760b49b073e7ec23994bb5a224704": "LABEL maintainer=\"Radu Toader <radu.m.toader@gmail.com>\"", "ee5370ade1f4a70e10a1c1402b9db8b5": "RUN apk --no-cache add ca-certificates bind-tools", "defc83bdc77668479c1f4c661358f73f": "FROM golang:1.11-alpine3.9 as builder", "7124149f65f64a1530fa5dbf0fd4ac89": "ADD . /go/src/github.com/mujx/scrape-proxy", "602c187fdcd0de62d061ed808dbfcd2c": "WORKDIR /go/src/github.com/mujx/scrape-proxy", "1f1562dd98f5df5446ec822970cae929": "COPY docker/run.sh /app", "1e5e00ac34dfac5a68be022625e0e80a": "RUN apk --no-cache add make dep git", "7561a9714fa7d2098487ad009b9ed792": "RUN make static", "006c4303beae1a9911a053267483f703": "RUN cp ./server/server /app", "55894b4f629632401ed823fbbfb17f2e": "RUN chmod +x /app/server", "6f4f15d6fea72cebf22112b35eaa96df": "RUN cp ./client/client /app", "636432c475f84927de2559e72e31ed77": "RUN chmod +x /app/client", "b7a4cac6c97d281b267123bdd78fc94f": "RUN chmod +x /app/run.sh", "db8febbe48d459437972fbadb4a664cd": "ENV RUN_MODE=\"server\"", "124c26ed1b7ab7833f177b2c244666fe": "ENV CLIENT_PULL_URL=\"tcp://localhost:5050\"", "8947a9549dc90420b1f2eee687fcc78a": "ENV CLIENT_PUSH_URL=\"tcp://localhost:5051\"", "f65fc38323a8efc5b6bfe0e6f553adf9": "ENV CLIENT_REMOTE_FQND=\"localhost\"", "c6c2d6a8a043da7146df724d64cc1869": "ENV CLIENT_HEARTBEAT=\"10s\"", "580301e0d24e75228dbbd843ffa046c9": "ENV SERVER_PUSH_URL=\"tcp://*:5050\"", "348863c8616585e9deac2a7fc81969c2": "ENV SERVER_PULL_URL=\"tcp://*:5051\"", "4ea49a06d8c3cacb9ce8725c2efa98af": "ENV SERVER_WEB_URL=\":8080\"", "dfad220cb59dd32f5662864a9b282add": "ENV SERVER_TIMEOUT=\"30s\"", "e88ed4b3d327b84c89d8d024f096213d": "CMD [\"/app/run.sh\"]", "fe0a21faf4a06ae950a63d52e9534cd2": "RUN git checkout tags/v0.5.1-beta", "445dff7a2dcb88a895f9399d5f41d7f1": "FROM golang:1.12.3-alpine3.9 as build-env", "b7e44f6c70362d59ecf77921935f5d51": "RUN apk add git make", "e34c7e23c8164367fe7ee3747fc69d0b": "WORKDIR /server", "a2baf506bd90657d6cfa4a67f33f4dee": "COPY / $GOPATH/github.com/rnidev/go-webscraper", "fd30124fdde4e1ff350405f7faeb9a1a": "RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -o /usr/bin/scraperserver ./cmd/server", "05a60bba16db9a1be05d7149f7b0dc97": "COPY /usr/bin/scraperserver /usr/bin/", "e7a1dfe8e10553add5570909acb08dc3": "ENTRYPOINT [\"/usr/bin/scraperserver\"]", "70533b62fd4ab6addc31c2269560c2cf": "COPY /go/src/github.com/containous/lobicornis/lobicornis /usr/bin/", "425c6e2136eb376b47a775f3db60f037": "ENTRYPOINT [\"/usr/bin/lobicornis\"]", "e61779418327eb8be6eb3e89289a20db": "ENV PATH=\"${PATH}:/tmp/git-annex.linux\"", "c817318e4d6e9cabcfe82f4c09305a51": "RUN apk add --no-cache git openssh curl", "25b5c8d06a4bb1cf7fbef92a74ff5633": "RUN curl -Lo /tmp/git-annex-standalone-amd64.tar.gz https://downloads.kitenet.net/git-annex/linux/current/git-annex-standalone-amd64.tar.gz", "23515f9994c544138e9a680d59443442": "RUN tar -xzf git-annex-standalone-amd64.tar.gz", "c7442fb3cbadd7989acd1697cf4594f7": "RUN rm git-annex-standalone-amd64.tar.gz", "072a0635d3de80a9b17524b05a01970b": "RUN apk del --no-cache curl", "b6add24d0ce197cd5660cc713e11f1b7": "RUN go get gopkg.in/yaml.v2", "5d9332f869c6288fd5ffbb18b99fd5a7": "RUN go get github.com/Sirupsen/logrus", "74d4a7bcbdcf3c06580062068cf93ede": "RUN go get github.com/docopt/docopt-go", "4c6be00aec336f8903f3e22dbb1233e6": "RUN go get github.com/G-Node/gin-core/gin", "3883c5edea9d152895b8f919429e8e05": "RUN go get golang.org/x/crypto/ssh", "150339945e5661536375b15deae7d93c": "RUN go get github.com/gogits/go-gogs-client", "c855d74085fccd312b40f7cdc8d11131": "COPY ./cmd/gindoid /", "161393c47ad2c91a23c41259918a4869": "COPY ./tmpl /", "c879a3b1dca09cb852912a7749721d4a": "WORKDIR /gindoid", "ffc5533319c20de40f482ff73a311ddc": "VOLUME [\"/doidata\"]", "d3e1157f434512cfc7d958ed627a0cb0": "VOLUME [\"/repos\"]", "c38b0cfde8bb6208e7b9342458323a24": "VOLUME [\"/gindoid/config\"]", "cebd7d56ba627befb5000d28c9f5cdcc": "ENTRYPOINT ./gindoid --debug --knownhosts=/gindoid/config/hostkey --target=/doidata --templates=/tmpl --key=$tokenkey --port=10443 --sendmail --mailtofile=/gindoid/config/emails --mailserver=$mailserver", "f735e33aa542fd55d1ff24bfcddd6926": "EXPOSE 10443", "a158b19827fbd06807efaeec3934a657": "FROM golang:1.13.5-alpine AS builder", "585e05e081c8569a3f0197762b42a871": "RUN adduser -D -g '' elf", "3b97958b313d60088fa6c1356f44442e": "WORKDIR /opt/app/", "3b57245028fa07664cc1828451502f32": "RUN go mod verify", "9f9eed7a92de2c557dffd3134277483b": "RUN CGO_ENABLED=0 GOOS=linux go build -ldflags=\"-w -s\" -a -installsuffix cgo -o /go/bin/server ./cmd/server", "5c600cefcd2b2705e4d7cfe6f86a9d4a": "RUN CGO_ENABLED=0 GOOS=linux go build -ldflags=\"-w -s\" -a -installsuffix cgo -o /go/bin/client ./cmd/client", "74d035cc4ebf3383386495e6a65f9fd0": "FROM alpine:3.11.2", "0871285e90f23e41f6b983c1a6aa4a9c": "LABEL description=\"Aplicaci\u00f3n de ejemplo para el libro \u00c9rase una vez Kubernetes.\"", "0496ea5baa856a5aa9e9a5aaea8bc04a": "LABEL language=\"golang\"", "d08a24e52884d5ee573be60ad75877d6": "COPY /etc/passwd /etc/", "0ed74b8b6de59ec9a5cb14d63f4a9133": "COPY /go/bin/server /usr/local/bin/", "839486e47a73a68ed94018d5b22a23b7": "COPY /go/bin/client /usr/local/bin/", "ad29218be8217c6d140fdf2772eb0c0e": "USER elf", "d37dd1d4e5a11191bf60dc438ac484bc": "ENTRYPOINT [\"server\"]", "607e06d8d8d6e1a5f86f0ac38248b3f6": "WORKDIR /go/src/github.com/ccbrown/gggtracker", "4f7298844025a3718f748347661a22a0": "RUN wget -O - https://raw.githubusercontent.com/golang/dep/master/install.sh | sh", "f76cb9d42132190f390d0877d9adf5af": "RUN go vet .", "1a5f4b16a435754b1b6439638c3f0225": "ENTRYPOINT [\"./gggtracker\"]", "cb4e5eb8cc28fae396865b1f5dfa4989": "WORKDIR $GOPATH/src/User-Management", "7df1ea5293d3e96a48a2ad2ea2c36d2e": "RUN go get -u github.com/go-sql-driver/mysql", "0343c73a4ac6c1bd6e8880734fbce94b": "RUN go get -u github.com/go-chi/chi", "15421eccedabb3af414528b15f98aa8b": "CMD [\"./project_user-management_ms\"]", "c02b4b80c0608d79107d30e09389e9e8": "FROM golang:1.11.1 as build", "83d3976e769e572c5135d40c7eed162f": "COPY . /resiproxy", "d6b7b9167dc7bcd81832e6a33c962d0d": "WORKDIR /resiproxy/", "1fde30e8c706e5973247ce8108fde5f9": "COPY /go/src/github.com/marqub/resiproxy/resiproxy /", "0eda4a83d6d82f6d904c5779e1cbf0e2": "ENTRYPOINT [\"/resiproxy\"]", "8ec687d2d5017318259a542fafc76e42": "ARG GO_VERSION=1.11.5", "fc5c9a7f017b34b318c1c3ea7ff7e897": "FROM golang:1.11.2-alpine3.8 AS apibuilder", "b1fe9658882d5ee2ef400179cd444ea6": "FROM node:10.14.0-alpine AS frontendbuilder", "e2748416afc601585bf44f82fe35fb8d": "RUN yarn --frozen-lockfile", "d7c0631d2265ffc21d7fa760878f01b5": "ENTRYPOINT [\"/go/bin/server\"]", "674a8eed189c5c02ad08a7688d613139": "RUN go build -o main -trimpath -ldflags \"-X main.version=$(git describe --tags --dirty --always)\"", "9411993b650c00306e532786d404270d": "COPY /app/main /", "d09d6ba335de31d521176838171d4b06": "CMD [ \"/main\" ]", "def0addd8ce97f941612c319c0156868": "FROM golang:master", "264a3acad160f5abd5b59dc480a73b23": "LABEL MAINTAINER=\"xieWei(wuxiaoshen@shu.edu.cn)\"", "5250fb4d4d3c6db527b64d3ce9f76bd3": "WORKDIR /home/src", "0e4d4b05263c297341a9b272b3c32132": "RUN echo \"Hello World\"", "3cac824e99ab91a33961ad0a02d819bc": "CMD [\"bash\",\"-c\", \"exec.sh\"]", "7ae6623e740b7185c32615f5f63e827b": "FROM golang:alpine as build", "32a493951b100b4634f09aee7b39727d": "WORKDIR /temp/build", "985766683092736b6e410d40b9096925": "RUN make clean build", "2d5e0fc99feb072da8e89e4b6a42c8b1": "COPY /temp/build/target/* /app/", "c05bb53c7f59939a7b331faf9583f1ea": "COPY _example/* /config/", "89daf07e3253751ec7d95b86c8d058f7": "VOLUME [ \"/data\", \"/config\" ]", "56f99d1f0ff89d5a6b762ca5ad67a39e": "EXPOSE 25/tcp", "7cdc7edd2c5e5e5dc3e2892f609f0e40": "EXPOSE 587/tcp", "a63aa9aad9b00cff7208d2275957bde7": "EXPOSE 110/tcp", "b24a914627c0e01966150c696f3c528d": "EXPOSE 995/tcp", "8f187db4a8b25aba356a31dbfb599ed2": "CMD [ \"./briefmail\", \"--data\", \"/data\", \"start\", \"--config\", \"/config/config.toml\", \"--addressbook\", \"/config/addressbook.toml\" ]", "c7ce0d8f0ed7882bb576236afe45ab15": "RUN git clone https://github.com/korjavin/golangci-lint-1.git", "7fac09b8712e11cc9a878ac8f54bc877": "WORKDIR /golangci-lint-1", "9deb7f34cd4c64a98a0c5472103e3029": "RUN cp ./golangci-lint /bin/golangci-lint", "2eb663847ad1c95e8851f5909f1676f2": "RUN go get -d -v github.com/gorilla/mux", "32a4629e4021dbc99a279293841c1b48": "CMD [\"main\"]", "11b8cc4ffb2a3d2631cfa37eadfcbae4": "RUN mkdir aes-encryption", "bb4377843aa3a33f494b305856b1f27d": "ADD . /aes-encryption/", "31a983aed39fbbac6222facb22ac51c6": "WORKDIR /aes-encryption", "05cd1b925df63e335f319140b8603571": "EXPOSE 8086", "0206d70d36313c1ef2b6f14c5380eca1": "RUN go build -o aes-encryption .", "aa385dfcd4636c686db2290c1b02a8e4": "CMD [\"./aes-encryption\"]", "eb73c52a86e929b5627f6bbc65c93b62": "FROM golang:1.11.2 as build", "6557b2cf188bd063248513a6f37ef22e": "COPY /resiproxy/resiproxy /", "3e85e81e8f20ce231733d0905e4fbc29": "ENV RELEASE_TAG=\"2.0.19\"", "db42b87c53515a8dfcbcd7ddd86630dc": "RUN git clone https://github.com/jedisct1/dnscrypt-proxy /go/src/github.com/jedisct1/", "61dd71bbab1a331aea65f79004b7a2f0": "RUN cd /go/src/github.com/jedisct1/dnscrypt-proxy", "05e9aa6970d02958fa72e1e8607ffac8": "RUN git checkout tags/${RELEASE_TAG}", "1f2764688f867a1c0e4b5da7d79e9d7a": "LABEL maintainer=\"Predix Edge Adoption\"", "7faf9ab4f5e87b0f9176ae6b88caf2c8": "LABEL hub=\"https://hub.docker.com\"", "46408035abe765760ceff6fe85d76bd4": "LABEL org=\"https://hub.docker.com/u/predixedge\"", "744faa3fa1645e1ea0a5066ea0ceb5a6": "LABEL repo=\"predix-edge-sample-scaler-go\"", "f243c41f9c45932cde7ff529432ef2c5": "LABEL version=\"1.0.4\"", "abe5c9c4d85e3cebe773100bcc09c60d": "LABEL support=\"https://forum.predix.io\"", "c9cdab90d22726bbbc54029782a65d69": "LABEL license=\"https://github.com/PredixDev/predix-docker-samples/blob/master/LICENSE.md\"", "9c8b2c33f7a5849d868ca77fa1f55738": "WORKDIR /usr/src/predix-edge-sample-scaler-go", "02aae12c6808489f9f932baabede492f": "COPY src/app.go .", "3c3b90b9dbaf171ee1c6fe40da1a32f9": "RUN go get -u github.com/eclipse/paho.mqtt.golang", "78960cef3d53b4c3a1d14ee4a5f2243e": "RUN ls", "d992a9d0ad5c3f84ecfc2190c482e232": "RUN go build app.go", "fed59f97a9b83fab5f79e2df1bff4c78": "FROM golang:1.9.0-alpine3.6 as builder", "ef809e5e7ad44f761954e5505861b00d": "WORKDIR /go/src/github.com/mono83/oscar", "881a72347ba4413b8c63804cd20dc097": "FROM busybox:1.27.2", "7f9f3b09334d94c95261184c2d3aa922": "COPY /go/src/github.com/mono83/oscar/release/oscar_linux /oscar", "e1b9ecd882a2dc7de522e49c92848f16": "RUN chmod a+x /oscar", "ad0e4bbda353c93729ecd94c691be922": "ENTRYPOINT [\"/oscar\"]", "057b89682b402c6c93f2b0ebe922d7c2": "FROM golang:1.14 as builder", "3837fde2460fcc9f4fc37f571cf79f31": "ENV JSONNET_VERSION=\"v0.15.0\"", "ad178b7791e06fdd1f3a0ac8ca2f073d": "ENV PROMTOOL_VERSION=\"b90be6f32a33c03163d700e1452b54454ddce0ec\"", "8e22ad3693967c54f1eb039f8b18c154": "ENV GOLANGCILINT_VERSION=\"v1.23.6\"", "9cf9244645d7979ba6825e13657b8be8": "ENV JB_VERSION=\"v0.3.1\"", "fb914e6ad75c561826cc776d54d5cba2": "ENV GO_BINDATA_VERSION=\"v3.1.3\"", "2a111bfaa8816e1f2c12b7589be496f9": "RUN apt-get install -y g++ make git", "308544f4dacb3c46d4ccde62a929d5b4": "RUN curl -Lso - https://github.com/google/jsonnet/archive/${JSONNET_VERSION}.tar.gz | tar xfz - -C /tmp", "7f43f72a55621c5756d62a67a43a8ff6": "RUN cd /tmp/jsonnet-${JSONNET_VERSION#v}", "2717962899662a6448f3ce30a5fc3d1f": "RUN mv jsonnetfmt /usr/local/bin", "666526ac2543d62693ebe6c059d683af": "RUN rm -rf /tmp/jsonnet-${JSONNET_VERSION#v}", "81f9ba4870149fe9b62eeae465d26339": "RUN GO111MODULE=on go get github.com/google/go-jsonnet/cmd/jsonnet@${JSONNET_VERSION}", "add99d9436c251ecf8305cc2e84d91a4": "RUN GO111MODULE=on go get github.com/prometheus/prometheus/cmd/promtool@${PROMTOOL_VERSION}", "d2d8e05a232e2243da0060c1109a36df": "RUN GO111MODULE=on go get github.com/golangci/golangci-lint/cmd/golangci-lint@${GOLANGCILINT_VERSION}", "78e2e12e4a77c348e8cd019944585d5d": "RUN GO111MODULE=on go get github.com/jsonnet-bundler/jsonnet-bundler/cmd/jb@${JB_VERSION}", "370634a34ad44cfea27c4d83393ba7a2": "RUN go get github.com/brancz/gojsontoyaml", "20ade6a83b59f44e753d6583b6e0473a": "RUN go get github.com/campoy/embedmd", "ce2ebd38f6c5f82c010c55201862edfc": "RUN GO111MODULE=on go get github.com/go-bindata/go-bindata/v3/go-bindata@${GO_BINDATA_VERSION}", "839da09cd31e8bfc1297bda293f32480": "WORKDIR /go/src/github.com/prometheus-operator/prometheus-operator", "db0baa037d8ac96b0599c77d3a2da96b": "RUN GO111MODULE=on make po-lint", "6e7860dd1c83ea08eb243c862f1dc3b6": "RUN chmod +x po-lint", "12d14060d74624fd10fad130775b9bd2": "RUN mv po-lint /go/bin/", "47498cce886b3660a2e902af20e65fb9": "RUN apt-get install -y make git jq gawk python-yaml", "94e09aded16a0c415b3a79a3e1bbebab": "COPY /usr/local/bin/jsonnetfmt /usr/local/bin/", "ba95937aa2ad373a70415bee9fbf3512": "COPY /go/bin/* /go/bin/", "4eb6ba77f4e1a795028925be48e8a7c9": "RUN mkdir -p /go/src/github.com/prometheus-operator/prometheus-operator /.cache", "a9b84c6c939ee46db78ccb3a30fcecfa": "RUN chmod -R 777 /go /.cache", "817c52592cbe3b3e6fe446fa9eb4df69": "LABEL maintainer=\"Jasper van Herpt <jasper.v.herpt@gmail.com>\"", "825f0909d631cb8cf5f4b077fe602174": "RUN adduser -D -g '' app-user", "937dcbcacd601d4b8d8141cc05812868": "WORKDIR /opt/local", "77bcb76a312b0fd220849390abbb347b": "RUN apk add --no-cache git make ca-certificates", "bd1b53406057f6551ef82e01bf3541f7": "RUN go mod vendor", "b8e125f2e517b684e489761d8386f858": "RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -v -ldflags=\"-w -s\" -o ./bin/checker ./cmd/checker", "1bb641aad32710c46ea6f089694dc117": "RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -v -ldflags=\"-w -s\" -o ./bin/cli ./cmd/cli", "8f931ca6228f1f9a2dad3c6e0f909b8b": "COPY /opt/local/bin/checker /usr/bin/", "b0b27684c3978bd773f3189b51acc1d7": "COPY /opt/local/bin/cli /usr/bin/checker-cli", "08a6ce81f606d07ab06f9ac5d0ba696d": "USER app-user", "77d0446778aabb031ff6ade2442dfbb7": "CMD [\"/usr/bin/checker\"]", "90adbe0793c568f78669e98f6980e029": "ARG VERSION=v2.2.0", "6d3efde31315b7683cba8901bcdde8cb": "WORKDIR /go/src/github.com/thomseddon/traefik-forward-auth", "7d94327c1c7a1d87f6d8ba8da0b1d9d8": "RUN git clone --depth 1 -b ${VERSION} https://github.com/thomseddon/traefik-forward-auth.git .", "8e61a649c202b7ed2ddc24457dd65fa5": "RUN go build -a -installsuffix nocgo -o /traefik-forward-auth ./cmd", "c136fd065bcfce4adba0e0ccd240a8bc": "COPY /traefik-forward-auth /", "a71d31b480d6eec1d792b13193a9d550": "ENTRYPOINT [\"/traefik-forward-auth\"]", "c3e9c7244bd421f24950c47b5809ce94": "FROM golang:1.10 AS build_env", "0dc42a252f4c35de363406a6af097c37": "WORKDIR $GOPATH/src/github.com/ah8ad3/gateway", "e8b1302d7c5050111bfc9c3b26a47370": "RUN go get -t ./...", "433bff8e9dfb4844daa9f50ce1014773": "RUN sh build/build.sh", "84d6105911442a53b8149814ab7e3191": "COPY $GOPATH/src/github.com/ah8ad3/gateway/dist/gateway .", "d8d4a9aba8bf43dee1c485d1043378e4": "RUN apt-get install -y openssh-client ca-certificates tar gzip python-pip lsb-release", "73f8fafb2f5d04a0ccda50b85a87d367": "RUN curl -LO https://kubernetes-helm.storage.googleapis.com/helm-v2.7.2-linux-amd64.tar.gz", "d5be084b39a036599f0fe293c68570f4": "RUN tar -xzvf helm-v2.7.2-linux-amd64.tar.gz", "b5076a9070d0800385bf944d942838eb": "RUN mv linux-amd64/helm /usr/bin/helm", "01df03fc4d00036a9575944139497473": "RUN helm plugin install https://github.com/nouney/helm-gcs", "aadd0cb9a955f80e3922776aa2ba4512": "RUN rm -rf /tmp/docker /tmp/docker.tgz linux-amd64", "c2accf200c92021a010b0a6906be6582": "RUN echo \"deb http://packages.cloud.google.com/apt cloud-sdk-$(lsb_release -c -s) main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list", "bb9ad1b416132d1c67553c424b91d7bc": "WORKDIR /go/src/github.com/toyo/epsp", "5523350946616ae58c64729c2ce049ae": "COPY /go/src/github.com/toyo/epsp/cmd/p2pquake/app ./", "9b18f29905224f031d10371be4f74438": "COPY /go/src/github.com/toyo/epsp/cmd/p2pquake/html/index.html ./html/", "c9cf236cd9d03077f8500f2f61fefa44": "ENV PORT=\"6980\"", "75acf816a107312897d89ab54416c0fd": "RUN if [ \"x$KASPERSKY_KEY\" != \"x\" ]; then echo \"===> Adding Kaspersky License Key...\"; mkdir -p /etc/kaspersky; echo -n \"$KASPERSKY_KEY\" | base64 -d > /etc/kaspersky/license.key ; fi", "a5857d0a63e325de106dc94b1b2ec9fd": "FROM golang:1.20.5-alpine AS build", "1d7425240defa1cdc35e453615f819c4": "RUN CGO_ENABLED=0 go build -ldflags \"-w -s -extldflags '-static' -X main.version=$(git describe --always --dirty --tags)\" ./cmd/shfmt", "ca38786fe924a28f9aca7e2656ab6284": "FROM alpine:3.18.2 AS alpine", "2df5e2484dbce20a434227b70a83b22d": "COPY /src/shfmt /bin/", "91084dcd9908cde800c8789d7e062d1e": "COPY \"./cmd/shfmt/docker-entrypoint.sh\" \"/init\"", "a276bdfed63eb5c29f9a4bb10aeabfa9": "ENTRYPOINT [\"/init\"]", "db212ad11c28a915308b30e99bb96c1c": "ENTRYPOINT [\"/bin/shfmt\"]", "8d6201135106ced77a52b36deea93e5e": "RUN npm i -g npm go get -tags \"v0.12.6\" -u -v github.com/gobuffalo/buffalo/buffalo", "c4f411c0717c5a770d2105ce2db2948b": "ADD golangci-strict.yml /etc", "92532bd666ab285e1dd5aad308150eda": "ADD golangci-soft.yml /etc", "03a8d7ad29d300ad27b663cdec07cb04": "ADD golangci-soon.yml /etc", "7df39fd700254f84f72baa6c07d35435": "FROM golang:1.13-alpine as go-builder", "f66599bf756c6d3055c4f4e196ede851": "WORKDIR /roxprox", "9622c0c223481dd0fe8b975526ee01a9": "COPY /roxprox/envoy-control-plane .", "dc7464c01912657a90e1a10b6b484ab3": "COPY . /build/", "acba1bebda79b0cc660561d69533ed42": "RUN CGO_ENABLED=0 GOOS=linux go build -o /app /build/cmd/main.go", "12df44ea595cfe4e5d935f63afa8c531": "EXPOSE 8484", "704cdd62404949ab317a0211259fcd6e": "FROM golang:1.11.4-alpine AS builder", "c7ee5d4e26ef657b45b37fb212c4bdfe": "COPY Gopkg.lock Gopkg.toml /go/src/stream-downloader/", "c442e4de0b198d49f5500ffedf8ea41c": "WORKDIR /go/src/stream-downloader/", "2740ff86607ca4c908c93a83d1278d56": "RUN go build -o /bin/gooid", "f295f2a8b580b2444c9823227767fc9a": "FROM scratch AS runner", "6e03585ad0f9d88ff6166e21724306f2": "COPY /bin/gooid /bin/", "61edf1a466e6331af090259d85d827db": "CMD [\"/bin/gooid\"]", "18264bb8db54af753dce3d23437c37bf": "FROM golang:alpine AS czds-build-env", "5d5354d85bdeb74d33c258db37dd3fad": "RUN apk add --no-cache make", "5802f7e9a8d48c8bbfcc98bfba0bdd50": "WORKDIR /go/app/", "3e9bf05b642250dbb1143157126c5ca8": "COPY /go/app/bin/* /usr/local/bin/", "567ec1ce939470019e9dc1f1b6c91051": "CMD [ \"czds-dl\" ]", "ee9dd8d25c1bc0e2877f6f01a8cb343e": "EXPOSE 443 80", "1f87a90aee8cc76682f7b063ef6893fa": "FROM golang:1.13.6-buster", "25a272c3fbedd63febfa09bb9894723e": "ENV PATH=\"/root/.local/bin:/root/bin:${PATH}\"", "1ced27db6d20a9c9b74277874bb75274": "RUN apt-get install -y xz-utils curl jq unzip make python3.7 python3-pip", "a0df57eb8c03dee11b0dec565c30e48a": "COPY . /ci-harness", "e2dae3d70707613763d5b8d3b8c9e6bb": "RUN cd /ci-harness", "59e63882e9e0acaddb98d706b3b962cc": "WORKDIR /ci-harness", "ca85d684c4801de22ac166afe60f1fe2": "ENTRYPOINT [\"make\"]", "05fbe5ecf3416b5eed947c7e759496bf": "FROM golang:1.10.0", "38890c7059b3d21e7f7d0c5446936152": "ENV NODE_VERSION=\"9.8.0\"", "285886bf7ec7f5c87097dcb0687bb8e3": "RUN for key in 9554F04D7259F04124DE6B476D5A82AC7E37093B 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D B9AE9905FFD7803F25714661B63B535A4C206CA9 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 56730D5401028683275BD23C23EFEFE93C4CFFFE ; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; gpg --keyserver pgp.mit.edu --recv-keys \"$key\" || gpg --keyserver keyserver.pgp.com --recv-keys \"$key\" ; done", "1f6dce11bc1885908d7e92a64ec61811": "RUN curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\"", "532e881d8027262a4f53dc7d65d8c240": "RUN curl -SLO \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"", "67052ed9f1596c17c9e381c8d636a7e0": "RUN grep \" node-v$NODE_VERSION-linux-x64.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -", "7cc13ad73aca86685ccad88c659e2293": "RUN tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1", "0d9dcc7342ad72794142f9a1ff15a6c2": "RUN rm \"node-v$NODE_VERSION-linux-x64.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt", "963b97cbaaa77d73da96a01b848ff128": "RUN go get -u golang.org/x/vgo", "feb10fa1f1a2749ca76aa774f3ab4e6b": "RUN npm install yarn -g", "b7f8f7b7aeeda688c10728fbaa375d96": "FROM golang:latest AS build", "18787283dffddd8888855f441d695cdc": "RUN http_proxy=http://10.76.6.181:8118 https_proxy=http://10.76.6.181:8118 go build ./...", "79981a2a20a520709505e1383a9115b4": "RUN apk add --no-cache ca-certificates libc6-compat", "1f94c290fe774e5eac44bb1d7a032343": "RUN update-ca-certificates 2>/dev/null || true", "faf0fc01e22fa4fb901845461a70adc4": "COPY /src/srvmon /app/", "4ff7d4fc58f6663393952979406c78e7": "ENTRYPOINT [\"/app/srvmon\"]", "c17b765d5ce8d39936fd9ab486092768": "LABEL maintainer=\"imlonghao <dockerfile@esd.cc>\"", "b01a64cd32ad69b08752b8c2a9e0e409": "WORKDIR /builder", "8798957152ee3acaecdb55cfad345f0f": "COPY . /builder", "46ae073605caf99c38fc51c1f8cb318b": "RUN apk add upx", "185e48d93b13b8fa339bbf1630df927b": "RUN GO111MODULE=on go build -mod=vendor -ldflags=\"-s -w\" -o /bilibili-live-recorder", "ef38833c85e983b72ba6005dbf94fca2": "RUN upx /bilibili-live-recorder", "ec50740b5ff1b3eb63e4060a664879b0": "COPY /bilibili-live-recorder .", "87ec4b39d2e6d0a4070dd0fe26956fd8": "CMD [\"/bilibili-live-recorder\"]", "fc3f2221c718945171f8d4aff9733409": "RUN go generate ./...", "a8222032ac35510ac49aff904642fb3d": "ENV PKGVER=\"1.2.0\"", "753ed775739c47bbaeeafb77afb0f891": "FROM golang:1.12-alpine3.9", "7c9ee9322f5da9ae96491b5832293362": "MAINTAINER fujiwaram", "78365ba1cfd69b6380a88dcfdc7d561f": "ENV APP=\"github.com/fujiwaram/gopher-translator\"", "d5d2de0eb22a0fce5b02332f9373a6b4": "ENV APP_ROOT=\"$GOPATH/src/$APP\"", "6d69c50e667936974b67256e77f4b7f3": "ADD . $APP_ROOT", "0dc1e1e0c91856ec97d5e919f8632238": "WORKDIR $APP_ROOT", "e2f3e0f0f96fa0352ca5a43bec238623": "RUN go install $APP", "4ea11fc9e9b045f96d70fd844f9c5582": "FROM golang:latest AS build-api", "9aa4d07a9a21408f879a25ac511ae56f": "RUN GOFLAGS=-mod=readonly GOPROXY=https://proxy.golang.org go mod download", "4cb493865d622b1f9042de3c75f3d7c1": "COPY config config/", "55cb6581c985e9f4c0b8d033c29b51c4": "COPY mailinglist_sync mailinglist_sync/", "ed0bfd03e1b03791f82c7fc1831153fd": "COPY survey_mailer survey_mailer/", "a0a1943eace868b47263624d6e63158e": "COPY model model/", "4abdb701da93936aaa9dde767805a942": "RUN CGO_ENABLED=0 go build -o adb", "72478c017127e2c1c94842c64d45d1a8": "FROM node:latest AS build-ui", "4e58943d9d0611de60c225d89bcd716e": "COPY package.json package-lock.json ./", "6eeda4b6ca95414760e873e518b1fb41": "RUN npm ci", "eea76f3a462e6794d5c2b57965cf7719": "COPY tsconfig.json webpack.config.js ./", "716ef26d834e13ef87222b2e4f41e26f": "COPY frontend frontend/", "9052651db0eb420555a75d05cbfe00d4": "RUN addgroup -S adb", "7df49d04cd2cd86c9e532baa4ea12bd1": "RUN adduser -S adb -G adb", "1b11f1a53ffa9fca317ad7dfd3e7bb61": "USER adb", "73e1588cb00f9d5730430529ca19d059": "RUN echo \"US/Pacific-New\" > /etc/timezone", "36656afe758d6922c9371e80eaadeee8": "RUN dpkg-reconfigure -f noninteractive tzdata", "29aba23cc90b0e017cc6b09b4159b362": "COPY run.sh ./", "1cc9cc8b9023b91175e9048718daac66": "COPY static static/", "70471b2cf8cbc4c5ae4a2a8ea05284d1": "COPY templates templates/", "463e06245f807fcd5326fee843ae1c89": "COPY /src/adb ./", "9aa8ee8e35921c2122a7e88e6d6bf437": "COPY /src/dist dist/", "2c89f99b10cf9c57c5e1dd573b5084f0": "ENTRYPOINT [\"./run.sh\"]", "4dde7b4b3ac5fe7427b333e266826548": "RUN git clone https://github.com/junkurihara/dnscrypt-proxy.git /go/src/github.com/jedisct1/", "b2e2aab390e4cb692edd34342c975179": "RUN git clone https://github.com/junkurihara/dnscrypt-proxy-blacklist.git /domains-blacklist", "c281055ab8af47ccf103ff157594b406": "COPY /go/src/github.com/jedisct1/utils/generate-domains-blacklists/generate-domains-blacklist.py /domains-blacklist/", "0fba781c748fa2988b9fd90d249725b9": "FROM golang:1.13.7-alpine3.11", "37bae2cd1aeb056728e8700b804268f9": "WORKDIR /go/src/github.com/h3poteto/fluentd-sidecar-injector", "8859e464b0067ddacbe6bd75c6d5183f": "RUN go build -o fluentd-sidecar-injector", "adb87f4bd74d445d9dd9fa19073e788e": "CMD [\"./fluentd-sidecar-injector\"]", "63aea2877345ab6883cf37ad071e7c2c": "ENTRYPOINT ['./labform', '-c' , 'config.yaml']", "92c0efcfad04610ff72c6c4e8401cfab": "RUN apk --no-cache add build-base git bzr mercurial gcc bash", "e7280d3dc45c461e0de5571656cabb4d": "RUN go get github.com/photosojourn/go-microservice", "241a18e4b0c0b0953e01ee889fdff874": "WORKDIR /go/src/github.com/photosojourn/go-microservice", "4e3ef0cc4dd795f806165da42ee0b6f0": "RUN go build -o /bin/go-microservice", "ea0849d7f43edeb4d49471707ff34861": "COPY /bin/go-microservice /bin/", "17a9ba159b0201010b5b82fcf5e21e52": "ENTRYPOINT [\"/bin/go-microservice\"]", "6aee91034b1ac3891a5ab0dbff60be49": "LABEL maintainer=\"MinIO Inc <dev@min.io>\"", "a6f3db3bca451e3138b7d710ae189c8d": "RUN go install -v -ldflags \"-s -w\" github.com/minio/kes/cmd/kes", "d9b9868aa1fb3c4fa952ca54cd898617": "EXPOSE 7373", "84977ffc5ce57b52855f55025f82514e": "COPY /go/bin/kes /usr/bin/", "e24c4d013b8a363ce6080cb1659945ee": "ENTRYPOINT [\"kes\"]", "dce90afa52ade18b7c8981861efc5fce": "ENV PATH=\"/go/bin:/usr/local/go/bin:$PATH\"", "5f171034a698303ed3ec97cc906a5517": "COPY . /go/src/github.com/erroneousboat/slack-term", "4c54bc889c0656312184dd3d79bbdada": "RUN apk add --no-cache --virtual .build-deps git gcc libc-dev libgcc make", "84bb9f5fc15d3524713336a38f807257": "RUN cd /go/src/github.com/erroneousboat/slack-term", "5eb1adf5d07bbcdd5444f06e33ca2816": "RUN mv ./bin/slack-term /usr/bin/slack-term", "a54440d712231d2821560c879adbf99d": "RUN rm -rf /go", "435fec01e34c6dffc5040f508f9a64eb": "ENV USER=\"root\"", "f359cf39150c2a90d3d257d80780d671": "COPY /usr/bin/slack-term /usr/bin/", "d96db48c53317c86bbf4889b755606ac": "COPY /etc/ssl/certs/ /etc/ssl/certs", "85c1e67fd70260219f88304a07fd2335": "ENTRYPOINT stty cols 25 && slack-term -config ~/.config/slack-term/config", "0ca6046a45b0b134e2ff6a3c20455445": "WORKDIR $GOPATH/src/github.com/zhanghudong/drone-test", "79fa4352f3a35224fe97c535b42c3cf5": "COPY . $GOPATH/src/github.com/zhanghudong/drone-test", "276c8cf46176391c0cb0431ec6a2bf3a": "RUN apk add --no-cache git mercurial", "9c506fbe859c0de641322c43e2f2251b": "ADD . /go/src/github.com/banzaicloud/drone-plugin-pipeline-client", "6df06d511a39d51a58ec3219d5c88543": "WORKDIR /go/src/github.com/banzaicloud/drone-plugin-pipeline-client", "252a618a2085797aaf4e98aa7e2d1181": "RUN go build -o /bin/pipeline-client .", "fdb0f7c4299d1d44ef4bf4d4d807f9aa": "COPY /bin/pipeline-client /bin", "3bf7dcdd0384a967436658a9cebec5dc": "ENTRYPOINT [\"/bin/pipeline-client\"]", "ec1f0e4c9395743ede6466c0c91bb37b": "FROM golang:1.13.4 AS build", "92a145af5d803ca0e986b12a50481177": "RUN make prepare", "2b38a2737c92dac0772061b52e64a88c": "RUN apk add curl bind-tools python", "b1e2f5047661f93170bac3b4e08f8ddc": "RUN curl -s https://pagekite.net/pk/ |sh", "c43fe441cb5709e90f834f876b0023a5": "COPY /src/dist/pk-ingress-controller /", "fb5c6ac8a47cc2e2731363d3b4928714": "COPY /src/src/template/pagekite.rc.tmpl /src/template/", "1f23f08dce40c43233987a9198a4a235": "CMD ovirt_exporter -api.url=$API_URL -api.username=$API_USER -api.password=$API_PASS -api.insecure-cert=$API_INSECURE -with-snapshots=$WITH_SNAPSHOTS -with-network=$WITH_NETWORK", "62cbda0a2b93c369efd5efd58dca6ca6": "RUN apk --no-cache add dumb-init", "8933165774124a6ffd24952d3b231d86": "FROM golang:alpine3.10", "0fc705543abcdd4d2763d13e029ed39a": "LABEL maintainer=\"Milan Das <milan.das77@gmail.com>\"", "5d442aaf83c18482d04d591942acad0d": "ENV KUBE_LATEST_VERSION=\"v1.15.1\"", "dac45569dfb25c12bd43d191252af43c": "ENV APP_HOME=\"/opt/kubeconfig-app\"", "bece124bd22b1532738e5bf8b049f855": "WORKDIR $APP_HOME", "94d87c1de9d22968c0a6b005522fa252": "RUN apk add --update -t deps curl", "562a2b0ee577fdc50f185b4de6b1ba45": "RUN apk add --no-cache jq", "192565ceab193ea77fc0844d2d02bbcb": "RUN apk add --no-cache util-linux", "2275172f29976bd74ac72d478d2dadc0": "RUN curl -L https://storage.googleapis.com/kubernetes-release/release/${KUBE_LATEST_VERSION}/bin/linux/amd64/kubectl -o /opt/kubeconfig-app/kubectl", "e76cf632ee24c41c491ccf56a694ef3c": "RUN chmod +x /opt/kubeconfig-app/kubectl", "54d85caf89a2e7d48e2c7a4dc6fd5f49": "ADD . /go/src/github.com/banzaicloud/anchore-image-validator", "3abe6405cfeb2300a694f9a0028f2ed0": "WORKDIR /go/src/github.com/banzaicloud/anchore-image-validator", "1e8cbb7ef06e3f139fdbdf3931497c60": "RUN apk add ca-certificates make git curl mercurial", "67c5e53c7bb45e8c5abae9464a315d5b": "RUN go build -o /tmp/anchore-image-validator ./cmd", "9bcfd6de68bf22e42c5b20091353ee3c": "COPY /tmp/anchore-image-validator /usr/local/bin/", "c373343b0bfb0f744279b92304486026": "RUN adduser -D anchore-image-validator", "b1862371f58eab7e5264abea09a01c01": "USER anchore-image-validator", "bd63a9486f18d9b96cb0f0e9e9b3890b": "ENTRYPOINT [\"/usr/local/bin/anchore-image-validator\"]", "885b588bf0e0935f4f0dd1ef4c3f271e": "FROM golang:1.13.5-alpine", "3b799f80678ae97d65a7da2d1e5947b9": "ENV GOPROXY=\"https://goproxy.io,direct\"", "50201b898e18417056ff688fc229d77c": "FROM golang:1.9.5-alpine3.7", "51e8e4599b900818dceed9538f0cad88": "LABEL maintainer=\"Siddhartha Basu <siddhartha-basu@northwestern.edu>\"", "27a1488488e8dc7d5e92d33634fa7d62": "RUN apk add --no-cache git build-base", "f4bccbe9f35cac34e994397222a3a1c7": "RUN mkdir -p /go/src/github.com/arangomanager", "cda2e07ed32f9f8781c9a107ae983a85": "WORKDIR /go/src/github.com/arangomanager", "c246a803a695ffac082f9b12024faa5a": "COPY Gopkg.* ./", "5e846f6f9b5f9ad7b8b4acf300f8dc6a": "RUN go build -o app", "d9b1bf9170853c29bbbcb9047ad3749f": "COPY /go/src/github.com/arangomanager/app /usr/local/bin/", "4fb8c76046f4f5ef584f754a66024214": "ENTRYPOINT [\"/usr/local/bin/app\"]", "f277449a9190b413af5def6713e13c0e": "COPY /src /public ./", "0aceec0a29af196e03027d07f97bfa19": "RUN cp -r /build/dcfeeder /build/public .", "3b5f82135e6e81be9f4a85276fedb7f6": "COPY /dist/dcfeeder /dist/public /", "e270c55f7dfc278b436977d3b371d684": "RUN go build -tags gcc7 -o /bin/temporal-lens -ldflags \"-X main.Version=$LENSVERSION -X main.Edition=$(EDITION)\" ./cmd/temporal-lens", "c3b0f90c5ab71a916b2d63a9dbfe6701": "CMD [ \"server\" ]", "1545d50a0d47ea670c95f455fd111475": "RUN CGO_ENABLED=0 go build -o /go/src/akamai-ip-range/akamai2aws /go/src/akamai-ip-range/app.go", "d3157e69f5e3253e09b16048116fd386": "RUN apk add bash --no-cache", "b8d45a6b123cfdf174b59c3e1c61d80a": "CMD [\"/app/init.sh\"]", "65c660cea9b3a405b8f7eb84291f189b": "LABEL maintainer=\"Enrique Berrueta <eabz@polispay.org>\"", "1c897eb93fc8b51035be76b33786dd70": "WORKDIR $GOPATH/src/image-server", "960232fbfab2c3cccf8232d4a00315bb": "ADD . $GOPATH/src/image-server", "f2358beb7617f0ddd9dc008afa8fc634": "RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories", "66a5bc856bd38602cc0d27d7c073cc51": "RUN apk upgrade; apk --no-cache add pkgconf gcc g++ imagemagick-dev graphicsmagick-dev; export CGO_CFLAGS=\"$(pkg-config --cflags MagickWand)\"", "20f0d6eef5de88ffe19abc9997f1dd04": "RUN export CGO_LDFLAGS=\"$(pkg-config --libs MagickWand)\"; cd $GOPATH/src/image-server", "d1b636155421e59bac016c41d41fa092": "RUN go install; mv $GOPATH/bin/image-server /opt/app", "58d8c0b01913c862825d6b2687d52f84": "MAINTAINER buzzxu <downloadxu@163.com>", "424693996e1f25cf4bbc498c71987a5d": "COPY /opt/app /", "ed3494e9cfab6c879b4a7788c1dbf68c": "RUN apk add --no-cache -U pkgconf zlib libpng libjpeg-turbo libwebp giflib tzdata xz-dev imagemagick", "775c4f3c71f7e3a4cbe6f9656cef921f": "RUN chmod a+x app", "53bf23fd994e6b689b929079510650a3": "RUN mkdir -p /data/images", "ade5643e1cc07ce89535e761c27f2027": "ADD docker/conf.yml /app/", "3310aee6300c323e6b473f37d41e889f": "ADD docker/run.sh /app/", "bfab54ce9c2c781c10f196a6581f261a": "ADD docker/default.png /data/images", "d548698f82530fa554ab7a0dd39a7136": "ENTRYPOINT [\"/bin/sh\",\"run.sh\"]", "ee6bc066681c26fe715df53117787d7f": "ENV NODE_VERSION=\"11.5.0\"", "d2f0af9c1b53f3b63e6836d482c287e8": "RUN for key in 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 B9AE9905FFD7803F25714661B63B535A4C206CA9 77984A986EBC2AA786BC0F66B01FBB92821C587A 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 4ED778F539E3634C779C87C6D7062848A1AB005C A48C2BEE680E841632CD4E44F07496B3EB3C1762 ; do gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; done", "01999ac4bc62e4d4290c091e2f70aaf1": "RUN npm install yarn prettier npm -g", "104672a62400fbac2e57208eb0a57b12": "RUN CGO_ENABLED=0 GOOS=linux go build -ldflags=\"-w -s\" -o whisperer main.go", "2e31fa164ba77dd910ffb771e79b8aa4": "RUN adduser -D -g '' daniel", "669da5c26c3f17bd6a4112347f416536": "COPY /app/whisperer /app/", "c610927fe7fae5b17924cfb69d1353b7": "COPY /app/urls.txt /app/", "942abb8ba6b9803cacd193ef6f2495e5": "ENTRYPOINT [\"./whisperer\"]", "c07e4cb981321778c57d993722d760cd": "CMD [\"-v\", \"-d\", \"3s\"]", "dc5fcf9f8ee1a232701400c0b83b5f3b": "FROM golang:1.14-rc", "bc023155cb1e614f21f84e9b04bb5a28": "COPY server/go/src/main /go/src/", "f56bd6949f51bedb1c590d1fef1692b0": "RUN go install main", "14e8bf1562d279185712f53781afb61f": "COPY /go/bin/main .", "7d1e0cd29cf894af78b901abec975afb": "COPY img /public/", "54608218908d26e217a4103ed9db88c3": "COPY docs /public/", "46ff2e769e3f947d745f3bc0243d1b7f": "COPY js /public/", "f7e64e7a4dfcc1dffd4f77beffd44db2": "COPY css /public/", "18bd1f2afbf99f221e878182d99e8ff5": "COPY index.html /public/", "a7f87e64fe3f208050c55cde7ad87a83": "FROM golang:1.9.2-alpine", "95fc7fb7988447eec856f98b01a7aea9": "RUN go build -v main.go", "64202d774419ac7ce4a458217d1a8bc6": "ENTRYPOINT /usr/src/app/main", "1a2c67e07df4b802625e14b269533789": "RUN apk add --no-cache bash make git nodejs npm", "b9065c2867268ea93a535d53b6951e6a": "WORKDIR /go/src/github.com/waltzofpearls/rollie.dev", "f1181494746ae9f35ea13743515468be": "CMD [\"./rollie.dev\"]", "cd6021f23ecc9016900167eb774be7af": "EXPOSE 3002", "c59f8f13802f25bec5095488383448c5": "ARG GO_VERSION=1.13", "dc56c0123e835da69ce47ee80dd2947b": "FROM golang:${GO_VERSION}-alpine AS builder", "07e6e5f56bb11a902830daba27400dab": "COPY ./go.mod ./go.sum ./", "e9317e04320f7f25d185795a87f1b490": "RUN CGO_ENABLED=0 go build -o /app .", "b184771e50e6a87ebaf8c7a2f3d7a50d": "FROM alpine AS final", "cdf0724a71cff8571852c660bc4fef6d": "RUN mkdir -p /tpl", "710b5c0f91e366a3551cfa1219d8e0ee": "COPY ./filebeat-input-log.tpl /tpl/", "99052f9cb2b80e84b60af41b7a8a12a7": "FROM golang:alpine AS binbuilder", "f4cc9a9717f8738b8d570ed271c71875": "RUN apk add --no-cache git openssh ca-certificates curl musl-dev openssh", "a0bb522e0a76c26aa8536e21e53993f0": "RUN mkdir /git-annex", "9481bf5559e8fa78f177dd7c902f494e": "RUN curl -Lo /git-annex/git-annex-standalone-amd64.tar.gz https://downloads.kitenet.net/git-annex/linux/current/git-annex-standalone-amd64.tar.gz", "2b9bb916deed0700991ceccc37e71872": "RUN cd /git-annex", "e5edf45020a29b9e38a5f3f2380aebb7": "COPY ./go.mod ./go.sum /gindoid/", "fa86b854a1b21a3588cebcbfb3de6ec7": "COPY ./vendor /gindoid/vendor/", "cc2d1389ce2cbaf658d01bafccf381c6": "COPY ./cmd /gindoid/cmd/", "c550fd7024199f59421c83e400d82a6d": "RUN go build ./cmd/gindoid", "983182d0980c6663afb0711708b37811": "RUN apk add --no-cache git openssh ca-certificates", "27e25b690f7fa136d58159f1ef0c65d6": "COPY /git-annex /", "b1376f2aa2f6898cac8b72ce394c7b03": "ENV PATH=\"${PATH}:/git-annex/git-annex.linux\"", "e8a8e8e04eda1c276608b99f29e19bba": "COPY ./assets /", "c7cfffecd2412fc1fbcf574d20fcebc3": "COPY /gindoid/gindoid /", "f6b75eab1245ed0ee4abe709b15dc1c7": "VOLUME [\"/config\"]", "15add36adbdfbb32dc517835ec8d58f3": "ENTRYPOINT /gindoid", "dbe2803004b14217fb06f370ac27f5fe": "FROM golang:1.12 AS BUILDER", "b7421837767a7815ec3c051c2f13436f": "ADD . /project/Astral", "cd4c713786c3a58aff2b354c4fdce42f": "RUN export GO11MODULE=\"on\"", "6e914cee4170b5780fcab11bced573d5": "RUN cd /project/Astral", "940a8f41ffa8676652e12b1ee3ccb982": "FROM alpine:lastest", "dce7898c1bc4065f8846750aaa30242e": "WORKDIR /Astral", "a89ee6bead340b0a2afaa890814284fc": "COPY /project/Astral/Astral .", "726ae54fa28baabec2a0966c6198916a": "FROM golang:1.13.5", "85a8c4332be3f6941728232e021f4dd2": "RUN apt-get install -y --no-install-recommends g++ wget gcc libc6-dev libpcre++-dev libsasl2-dev make pkg-config xz-utils tree libssl-dev libzstd-dev software-properties-common apt-transport-https netcat git rpm multiarch-support", "d3e31e758a5648c09f6902f1744f333e": "ENV LIBRDKAFKA_VERSION=\"1.3.0\"", "5aad1778e54b8b4fd78fda16964162ef": "RUN wget https://github.com/edenhill/librdkafka/archive/v$LIBRDKAFKA_VERSION.tar.gz", "9e699f09da6d45aee86d8f0837a3a2e1": "RUN tar -xvf v$LIBRDKAFKA_VERSION.tar.gz", "c92c9ed650f7cc1a91af530f4b144062": "RUN cd librdkafka-$LIBRDKAFKA_VERSION", "779de621aa84214b3a34426672353133": "RUN ./configure --install-deps", "92737e048abcc3166d5ae0469dc1e6d9": "ENV NODE_VERSION=\"13.3.0\"", "a25849979828ef378e0086e1c1c3963b": "ENV NFPM_VERSION=\"1.1.6\"", "d50db8d74acac44719291bd6b9e8cef5": "RUN curl -fsSLO --compressed \"https://github.com/goreleaser/nfpm/releases/download/v1.1.6/nfpm_1.1.6_Linux_x86_64.tar.gz\"", "faddf2d1686ab8c64fbeb33ffb13be41": "RUN tar -xzvf \"nfpm_1.1.6_Linux_x86_64.tar.gz\" -C /usr/local/bin --no-same-owner", "75cc6bc133d125295a7829535e7a99c2": "RUN go get -u github.com/gobuffalo/packr/v2/packr2", "2a417c4669f0dfa30401795f42f08ef4": "RUN go get -u github.com/swaggo/swag/cmd/swag", "841c79df1a9cd9ad1f1dd7d65c751d1a": "RUN curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $(go env GOPATH)/bin v1.20.0", "3beb28b33e30f9ac8e8e6f2ba5c9d728": "RUN curl -sfL https://raw.githubusercontent.com/securego/gosec/master/install.sh | sh -s -- -b $GOPATH/bin v2.1.0", "e1adb0ddba6af4a2c04f52700d3b951c": "ARG PROTOC_VERSION=3.5.1", "fd1ff88002e831f162949afbf529e16c": "RUN apk add py-pip musl libc6-compat linux-headers build-base python-dev", "0a04b8d8015cdfd04af8114e90a1e38b": "RUN python -m pip install grpcio-tools", "b26a061659785a87c8e67ed42516d361": "RUN apk del libc6-compat", "eaad111a73da9a222323aa63b812a3e0": "RUN apk add --no-cache su-exec curl bash git openssh mercurial make ca-certificates expect docker", "85a53f66d6bf1200c3464134467509c3": "RUN curl -sSL https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub > /etc/apk/keys/sgerrand.rsa.pub", "a22dfe21dbb3ff7dfd9d36d62706dd23": "RUN go get golang.org/x/lint/golint", "131711beb1cfb23159c0d94e1b35ed76": "RUN cd $GOPATH/src/github.com/tmrts/boilr", "a8ba12fd86fccbffad4c68bddeabad71": "RUN git remote add fork https://github.com/smousa/boilr.git", "fd8e5a3a6355c4beab5d82d84be05432": "RUN git fetch fork format-camel", "334a1c5db7c97d60edc344987f2ba983": "RUN git checkout format-camel", "9e318b9b9b3e4ac05e5209850f0de2d0": "RUN mkdir /tmp/protoc", "c4026ccc23cbc4d129fba0073b69e97a": "RUN curl -sSL https://github.com/google/protobuf/releases/download/v${PROTOC_VERSION}/protoc-${PROTOC_VERSION}-linux-x86_64.zip > /tmp/protoc/protoc.zip", "3af109b77e5ce448dcd971e09917c152": "RUN unzip -qo /tmp/protoc/protoc.zip -d /tmp/protoc", "ca05683128b28292f84e5e482181ed12": "RUN cp /tmp/protoc/bin/protoc /usr/bin", "e440b8b6803bb42d83227bfcdb1ce71a": "RUN mkdir -p /usr/include", "f1bc645667aab901dba09fc982c1c725": "RUN cp -R /tmp/protoc/include/google /usr/include/.", "093fd5bd571ae523f97099ed9792002e": "RUN chmod a+x /usr/bin/protoc", "b69462485d37b70d3e1b4ac92945469b": "RUN chmod -R 777 /usr/include/google", "88e9471fe7ed3a2dc465ed483fb0e663": "RUN rm -rf /tmp/protoc", "4153ef1786fd00d8d26a1725ca59b19e": "RUN git clone https://github.com/googleapis/googleapis", "0860dbe0e1fcff3d8da38042ac94c798": "RUN go get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway", "990648cc34be24c535f667116f4af00e": "RUN apk add grpc-java --no-cache --repository http://dl-3.alpinelinux.org/alpine/edge/testing/", "fa7970f60748e355a13763430d6ff335": "RUN apk add --no-cache nodejs nodejs-npm", "045327cac915861b84b4216f9fdb49fb": "RUN go get github.com/vektra/mockery/.../", "3ad2a23308c4adabbe0b23087853f94e": "RUN echo 'Host *' >> /etc/ssh/ssh_config", "657b289804be9cb9e721282234ef994e": "RUN echo ' StrictHostKeyChecking no' >> /etc/ssh/ssh_config", "6aa8340548064494c34249ce3767ba2f": "COPY create-zenkit-local.sh /usr/local/bin/", "065214cb3712ea34a5d7f63f235df43c": "ONBUILD ARG GITHUB_USERNAME", "e0e6d8376aa67d66a5c5f59927305714": "ONBUILD ARG GITHUB_PASSWORD", "c397c58936dbc473b308b6dd2ff217e7": "ONBUILD RUN if [ -n \"${GITHUB_USERNAME}\" ]; then printf 'https://%s:%s@github.com' \"${GITHUB_USERNAME}\" \"${GITHUB_PASSWORD}\" > /etc/.git_creds; git config --global credential.helper 'store --file /etc/.git_creds'; git config --global url.'https://github.com'.insteadOf 'ssh://git@github.com'; fi", "679b99edded54937bc1c988e52d1bcea": "ONBUILD ARG SSH_PRIVATE_KEY", "ae42af59d94b09fef1cdeb77dd932f2f": "ONBUILD RUN if [ -n \"${SSH_PRIVATE_KEY}\" ]; then mkdir /root/.ssh; echo \"${SSH_PRIVATE_KEY}\" > /root/.ssh/id_rsa; chmod 600 /root/.ssh/id_rsa; touch /root/.ssh/known_hosts; ssh-keyscan github.com >> /root/.ssh/known_hosts; fi", "135318a3d4881bbe6416d2eab5a9fa0b": "RUN mkdir store", "3db5907028669816d87f8d284d3cc0f4": "RUN echo http://dl-2.alpinelinux.org/alpine/edge/community/ >> /etc/apk/repositories", "efde2d23b931a6b6f3e63eba2e24de5d": "RUN apk --no-cache --no-progress add bash curl git openssh", "7e6e672dde2b4d5de65d567d098b323e": "COPY ./go.mod ./go.sum /gin-valid/", "a310adb5d8eb0df5e06fc685ff5e134c": "WORKDIR /gin-valid", "a9e97dbc26814049e1e602ae47134d86": "COPY ./cmd /gin-valid/cmd/", "daeccff5d10935e167e2de973f3ce367": "COPY ./internal /gin-valid/internal/", "55c3adbd917ec547ac01c89b09ca06e9": "RUN go build ./cmd/ginvalid", "3fed0580783ac0fed12e1f902b0d65b2": "RUN apk --no-cache --no-progress add bash git nodejs npm openssh", "bb9a699ad43afadc83d26b93d2198611": "RUN npm install -g bids-validator", "e17e9ac4b765736ea9eccf528812bf3c": "RUN mkdir -p /gin-valid/results/", "35989b97a5050fded1b1d9c2a5dc8b07": "RUN mkdir -p /gin-valid/tmp/", "d8ce99ef99717f303d7269b94917f9b4": "RUN mkdir -p /gin-valid/config", "fb4b72fc1bc5243d6ecfa56548b52957": "RUN mkdir -p /gin-valid/tokens/by-sessionid", "d0f8bdc097b056af740bee2ac1d51acd": "RUN mkdir -p /gin-valid/tokens/by-repo", "dbbe58f42d83bd73795d84c6bbc18a7d": "VOLUME [\"/gin-valid/\"]", "5fed11d1753f8e5e7de2dcb835c5c3a0": "ENV GINVALIDHOME=\"/gin-valid/\"", "f215fb30da0118a024259d38c7570640": "ENV GIN_CONFIG_DIR=\"/gin-valid/config/client\"", "7de92ecfc38d746312d69a46e87d075f": "COPY /gin-valid/ginvalid /", "0081cc272bda6b468f6b7050e2ba7f0a": "ENTRYPOINT ./ginvalid --config=/gin-valid/config/cfg.json", "753b934aba012f7105a1e189300377f6": "EXPOSE 3033", "f748feea644f1956a677226139dd36c8": "FROM golang:1.10-alpine as builder", "764b8b0241515f4e7fad0bc888916310": "ARG DOCK_PKG_DIR=/go/src/github.com/nexus49/headers", "f3f9c280f63cff0b77eef942d7121e30": "RUN apk --no-cache --update add git", "ea70e55c96c9d144bf11e46d6aa09bf1": "RUN mkdir -p $DOCK_PKG_DIR", "266290f60e4310b5b2c1b6c08872ddbd": "RUN mkdir -p bin", "71191f0c1925f73d0da9f464d1f7f1bf": "COPY ./ $DOCK_PKG_DIR", "f2f5522b1300548018b8ad8d00c059cf": "WORKDIR $DOCK_PKG_DIR", "c010e1ed3722c115f5e4a27e11db7df4": "RUN gometalinter --vendor --deadline=2m --disable-all --enable=vet ./...", "fa1e14ca3b1d627740a4f82a173aa614": "RUN go test --cover ./...", "0c24cc62cc2f07f074f15fa7a5ed8b6f": "RUN go build -o ./main ./cmd", "7e7b3586af44abce453bd34850deecb5": "COPY /go/src/github.com/nexus49/headers .", "468f6bacbd4799344027ea4dea1a0cd3": "RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -", "cd46c299080aae976702489257d3b062": "RUN echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list", "a3997cac26d998565273371aaac7b794": "RUN apt-get install -y --no-install-recommends cron google-chrome-stable unzip", "4eeb9c51c58bb832d0dfcc35da0f64bb": "RUN rm /etc/apt/sources.list.d/google-chrome.list", "3b882a769f596f74dc02c0369666a88a": "RUN rm -rf /var/lib/apt/lists/* /var/cache/apt/*", "f8987300a2346e44645408549c1e82bc": "RUN CD_VERSION=$(wget -qO- https://chromedriver.storage.googleapis.com/LATEST_RELEASE)", "38715cfe36b059fb152288d3b79189c0": "RUN wget -O /tmp/cd.zip https://chromedriver.storage.googleapis.com/$CD_VERSION/chromedriver_linux64.zip", "59d9af707b24a76683eab83d1f82f791": "RUN unzip /tmp/cd.zip -d /usr/local/bin/", "217c006630ae43ce488f97001061db0b": "RUN rm /tmp/cd.zip", "83f37dabcd17b758215ebd3687e01b07": "RUN wget https://noto-website-2.storage.googleapis.com/pkgs/NotoSansCJKjp-hinted.zip", "bee1b34310667255dfce99fc2cfd0a12": "RUN mkdir /usr/share/fonts/noto", "d56e9f0432d18120c8abae2b5bdfcfbf": "RUN unzip NotoSansCJKjp-hinted.zip NotoSansCJKjp-Regular.otf NotoSansCJKjp-Bold.otf -d /usr/share/fonts/noto/", "7d90a5b88d365ce026ed29c07a281cfa": "RUN mv etc/crontab /etc/crontab", "1eb651a4e2616ddfe52f252d2f2b813b": "CMD [\"cron\", \"-f\"]", "611e6d43f41ffa220af47335590a9f2a": "FROM golang:1.11.4-alpine3.8 as builder", "01d273bc57b4af5908f0f6214bdd60ea": "RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go install -a -installsuffix cgo -ldflags=\"-w -s\" spinnaker.io/demo/k8s-demo", "710ac824d8174fe43b8e1d66021c1f3b": "COPY /go/bin/k8s-demo /go/bin/", "df4e869e0902cabd5989d5950e2bf231": "COPY /go/bin/content/", "38ed134e1a91b3c6e1ee1a2446f6e91b": "CMD [\"/go/bin/k8s-demo\"]", "9307db1c6c046bdff6001d7519f08983": "LABEL maintainer=\"gzp@goozp.com\"", "9019603c4c81e700f313e08fe437d9d6": "WORKDIR /go/src/puti", "f318a6249e7025f18309d78291548b19": "CMD [\"puti\"]", "915b36c4b46bc12cf101db13aa833839": "FROM golang:1.13-alpine3.10 as build", "d99b99fcdaabe41af274466f5c85135d": "RUN mkdir -p /ariang/bin", "2e8d47f681c479139eba30c09b0d9bad": "COPY /work/bin/goreman /ariang/bin/", "af89e59a7bf2927b7989cf679de32adc": "RUN echo \"backend: su-exec dummy:dummy /usr/bin/aria2c --enable-rpc --rpc-listen-all --rpc-allow-origin-all --rpc-listen-port=${RPC_PORT} --dir=/data\" >> Procfile", "bad8d52f92fa925112ad99c039756873": "ENTRYPOINT [\"/ariang/bin/goreman\"]", "38c23e72049ab9bbe8841876502254a8": "FROM golang:1.11.0-alpine3.8 as builder", "a9bd9ee7733db4c6e4f9fdd44ff3fd1f": "ARG REAGLE_LOCAL_LOCATION=\"\"", "ffa378692eb4ad1ec441e23cf7225769": "ARG REAGLE_LOCAL_USER=\"\"", "068c0a16dacc7f6c3779bd9299115773": "ARG REAGLE_LOCAL_PASSWORD=\"\"", "867c9176d7ddc172328d161ff45d080b": "ARG TEST_FLAG=\"\"", "7dd517ce4911f1ec2bf9029f516fb780": "ARG PROJECT_PATH=github.com/kklipsch/reagle", "215055dfd70c57ed1fda014fad8d0c26": "ARG GO111MODULE=off", "a45dfd2bc5b83da0a34d8c36c8cdd576": "WORKDIR /go/src/$PROJECT_PATH", "4f363e5f324038b2d3d4443ba4c568d1": "RUN go vet $PROJECT_PATH/local", "ebc53b7bd95999e4905290cd37d3d8b7": "RUN go vet $PROJECT_PATH/cmd/reagled", "8679774e1b77f472f9cccc219a5fa52e": "RUN go test $TEST_FLAG -v ./...", "bdba8f66c9f82d2a4bc3757fe68c8597": "RUN mkdir -p /out", "6c9a0333bab54b87af9510f1de911f7f": "RUN go build -o /out/reagled $PROJECT_PATH/cmd/reagled", "079c806df5e3a9be7cd68ff4d2f65996": "ENV REAGLE_LOCAL_LOCATION=\"localhost\"", "778234767d4d2fad69161542f5a4c61a": "ENV REAGLE_LOCAL_USER=\"fake\"", "480e956e10ef7ccc5f6bbbc0ecd6698c": "ENV REAGLE_LOCAL_PASSWORD=\"fail\"", "84cd2aa937c63ed13ccc6b6dd0680c55": "ENV REAGLED_ADDRESS=\":9000\"", "ed76686a45b34f927ccdcd3e41230edc": "COPY /out/reagled /usr/local/bin/", "aa9acd872d54b044d286cfede4790e85": "ENTRYPOINT [\"reagled\"]", "f89cfdbf86ab2940ac7324e9e3ec10c4": "FROM golang:1.12-alpine as build", "c7f124bd0b0f370767ec57f962849fd3": "ADD ./", "ad1f17ce44538cda07cb88aaef2b07d1": "FROM alpine as runtime", "39a10e9c5de67fc7cbf246be1887f37c": "COPY /app/ssm-parent /usr/bin", "89860811f3c302ea9f250bf42e6fc82b": "ENTRYPOINT [\"/usr/bin/ssm-parent\"]", "9190fc525ed6239c59884efb047dc648": "FROM golang:1.12.6-stretch", "9d610c67fd78264afecce9731c9f45ab": "RUN apt install inkscape imagemagick git -y", "274f6afc07435373235cc9010492a457": "RUN go build -o giflichess", "b0b8f7f15921cf2e09e8ce9059aef5a0": "ENTRYPOINT [\"./giflichess\"]", "d0e1b176082e8b1794adbc50d2ef874b": "LABEL maintainer=\"@securitychops\"", "d08eefd80a8d5b77588e33a3ca134fae": "RUN addgroup -S bender", "6a33fdb70ce7093f8fc96bbbe58983c9": "RUN adduser -S bender -G bender", "635d24de4732c4fef0a8793a23f56273": "COPY .start.sh /home/bender", "eb4257e69d77713c38c534e6813c6777": "RUN chmod +x /home/bender/.start.sh", "5e0d5b5152242a1c3e7f2a7ab62d2d8c": "RUN apk add --update git python py-pip", "b6d6ff55426845f127fc0af7300f8edf": "RUN go get github.com/subfinder/subfinder", "f4ceb9a3d005cb6856d708ee8d5ec7b5": "USER bender", "c5668a2c5bcd880e3654480ae5464194": "WORKDIR /home/bender", "5ea1dccc11f8edef52c985b700bd52b0": "CMD [\"sh\", \".start.sh\"]", "bc3742d3782c2bcd114053637d5ab238": "ARG GOARCH=\"amd64\"", "9bc9eb434f4add165a29b01b361ba387": "RUN GOOS=linux GOARCH=$GOARCH CGO_ENABLED=0 go build -ldflags '-s -w' -a -installsuffix cgo -o /plathome plathome.go", "f785f0dbc89b67680b07f25b030fd439": "ENV DBHOST=\"postgres\"", "648d03adaea35f6239fcdeb217cff713": "CMD ./plathome --port=8080 --host=${HOST}", "633fa560475a334f8800833ab024f2c9": "ENV HUGO_VERSION=\"0.55.1\"", "12550aa737ab7a122c9b7b4596f21ece": "LABEL org.label-schema.vcs-ref=$VCS_REF org.label-schema.vcs-url=\"https://github.com/t-richards/docker-hugo\"", "73e917bd995214958156d8b926d759ba": "FROM golang:1.12-alpine3.10", "bfaa43bc63f3da486efc330ebcfc178b": "RUN addgroup -S mintel", "f0373cffd61dc6b79953188d5a3ed68d": "RUN adduser -S mintel -G mintel", "d17683cf546f9622c78a7be458ba7e36": "COPY /app/bin/dex-k8s-ingress-watcher /app/bin/", "97ed96c860be1be5c434dbce2a2b1bb2": "USER mintel", "d45afd35fbc44d6754c0464e6cb16d2d": "MAINTAINER Raymond Wen", "0f74f93716d7019824df4ce3e1eb065c": "ENV ZEROMQ_VERSION=\"4.1.4\"", "1b313e9d5dc6e2dcac590dc92115987f": "RUN apt-get install -y pkg-config unzip libtool autoconf", "281b8d78ba7adb937add98f93e91cb4f": "RUN wget https://github.com/jedisct1/libsodium/archive/stable.zip", "f4a6e42e9381b091e92eb276405274dc": "RUN unzip stable.zip", "25f16d9711fe7bd20dc7ea6f11a3ce39": "RUN rm stable.zip", "8b6cd2d01a3df3aff57afca1f0beeaec": "RUN cd libsodium-stable", "d06c49aec8a413a46327991756614c35": "RUN cd ..", "a50c40139a156f85b0d6b6ff03c7ce54": "RUN rm -rf libsodium-stable", "146c8abe734bff4a11713cf3ccfb4d31": "RUN wget http://download.zeromq.org/zeromq-4.1.4.tar.gz", "438767449e8d21e276a0b40ad265d231": "RUN tar -xvf zeromq-${ZEROMQ_VERSION}.tar.gz", "c5d5ec5be318c310caae914003618c14": "RUN rm zeromq-${ZEROMQ_VERSION}.tar.gz", "7a97090f21dd09b4911ddf1e7e833cd5": "RUN cd zeromq-${ZEROMQ_VERSION}", "107ca81bd7d99a9af832956330f225e4": "RUN rm -rf zeromq-${ZEROMQ_VERSION}", "9cd0862065a954dea64191e8f35095e5": "WORKDIR /go/src/github.com/sigmonsays/paste/pasted", "7f91001da24c4af9b88ef7f61748df0e": "COPY . /go/src/github.com/sigmonsays/paste/", "67583a73b690cf3f4830824e07c6f792": "RUN go install -ldflags '-w -extldflags \"-static\"' github.com/sigmonsays/paste/...", "6f1b49c9d2b9f0cd775c322a1cb3a4cf": "COPY /go/bin/pasted /", "13cb95f59991d57fa0616cf3200fa553": "EXPOSE 7001", "e9c786e730a0269a6bd59e5cded612e8": "CMD [ \"/pasted\", \"-bindaddr\", \":7001\" ]", "2dfeae9a4d4fdb3037e8554012c62f62": "RUN apt-get install -y --no-install-recommends google-chrome-stable unzip", "acba51cbb6c6f9fb6a35a7fcb468f582": "CMD [\"app\"]", "68a7b5959c21539cd4f4a54773858f09": "MAINTAINER Mei Akizuru", "110219a291fbe329b4f376ba8e56705a": "FROM golang:1.12.4 AS builder", "8faaf1d6bcfcf81fb57f865210ac8f30": "ADD . /go/src/github.com/cloud-barista/cb-spider", "1d7be328563b3a95d1509c017d67a685": "WORKDIR /go/src/github.com/cloud-barista/cb-spider", "2ea6c0abd6e25f56b09aa1aa6ede6343": "RUN ./build_all_driver_lib.sh", "b1c44796049625dd74b2cd33c2872516": "WORKDIR api-runtime/rest-runtime", "824ed9dedb1affb12daa3511975442f8": "RUN GOOS=linux go build -tags cb-spider -o cb-spider -v", "6c1d7d8da1ebd40d37d51e1cd8127587": "FROM ubuntu:latest", "ae70f6a423e9f742e310e4d8985047a9": "RUN apt install -y ca-certificates", "a2a4fee9bd2131d16c661427c4b6897a": "RUN rm /bin/sh", "916869361f99b14002e2a3da6b78eae8": "RUN ln -s /bin/bash /bin/sh", "063b42d56b4471fd7a93e684c08437b7": "WORKDIR /root/go/src/github.com/cloud-barista/cb-spider", "8d01df069e7ce7bcf01a28a8028e5b08": "COPY /go/src/github.com/cloud-barista/cb-spider/cloud-driver-libs/* /root/go/src/github.com/cloud-barista/cb-spider/cloud-driver-libs/", "27ba92a04cb4be8de14b1c6df6c90d88": "COPY /go/src/github.com/cloud-barista/cb-spider/conf/* /root/go/src/github.com/cloud-barista/cb-spider/conf/", "1d2fb95e90bb1aedd4e0887f2893edcf": "COPY /go/src/github.com/cloud-barista/cb-spider/api-runtime/rest-runtime/cb-spider /root/go/src/github.com/cloud-barista/cb-spider/api-runtime/rest-runtime/", "bf5cf3ab20bc2d4411d1c3dcea141d35": "ENV CBSPIDER_ROOT=\"/root/go/src/github.com/cloud-barista/cb-spider\"", "b7b1eba91585ca303e5db246594f3154": "ENV CBSTORE_ROOT=\"/root/go/src/github.com/cloud-barista/cb-spider\"", "2ef623b302a104bb705756b946b3e803": "ENV CBLOG_ROOT=\"/root/go/src/github.com/cloud-barista/cb-spider\"", "b8dabaf239f84486e6900c4cd8183b6c": "ENTRYPOINT [ \"/root/go/src/github.com/cloud-barista/cb-spider/api-runtime/rest-runtime/cb-spider\" ]", "223ab350ceab44e8d8b5872cd82f3388": "EXPOSE 1024", "bb77736ba5cb2e93224f8e2b14ae1bc6": "RUN git checkout v0.6.1-beta-rc1", "7bbf328349c8f91e9b09cb6fefa95c01": "RUN go get -v github.com/gin-gonic/gin", "01e2acd967401440afd8ae44d04b8cc1": "RUN go get -v github.com/go-sql-driver/mysql", "808a8c7f8a0de1918c7a831ce9a34a80": "RUN go get -v github.com/gomodule/redigo/redis", "eca9ba43d7eb9a92f3c24deaa70f77f3": "RUN apk add --no-cache bash git", "138290f9a168437f1b78871681aa3b66": "LABEL org.opencontainers.image.title=\"roadrunner\" org.opencontainers.image.description=\"High-performance PHP application server, load-balancer and process manager\" org.opencontainers.image.url=\"https://github.com/spiral/roadrunner\" org.opencontainers.image.source=\"https://github.com/spiral/roadrunner\" org.opencontainers.image.vendor=\"SpiralScout\" org.opencontainers.image.licenses=\"MIT\"", "eee64f18613751c07b4932da4d26cdca": "RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -ldflags \"-s -w\" main.go", "702c2a4831792704faca2fba922f45b8": "RUN apk add --no-cache", "98ca1169cbdee239832ca4db46b23309": "RUN mkdir /squadxml", "a34a251353532e0c1eea3f2a18b0f7d1": "ENV SQUADXML_DB_USER=\"user\"", "9f2387e5fa5f485d8658b5c3ccdf9ded": "ENV SQUADXML_DB_PASSWORD=\"password\"", "3eae8a2ac11cb0df03b4fe178bc22fee": "ENV SQUADXML_DB_HOST=\"host\"", "341f48177c38f9d6d52a2fad2c697bd5": "ENV SQUADXML_DB=\"db\"", "0a4ef7ebc5e734631f552ab6a30fb299": "FROM golang:1.13.5-alpine3.10 as builder", "dcd6423c114d21bbc761b1284fcbeb27": "LABEL maintainer=\"Leandro Loureiro <leandroloureiro@protonmail.com>\"", "a9d4f0deff485c1b4c54a92ac6ec191b": "WORKDIR $GOPATH/src/github.com/lealoureiro/mortgage-calculator-api", "7073584d98f97f781195ee2576cfeb2d": "COPY controller controller", "1bd52d6e4e8f4813fb286bdd1abca078": "COPY model model", "4b7db280627854e920b2ceec2b3168f7": "COPY monthlypayments monthlypayments", "fcbc286bf43033bbb80d094fd510abf7": "COPY utils utils", "1cc0da9c43cde54e7c3ce6e92383766c": "COPY mortgage-calculator-api.go .", "17a1ec1e1a958f2349ac2e88334b62a7": "COPY Gopkg.toml .", "17550ad5f9432d2d892dd3985c7bbdaf": "RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o /go/bin/mortgage-calculator-api .", "d54e8c3fb8706802d9bed22ebd585db9": "COPY /go/bin/mortgage-calculator-api .", "fbfa4538779f3be5ce066638c77d60fb": "CMD [\"./mortgage-calculator-api\"]", "6cc9c88d0ce330ca6a9fad9780420382": "FROM golang:1.14.1-buster", "14003a98828c78dc5ad553aa34e4d048": "MAINTAINER ldoublewood <ldoublewood@gmail.com>", "2033f7cde4ce4e2c943f4a3f45fe6920": "ENV SRC_DIR=\"/lotus\"", "c6322b8d79b5396e556d438055624401": "RUN apt-get install -y ca-certificates llvm clang mesa-opencl-icd ocl-icd-opencl-dev jq", "b4d2855356cc81e4f7721283b4790ee5": "RUN curl -sSf https://sh.rustup.rs | sh -s -- -y", "bf4343920548201c4fa3cc6f050ebf9f": "ENV SUEXEC_VERSION=\"v0.2\"", "d29879182fe850596004fe308198e414": "ENV TINI_VERSION=\"v0.18.0\"", "0b54b8e9ba908163e6cd0c42aee0c72c": "RUN git clone https://github.com/ncopa/su-exec.git", "8366de8a85cfc1346f90eb893bd1822c": "RUN cd su-exec", "2083e181bd5e5af469822b104b91fdd9": "RUN git checkout -q $SUEXEC_VERSION", "ac3142ea0680bc9a17b1251aba962666": "RUN wget -q -O tini https://github.com/krallin/tini/releases/download/$TINI_VERSION/tini", "aefe9564b8b8da44eb7bf8a997f37708": "RUN chmod +x tini", "41a1f5886c686e22fb261dec1e1a8ae2": "COPY go.mod go.sum $SRC_DIR/", "ba6ce7cc47bac9da1e37180332975c59": "COPY extern/", "f139c73a50fdeb70c60ade498d1d74fe": "RUN cd $SRC_DIR", "4a0aa13eb56c329306cf1fb35055cd1a": "COPY Makefile $SRC_DIR", "0308e760fffb487947b22cc784076b50": "COPY .git/", "977c217250aba2eb37de0c8bd07b1e54": "COPY .gitmodules $SRC_DIR/", "98302d56a57db10b902fd668641f0752": "RUN mkdir $SRC_DIR/build", "9a4e5919e7a85bc72872f862d72cadcd": "RUN . $HOME/.cargo/env", "cc8fe1de71f3dea91ad386c1b6aa79d7": "RUN make clean", "e3608dc0ea4e6dcf7db8f70c1fddbba4": "COPY . $SRC_DIR", "6da8f01fd54ba26df36a750f96fe4ec1": "ARG MAKE_TARGET=all", "baac99b77b372921d02d3d1306248a75": "RUN make $MAKE_TARGET", "9af5e0485c7c2afd46a1edb88516ffe2": "FROM busybox:1-glibc", "9338be468f291a4f35f6f80893147898": "COPY $SRC_DIR/lotus /usr/local/bin/", "2549c285b19d4d9efc7222643c517826": "COPY $SRC_DIR/lotus-* /usr/local/bin/", "f4134df466e1790a52ca8a8d5894bdb5": "COPY /tmp/su-exec/su-exec /sbin/", "875141045918af08ff2cd761045f0171": "COPY /tmp/tini /sbin/", "ecac4c19b6f7a387a174888729d99d15": "COPY /etc/ssl/certs /etc/ssl/", "a962d44cfe3d8d75d1a3aeb173370777": "COPY /lib/x86_64-linux-gnu/libdl-2.28.so /lib/libdl.so.2", "506e758a36dc9df27e78c84ce6041088": "COPY /lib/x86_64-linux-gnu/libutil-2.28.so /lib/libutil.so.1", "58449ce718690ca9b34546f200917731": "COPY /usr/lib/x86_64-linux-gnu/libOpenCL.so.1.0.0 /lib/libOpenCL.so.1", "3be55395fa28f44f43fb1ef238452d2a": "COPY /lib/x86_64-linux-gnu/librt-2.28.so /lib/librt.so.1", "6716d472e50719dc72e0cd6916979186": "COPY /lib/x86_64-linux-gnu/libgcc_s.so.1 /lib/", "29f23a3d3f3fd86513cfe4a516b99b11": "EXPOSE 1234", "0c69bed7f2e6797a5c2122760c1eed77": "EXPOSE 5678", "ec9231fdf98d73f37f30b20b6893658f": "ENV HOME_PATH=\"/data\"", "f26014c6237fa76988a0b3b8d598e263": "ENV PARAMCACHE_PATH=\"/var/tmp/filecoin-proof-parameters\"", "359a7de1c28217d5287720b367b7020f": "RUN mkdir -p $HOME_PATH $PARAMCACHE_PATH", "a83bb5c07b808f197558a2c47adee4fb": "RUN adduser -D -h $HOME_PATH -u 1000 -G users lotus", "e8d3af5deb965107da1484f3b9f0392d": "RUN chown lotus:users $HOME_PATH $PARAMCACHE_PATH", "f2ecfa4da8795ac1a5e157e6685cdf98": "VOLUME $HOME_PATH", "22ff6d3b909458c1e13fc13985b754ef": "VOLUME $PARAMCACHE_PATH", "f5222359e5a87fee74030639dde122d9": "USER lotus", "edc5b38e2e752ffa1c3c452109c4e35b": "CMD [\"/sbin/tini\", \"--\", \"lotus\", \"daemon\"]", "e5442aaa5417db10170f66d4f74ec31e": "FROM golang:1.7-alpine as builder", "c76604a561cdcecd960897bdf902c8c3": "RUN go build -o /build/entry-point gerrit.opencord.org/sadis-server", "57ceec7c9c08345a2826552c3af6608d": "FROM alpine:3.5", "6e2a54f16d1df581adc0ae9357c62606": "RUN apt-get -y update", "4b516c881f11cde8f3adf6d2267a278c": "RUN apt-get -y dist-upgrade", "c8b35583cb93ea521cdbb6b7cfe9b675": "RUN apt-get -y install curl gnupg build-essential git less nano default-jdk", "04a61944597497ce27435d583b16c1ee": "RUN curl https://sdk.cloud.google.com > install.sh", "9b89444f9ca127106f1e507b2a0e5717": "RUN bash install.sh --disable-prompts", "73067be92529c7a0549d29b69d9e26c3": "ENV PATH=\"${PATH}:/root/google-cloud-sdk/bin:/usr/local/go/bin\"", "a1cfa80b097f1d6eaf5e9cd21bc93c88": "RUN gcloud components update", "1d330acbed6c4e4ff2151f35405d8499": "RUN gcloud components install app-engine-go", "cbadf41db303f0a19bf4d032391f95f0": "RUN gcloud components install cloud-datastore-emulator", "fe88da05bcda5ab3ea29d7a1a0ad2c80": "RUN rm install.sh", "ca5a02a978b12d36e7d08d15dbed71ed": "RUN curl -sL https://deb.nodesource.com/setup_13.x | bash -", "4c372e2fa3c2b7d3bea2578410190fc6": "RUN apt-get -y install nodejs", "bfc7016a6180f8095bb25da629026e2a": "RUN npm -g config set user root", "e0631ac7eea30da31aa57f10a5c0695b": "RUN npm -g i yarn firebase-tools", "bffe743f8794f76fdbc0d93878899888": "ADD . /go/src/fmpwebserver", "425847d78d300a24c0e3b9553d829029": "RUN go get github.com/dgrijalva/jwt-go", "e9286f79f3e844759f16f8e3aa6cf6ff": "RUN go get github.com/go-sql-driver/mysql", "974681d69e565e1dcfc6d794bcca4f0e": "RUN go get gopkg.in/gomail.v2", "9aa2581a55b88bc474493d51e9d2bc71": "RUN go get github.com/gorilla/context", "c95b6b9b89f5c97c9cf8719730197bae": "RUN go get github.com/urfave/negroni", "f63e6afa50e964324129a617ac9c5270": "RUN go get github.com/garyburd/redigo/redis", "5bf208fe7ee50f17eb63e6bff9a65c93": "RUN go get golang.org/x/crypto/bcrypt", "300a51d9961fb7aeffdfb1a65894e58f": "RUN go install fmpwebserver", "96f634867a9f2e907d73d0a231317129": "COPY /go/src/fmpwebserver/settings /go/bin", "aa37fec4ccf0aac71c80ec23397b602c": "ENTRYPOINT /go/bin/fmpwebserver", "cd5bc97f852c4e4cef2a2d2393bb612d": "FROM golang:1.20.4-alpine@sha256:0a03b591c358a0bb02e39b93c30e955358dadd18dc507087a3b7f3912c17fe13 as builder", "395e218ce04a9403f2d441ac2de6ce5f": "RUN apk add --no-cache ca-certificates git", "f18a86dfe47c9ef433e4b82dd9c776c6": "ARG SKAFFOLD_GO_GCFLAGS=\"\"", "652b3e93bc55bdfb406e9acac7c93884": "RUN go build -gcflags=\"${SKAFFOLD_GO_GCFLAGS}\" -o /checkoutservice .", "57e8294a4ba4ce83492d62c9fb36c2a9": "FROM alpine:3.18.0@sha256:02bb6f428431fbc2809c5d1b41eab5a68350194fb508869a33cb1af4444c9b11", "f775d0d1fa0f21bb67a91473ccac8479": "COPY /checkoutservice /src/", "cc93935ea53c1169b03a685ed368cb25": "ENV GOTRACEBACK=\"single\"", "8a4a777cf13511706729e31d66b97c4e": "EXPOSE 5050", "233fb9449a889a2189ba928b5b0b1066": "ENTRYPOINT [\"/src/checkoutservice\"]", "c2902d31b2fa8840d1797e3708d832f2": "COPY run.sh static templates ./", "7987ff88340d81bfee471a151e1f3a01": "COPY . /go/src/github.com/mujx/scrape-proxy", "29f1f95ed5ff2717a54f6708e7523744": "RUN apk --no-cache add make dep", "5389942f300643c0f799cbc01fbd38c3": "RUN cp ./client/client /app/client", "760d8061e242a736bde85abd4e415dd3": "RUN cp ./server/server /app/server", "43e2cc50ea56034e9e16d43b846c52d2": "ENV CLIENT_PROXY_ENDPOINT=\"tcp://localhost:5050\"", "52cce31b397330a5ed391346b847d62f": "ENV CLIENT_REMOTE_FQDN=\"localhost\"", "c5cc3173571539375f80b0be5956c5e7": "ENV SERVER_CLIENT_LISTEN_ADDR=\"tcp://*:5050\"", "a56bf0b2d0418057336814fd4426a0b7": "ENV SERVER_WEB_LISTEN_ADDR=\":8080\"", "a1bd310baf61a99613a51e51f0fa95f7": "ENV SERVER_SURVEY_TIMEOUT=\"10\"", "0093247200c338c110ba24d0c4682b52": "FROM golang:1.13.5 AS build", "f99bc7539b3185dbe4ed48bfe8e4d57b": "LABEL maintainer \"zhoubowen <zhoubowen.sky@gmail.com>\"", "262ae8fa8017682c918f9d6bad7050da": "ENV SSR=\"https://github.com/zhoubowen-sky/shadowsocksr.git\"", "daa27f0b750955bb7c24f58588fa5e1b": "ENV KCPTUN_URL=\"https://github.com/xtaci/kcptun/releases/download/v20200103/kcptun-linux-amd64-20200103.tar.gz\"", "06ffe317a119d3a2d6cf3f77256a7049": "ENV BROOK_URL=\"https://github.com/txthinking/brook/releases/download/v20200102/brook\"", "8c98f8401457ef1ad906b6bc076f3156": "RUN cd /go/bin", "27b58763935a4c515753cc16c597db8d": "RUN wget ${KCPTUN_URL}", "443f718a363892a2fd6ab47e124b3bbe": "RUN tar -xf *.gz", "7d821506cd5c98264e04524fb9b25d44": "RUN cp -f server_linux_amd64 server", "71ce0d8c6a7876af70701b4dde836bfd": "RUN wget ${BROOK_URL}", "8e4110ea8141c5929550003d14dd9319": "RUN chmod a+x brook", "03462eb5c4aacc3fee929986e9aa7987": "RUN git clone ${SSR}", "ca78ca8aeea83a261696105c925aab8a": "RUN cd /go/shadowsocksr", "0c0cb8991e912387939c8f686a5f5774": "RUN bash initcfg.sh", "9d1c5e1afa5d33b42dd78b9d618a32cb": "RUN rm -rf .git", "f04916557213df92b8cae05dd757d9ec": "ENV SS_LIBEV_URL=\"https://github.com/shadowsocks/shadowsocks-libev.git\"", "1fa67f542b9153242024536cefc2735a": "RUN apk --no-cache update", "4455f04a30c428b7cfd7c76f5c3b8111": "RUN apk --no-cache upgrade", "9a0c372dae672f4a58a5d829d4c7ca9f": "RUN apk --no-cache add monit openrc python", "1445880e92502a0b54df01ba34c74a23": "RUN apk add --no-cache --virtual .build-deps autoconf automake build-base git c-ares-dev libev-dev libtool libsodium-dev linux-headers mbedtls-dev pcre-dev", "a882d0252416c20ed1c73acea6c1bea8": "RUN git clone ${SS_LIBEV_URL}", "c49f8ca53b0dc67453c48371045e094c": "RUN ./configure --prefix=/usr --disable-documentation", "f5a4575967607f6d0bf2dd25e7af1f30": "RUN apk add --no-cache rng-tools $(scanelf --needed --nobanner /usr/bin/ss-* | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' | sort -u)", "d13ba85fc2df251fddfeaad024b8bd4b": "RUN rm -rf /opt/shadowsocks-libev/", "1a952e8e4167c2765008d66458d89522": "RUN mkdir -p /usr/local/sbin", "79b037e7d8d300fc1dbf126e83dc1a92": "COPY /go/bin/server /usr/local/sbin/kcptun_server", "3f95c6f3a8949bb0d0220b2f26e05d03": "COPY /go/shadowsocksr /usr/local/sbin/", "b910a1db81a13b06f498a9bc42ad894f": "COPY /go/bin/brook /usr/local/sbin/", "61e0d48165fe8ec903bb90c1400f4749": "RUN cp -rf script/kcptun.json /etc/", "16177fb81154d674bb3a9702a6726a5f": "RUN cp -rf script/shadowsocks.json /etc/", "d18246a6d066223954704fbd2bfe695c": "RUN cp -rf script/shadowsocksr.json /etc/", "263297173f3df62d008801d6e1b44217": "RUN cp -rf script/kcptunConsole /usr/local/sbin/", "2296b492aaa2065f3f3f42d52458b427": "RUN cp -rf script/shadowsocksRConsole /usr/local/sbin/", "cffaf58503ba8d5b3b29c7fdc41ab6b2": "RUN cp -rf script/shadowsocksLibevConsole /usr/local/sbin/", "58af72feb8c36796f7b50ee94f161c08": "RUN cp -rf script/brookConsole /usr/local/sbin/", "10f7733d1bc1e05fe75b5aa162d7829e": "RUN chmod a+x /usr/local/sbin/kcptunConsole /usr/local/sbin/shadowsocksRConsole /usr/local/sbin/brookConsole /usr/local/sbin/shadowsocksLibevConsole", "14aba44eeb51c89004dc3b267f98264f": "RUN rm -rf .git .gitignore doc", "4ebedb6dae99769e453204c1918d92b9": "RUN rm -rf /etc/monit.d", "5cf5594bad7c1f08535a4b6ab04139fa": "RUN cp -rf monit-config/monit.d /etc/", "1fe757f71bc833e65864c6bfd7f0804b": "RUN rm -rf /etc/monitrc", "2a18c176c8a31782e2cf3145fb325482": "RUN cp -rf monit-config/monitrc /etc/", "36995bdedc2510e573fec1624595797b": "RUN chown root:root /etc/monitrc", "22e89eec1972b373b36eba1bcd843906": "RUN chmod 0700 /etc/monitrc", "f3f9bf20e7dce6933b6257dcf4a56eaf": "RUN rc-update add monit", "6972fb63840167589e1621d9726119c5": "ADD *.go go.mod go.sum /prpr/", "91e7900045d92d4eef1abf222e5a9ea2": "WORKDIR /prpr", "800c3d9ea4814e91b775bb9f05f174f7": "RUN go build -v", "d97358a965cf2ac9085d8eb83f782a4e": "FROM debian:unstable-slim", "4f924480bcf94d552920f27506bf7903": "RUN apt-get install --no-install-recommends -y firefox ca-certificates", "1e38e65b503ddb9be2a7762d1de25fa4": "ADD .mozilla /root/", "ab5a5df470e873f0f2779f09493979d9": "COPY /prpr/prpr /usr/local/bin/", "144db3e6a6a7c04277893fd4b5db3951": "CMD /usr/local/bin/prpr", "49ed7df8adfa31b94ed6b695b98ca4f5": "WORKDIR /project/Astral", "efc08cb5aebc6d48fd70e1973cbc399e": "RUN go build -o astral .", "27cbfabd2fede5c1a58d644601b6256e": "COPY /project/Astral/astral /Astral/", "bda727ca28463d870fe04408b982035d": "ADD . /go/src/github.com/dubuqingfeng/stratum-server-monitor", "b6f817bce5f7cbb62f7417261d1e47f0": "RUN cd /go/src/github.com/dubuqingfeng/stratum-server-monitor", "356ed92eb465dc7332e10589b5437dd8": "RUN go build -v -o /src/bin/stratum-server-monitor main.go", "5a8375e06903d6bad9d477ab3ccd60f5": "RUN apk --no-cache add openssl ca-certificates tzdata", "9f2a84ed794e57aa6123d25f14df149e": "COPY /src/bin /app/", "07a136c601dce3145deaaeb809277e11": "COPY /go/src/github.com/dubuqingfeng/stratum-server-monitor/configs /app/", "e51d5f19fa4fc322f447da121dbbdadd": "COPY /go/src/github.com/dubuqingfeng/stratum-server-monitor/logs /app/", "fc115911bd1c6f219f34d0a990b63376": "ENTRYPOINT ./stratum-server-monitor", "aeef40f906c440fe75626ad66dc9ec2d": "ARG golangci_version=\"v1.17.1\"", "1cdc1adf2cdf507adadeeca2b368a482": "RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -ldflags='-w -s' -o /build/pgsql-backup-s3", "8b447111b5d93c61ae366942c1b1f711": "RUN apk add postgresql-client ca-certificates", "78314c03984bc72fdccfb48ed4a7d00a": "COPY /build/pgsql-backup-s3 /usr/bin/", "44c03e276adf4186c382f05071169b3d": "ENTRYPOINT [ \"/usr/bin/pgsql-backup-s3\" ]", "955eaa2ddfdae6f7f53f1eb97809c384": "WORKDIR /wechat-token-server", "63f09a524b535e25ce89e38969aa74eb": "RUN GOOS=linux go build -o token-server .", "8938a8553a38b51c9f38013fd5f91677": "COPY /wechat-token-server/token-server /usr/bin", "f61690426f29fd8e8a7b4d0388cd76b2": "ENTRYPOINT [\"token-server\"]", "b3b6a8fdaccae896e504067491b4bdc2": "FROM alpine:3.11.5", "09d0bf07aacb0e3ca57f02920508ca13": "COPY /exporter/bin/linux_amd64/aws-apigateway-exporter /bin/", "843d8483cc9c630a7e803a29676a4a25": "RUN git clone --depth 1 https://github.com/langerma/bosun.git /bosun", "def4cf4a589c14fe3c165bcb42dbd42f": "WORKDIR /bosun/cmd/bosun", "7daa91a1b69000e46bb2389c8983d6cd": "RUN mkdir -p /opt/bosun/bin /opt/bin /etc/bosun", "a5c0a20fe2df0727c5ef64514082ec86": "COPY /bosun/cmd/bosun/bosun /opt/bosun/bin/", "f5757b620ed336da321ab3394b10fe5b": "ADD docker/start_bosun.sh /opt/bin/", "646a6b75e781cdd7a5bcca8d5ea1fc43": "ADD docker/bosun.conf /etc/bosun/", "c61af600af55806c727975294387e3eb": "ADD docker/bosun.rules /etc/bosun/", "3cd39b9383e436126a931efea616242d": "ENTRYPOINT [\"/opt/bin/start_bosun.sh\"]", "0c8cd9eb7e3c2a8a098df63eadc03a2d": "EXPOSE 8070", "55b5055798c09ac8d93cf970205d8b74": "VOLUME [\"/etc/bosun\", \"/var/run/bosun\"]", "6799b0a32066ca08f15946558898c90a": "ENV TERRAFORM_VERSION=\"${terraform_version:-0.12.8}\"", "cd1a244723bfae8827a1a60400e80bd8": "ENV ANSIBLE_VERSION=\"${ansible_version:-2.8.4}\"", "6fd4efe42080d792ca284b10e80b739c": "ENV AWSCLI_VERSION=\"${awscli_version:-1.16.235}\"", "5b899d5044917d6e5ee91170c1ecc1a6": "FROM golang:1.12.4-alpine", "dc8a838e51a1d71ada340054a03d1bdd": "MAINTAINER Pharbers \"pqian@pharbers.com\"", "c0b002615c76bea8cd5978d0409f67d5": "RUN apk add --no-cache git mercurial bash gcc g++ make pkgconfig", "1c913a26197e64ba28a0b8945aa23971": "LABEL UcbPods.version=\"0.0.18\" maintainer=\"Alex\"", "2177d8145ef45ef5c5964392b7f6627f": "RUN git clone https://github.com/edenhill/librdkafka.git $GOPATH/librdkafka", "d1ed56aaa90e81a07b8ecb5d034ca1a8": "WORKDIR $GOPATH/librdkafka", "061d61c250f982f9fec4c63985bc7452": "RUN ./configure --prefix /usr", "161b3014207db0a1c36cef67ee521ace": "RUN git clone https://github.com/PharbersDeveloper/UcbServiceDeploy.git $GOPATH/src/github.com/PharbersDeveloper/UcbServiceDeploy", "c5e6d2c0821946aa15da96ad2497c3d6": "RUN git clone https://github.com/PharbersDeveloper/UcbPods.git $GOPATH/src/github.com/PharbersDeveloper/UcbPods", "d1499bee8c6886bfceebd0dc24a73e64": "ENV PKG_CONFIG_PATH=\"/usr/lib/pkgconfig\"", "b711c950236fe18624d8ad956be08aad": "ENV UCB_HOME=\"$GOPATH/src/github.com/PharbersDeveloper/UcbServiceDeploy/deploy-config\"", "197186272c378c16492a5b5f669feba3": "ENV BM_KAFKA_CONF_HOME=\"$GOPATH/src/github.com/PharbersDeveloper/UcbServiceDeploy/deploy-config/resource/kafkaconfig.json\"", "c593a4ee7e9e7ad43b18da87e1ab7943": "ENV BM_XMPP_CONF_HOME=\"$GOPATH/src/github.com/PharbersDeveloper/UcbServiceDeploy/deploy-config/resource/xmppconfig.json\"", "30372b5c8483b90cf7f15840de1ef11a": "RUN cd $GOPATH/src/github.com/PharbersDeveloper/UcbPods", "33d0ba94703e87b9d04d2c578e9f5d9a": "EXPOSE 31415", "9c90f0481d7689729df4dba6b6c19c76": "WORKDIR $GOPATH/bin", "1150f0a14071392de5234c3d402f6beb": "ENTRYPOINT [\"Ucb\"]", "688314a27a9e00cf5610e24e6d04fd95": "FROM golang:1.11.0-stretch as build", "2e3361cae623afc6c52ab8d045137250": "ADD . /app", "d7ef68ac92036436dc7badecae74c472": "RUN go build -o alertmanager-devops-toolkit .", "85864e8b25e4c8278b419ad3519c0e99": "FROM busybox:1", "7ef4c2ca6c7110e7b1f87e0798e2df67": "COPY /app/alertmanager-devops-toolkit /usr/local/bin/", "0bd6bdea0bbdb2a5ad8c7e86ebb69615": "RUN mkdir /work", "0c48d7b0d613486855772c7c9a6a166b": "WORKDIR /go/pickme", "e91a3dbf4ebf18a7a0890d992784a125": "RUN go build -mod=vendor -o /go/bin/pickme", "556baab18912f8ebf457acd00b599a9f": "COPY /go/bin/pickme /usr/local/bin/", "555e6dc2c885061915d9cd9e5d37a4df": "ENV PICKME_REDIS_ADDRS=\"\" PICKME_TELEGRAM_PATH=\"\" PICKME_TELEGRAM_PROXY=\"\" PICKME_TELEGRAM_TOKEN=\"\" PICKME_TELEGRAM_URL=\"\"", "20a637a62e4e55aee471725247f46f2c": "CMD [\"/usr/local/bin/pickme\"]", "64297aec7a6b62792e634236e04eed21": "CMD [ \"s420\" ]", "08de7006cd32c9451dbfa2ff539fb87e": "RUN apk --no-cache add gcc libc-dev supervisor sqlite git", "49b6f55a1bc5a693e8536c759c99e5bd": "WORKDIR $GOPATH/src", "376924dfa00ff9e30033bd6096c3761d": "RUN go get -v github.com/codegangsta/gin", "f3a22e0b24e31e1d8c09bd1230c5b694": "ENV GIN_BIN=\"/../../../tmp/gin-bin\"", "2135863a97eb870eea7c93a00f59a9ce": "ENV GIN_PORT=\"8080\"", "24277a25cc7f08975ea5a73d2835db8b": "ENV BIN_APP_PORT=\"8081\"", "5dc30ffb508fd2c08b6433485726aae9": "ENV APP_PORT=\"8080\"", "c3eeba7317af38c90e4f5997bbd80138": "FROM golang:1.9.4-alpine3.7", "74828224d45e0010794b50b052806b6c": "COPY . /go/src/github.com/mintel/dex-k8s-authenticator", "63c33f5b897360531dc95e197bd881b3": "WORKDIR /go/src/github.com/mintel/dex-k8s-authenticator", "80d4e9c85606bd9ee6713fe26e3fc8b6": "RUN make get", "24534d7616d1fb94e9cc43b44938db9e": "COPY /go/src/github.com/mintel/dex-k8s-authenticator /app", "eab01089c7f2f74d9110a72c5a5b83c6": "RUN apk --update add bc wget", "85f583ecc01af05db6142a00328baed8": "RUN wget https://github.com/nnao45/dntk/releases/download/vvv1.0.11/dntk-linux-amd64-vvv1.0.11.tar.gz", "c2a8f1f0e9202b4b1e903fb8768f0a72": "RUN tar xvfz dntk-linux-amd64-vvv1.0.11.tar.gz", "e9818b9e692281b779ee6ede2608ef5c": "CMD [\"dntk-linux-amd64/dntk\"]", "60b38e0a67d84d73353db8b5739ee139": "FROM golang:alpine AS go-build", "200d0e4af75f347334d63f1d59b88ca9": "RUN go get -v git.torproject.org/pluggable-transports/obfs4.git/obfs4proxy", "ed54f8c84b4ad7c50af561b4b9544663": "RUN go get -v git.torproject.org/pluggable-transports/meek.git/meek-server", "73a05ca646b1cf8c772ac89d2224ffe2": "RUN cp -rv /go/bin /usr/local/", "fa6d1b49a3948281497dd1d7a0c8fe9c": "FROM alpine:latest AS tor-build", "3cdc1a452883eb64f7bbaa1342c9d0cd": "ARG TOR_GPG_KEY=0x6AFEE6D49E92B601", "15e747344822e7e1f63e7acec11f7ee3": "RUN apk --no-cache add --update gnupg build-base libevent libevent-dev libressl libressl-dev xz-libs xz-dev zlib zlib-dev zstd zstd-dev", "f40781a703744b24f31623fed36878a6": "RUN TOR_VERSION=$(wget -q https://gitweb.torproject.org/tor.git/plain/ReleaseNotes -O - | grep -m1 \"Changes in version\" | sed 's/^.*[^0-9]\\([0-9]*\\.[0-9]*\\.[0-9]*\\.[0-9]*\\).*$/\\1/')", "a8bf4141709f0d8581924e50d4e24870": "RUN TOR_TARBALL_NAME=\"tor-${TOR_VERSION}.tar.gz\"", "ba12db4fdb6ec4f256d49940fede88d5": "RUN TOR_TARBALL_LINK=\"https://dist.torproject.org/${TOR_TARBALL_NAME}\"", "00776bd98059daa9663a8eb36004cc92": "RUN wget -q $TOR_TARBALL_LINK", "212eea8b354e610e5749af3e198cc63d": "RUN wget $TOR_TARBALL_LINK.asc", "69c7f7a1bfd909eca9ff3e970ebb9866": "RUN found=''; for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 ipv4.pool.sks-keyservers.net keys.gnupg.net pgp.mit.edu ; do echo \"Fetching GPG key $TOR_GPG_KEY from $server\"; gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$TOR_GPG_KEY\"", "3506ff3065b201568644d6a514a235ce": "RUN found=yes", "4f4ef2d1abf53aa04f0fca03424ac3a9": "RUN break; done; test -z \"$found\"", "2c6cf1abc3a8aec7b3d9f01676d5eeb8": "RUN echo >&2 \"error: failed to fetch GPG key $TOR_GPG_KEY\"", "df4ece38dd2145b88082847397ac2063": "RUN exit 1; gpg --verify $TOR_TARBALL_NAME.asc", "8a3838362a780bdeef610688d565b402": "RUN tar xf $TOR_TARBALL_NAME", "303e3e388492de4fde0470bdf274aa43": "RUN cd tor-$TOR_VERSION", "1d016f07bec3a2120a1c4e8c0901b9ce": "RUN ls -R /usr/local/", "2de19530a9ae2284bbdde0fd51445a82": "MAINTAINER Christian chriswayg@gmail.com", "21d635057bf70536df18fbc48661509c": "ENV TOR_USER=\"tord\" TOR_NICKNAME=\"Tor4\"", "58fac43d81c4848aa8c247c328f50497": "RUN apk --no-cache add --update libevent libressl xz-libs zlib zstd pwgen", "92e81fb2a022f62861fdb7b43cde60f8": "COPY /usr/local/bin/", "78001e9b1c7bcd63474f9520799c0b5d": "COPY /usr/local/", "02306236fc8f513d0114d2f0f0d6651d": "RUN addgroup -g 19001 -S $TOR_USER", "e17aa17769a269e8d33b6a3f5353e7ba": "RUN adduser -u 19001 -G $TOR_USER -S $TOR_USER", "b4b9f94edf83abd132e82c6cd71c7248": "COPY ./torrc /etc/tor/", "957ed46aade3a46c5647ae88b2b252a3": "COPY ./scripts/", "0a43b1f48e63895f63dd312378ce20e8": "VOLUME /etc/tor /var/lib/tor", "789dd0caa79ce912fa617286ba044d44": "EXPOSE 9001 9030 9050 54444 7002", "0a7d87a48fe6e071d1190252cb324f0c": "ENTRYPOINT [\"docker-entrypoint\"]", "ed29d3ecffe723f39b79932cb3b17449": "CMD [\"tor\", \"-f\", \"/etc/tor/torrc\"]", "a01631011dcd3e95683c8b43df2a58b3": "COPY ./*.go /src/", "aa09724063717c6684bdf5917b71ef6f": "ENV V2RAY_PLUGIN_VERSION=\"v1.2.0\"", "2a5ced8df41edf403fa4b5ac929813e8": "RUN mkdir -p /go/src/github.com/shadowsocks", "8f16b49981e3b3ee751a2810a5585e02": "RUN cd /go/src/github.com/shadowsocks", "93944731638df022fe9e5ac8454b75a5": "RUN git clone https://github.com/shadowsocks/v2ray-plugin.git", "1935f46bdbf0fe64513934f2879ae113": "RUN cd v2ray-plugin", "ffb0657f99062cfe27314b12991d668d": "RUN git checkout \"$V2RAY_PLUGIN_VERSION\"", "3f2f527b728d9886504cf1efa5674b36": "RUN go get -d", "a8fd88ebfaf3c2f76ac4600ba9c413a8": "LABEL maintainer=\"Acris Liu <acrisliu@gmail.com>\"", "19a516f35ded39fce3e9ff9b9278ff09": "ENV SHADOWSOCKS_LIBEV_VERSION=\"v3.3.4\"", "142c60401264e44ad358b8c4b2a35b5a": "ENV SERVER_ADDR=\"0.0.0.0\"", "d11d9a261a8c67ec01c4a6d7023d3191": "ENV PASSWORD=\"ChangeMe!!!\"", "087b937e31216f257a67a5534203ee04": "ENV METHOD=\"chacha20-ietf-poly1305\"", "bfe6c8c09ba14cba3987bfe2990f93f7": "ENV TIMEOUT=\"86400\"", "c10e52d1f538ccff5e20ce78614156f1": "ENV DNS_ADDRS=\"1.1.1.1,1.0.0.1\"", "9f15c154a7f1c283170965df1b3c6f85": "ENV ARGS=\"-u\"", "b96457abe424439581b9b784de260dfe": "CMD exec ss-server -s $SERVER_ADDR -p $SERVER_PORT -k $PASSWORD -m $METHOD -t $TIMEOUT -d $DNS_ADDRS --reuse-port --no-delay $ARGS", "bfd5cd03956dff4cc96169a276021150": "FROM golang:1.13.4-buster", "914aee570148ebff5491b2682b53b532": "RUN apt-get install -y xz-utils curl jq unzip make", "69ff9d5572bc2d5cb80147720569325f": "ENV PATH=\"/root/bin:${PATH}\"", "7ed5b27bf9a13a6a4e7ad0500fb054a3": "RUN apk add netcat-openbsd", "03a8cea2fec4d28a1787026cddd48633": "RUN apk add curl", "a1a215dacdaadfd252cc65fceab7928e": "RUN apk add --no-cache bash bash-doc bash-completion", "d55c8e54d591dc17cc56a69c45405c32": "WORKDIR /fsdemo-priceservice", "aa9c917b6da4adb8f59b6b70cbf34f37": "CMD [\"fsdemo-priceservice\"]", "ce0c7976f2a1a2b2ad87e31392c38c55": "EXPOSE 8083", "a13fb52a84558e93d35b2570985f4f59": "FROM golang:1.20", "eb6787319f6d4c82a7775a4547451358": "RUN git version", "ef268b8b190430592b344b579cc62e7e": "COPY util util", "d16aeb75f796a772a41b27914989700a": "WORKDIR util/entrypoint", "e6166fc12e69fb9ae2ab18e015e2934e": "RUN chmod 755 entrypoint.sh", "3b405d1ed29893ca07ae58d4b6be8c44": "ENTRYPOINT [\"bash\", \"/entrypoint.sh\"]", "d4c61979d37f5d25943678e607af0c28": "COPY /go/src/github.com/jedisct1/utils/generate-domains-blacklists/generate-domains-blacklist.py /usr/local/bin/", "dac5470fa37889d50e80a8e45d2af0ec": "RUN git clone https://github.com/rzrbld/zabbix-exporter-3000", "01bd8fd58e707084ea7aa885b59a64a1": "RUN cd zabbix-exporter-3000", "6ee9e6035ca4f72d3488ba4af0a7a351": "RUN cp main /go/bin/ze3000", "c57e99574f308d6aec9fa6a1b09b6300": "COPY /go/bin/ze3000 /usr/bin/", "f466228794689ea3d6a038cfaa864f4c": "CMD [\"ze3000\"]", "3891cf2cbe0d63039af7f05ba8b4729d": "RUN go get github.com/ugorji/go@v1.1.2-0.20180831062425-e253f1f20942", "74f2dc2c550ddccb9bd6b73c7e543c52": "COPY go.mod /app/", "c89efaae81e4aea652c31d23643fafc0": "RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o rss_sync .", "bd094e0433eb38d46fe9817049a5f1f3": "COPY wait-for-it.sh /app/", "5e9e82f672ab25342b77ec1b9679449e": "RUN chmod +x /app/wait-for-it.sh", "913c7b09017a4718a37c09a5312d7d6e": "CMD [\"/app/rss_sync\"]", "8336397c1ad24bc42d75d58216192ac6": "RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -ldflags \"-w\" -o main .", "5110d205b9e9be76b824c298769e1e16": "RUN apk add --no-cache inkscape git", "cf83b5b7e4508c1d1c61925ec0470547": "RUN go get -u github.com/notnil/chessimg github.com/notnil/chess", "347cc36466204bde88aeda1e134d5f51": "RUN GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go get github.com/MauveSoftware/provisionize/cmd/provisionize", "46e07a7d752f430437b7d8de3bc6a2ae": "ENV ZipkinEndpoint=\"\"", "31ab739194f2fdb9b8b97805dce58681": "COPY /go/bin/provisionize .", "4457df9433a1d6c8ade025a784131aaa": "CMD ./provisionize --config-file=/config/config.yml --zipkin-endpoint=$ZipkinEndpoint", "ca4caa6855c31a0dc59f8a28e89d09ba": "EXPOSE 1337", "f45029c084a75e5ebdca0b520df2f191": "EXPOSE 9500", "d9f676bb9e9e4804a7938f112aae4af4": "RUN go get github.com/czerwonk/bioject/cmd/bioject", "c8d3518107ddab9cb1ae2fb30f3258f1": "COPY /go/bin/bioject .", "d0c247b70ccf4f2628463bea27ae85ce": "CMD ./bioject -config-file=/config/config.yml", "456f50e5f15416af25267e237bdc1807": "EXPOSE 179", "e3ebf385d87ab4f4fa7d18d892540650": "COPY . /go/src/github.com/malice-plugins/zoner", "9f8e704136448cd91ce3856f158f0f70": "WORKDIR /go/src/github.com/malice-plugins/zoner", "5720414c3c4ea33bc4cea5a65b8016ec": "LABEL malice.plugin.repository = \"https://github.com/malice-plugins/zoner.git\"", "822b2e1a7c83824b1ef64c061465df2e": "ARG ZONE_KEY=\"\"", "9110079784f3d48a23220f58f5f84c16": "ENV ZONE_KEY=\"$ZONE_KEY\"", "34ae1e92f5938f5e8a3fd005df0f95bb": "ENV ZONE=\"1.3.0\"", "fca54a1104cb7179c8af3441c6b66c85": "RUN buildDeps='ca-certificates wget build-essential'", "cc4fcd9b34f98fa30db8341bba7f0361": "RUN apt-get install -yq $buildDeps libc6-i386", "a3a7e7b231c05c75d034370f2ac0f4ea": "RUN echo \"===> Install Zoner AV...\"", "879d23cfb636994ed4b6355c685dcbc7": "RUN wget -q -P /tmp http://update.zonerantivirus.com/download/zav-${ZONE}-ubuntu-amd64.deb", "57e6b719d1431774fe4f6c59b84c3491": "RUN dpkg -i /tmp/zav-${ZONE}-ubuntu-amd64.deb; if [ \"x$ZONE_KEY\" != \"x\" ]; then echo \"===> Updating License Key...\"; sed -i \"s/UPDATE_KEY.*/UPDATE_KEY = ${ZONE_KEY}/g\" /etc/zav/zavd.conf; fi", "8347db350305d8c06f645e87eca26a6e": "RUN if [ \"x$ZONE_KEY\" != \"x\" ]; then echo \"===> Update zoner definitions...\"; /etc/init.d/zavd update; fi", "cf049c29adaa9b2103685dab94e823b4": "FROM golang:1.14.0", "169829dfb7ee36edc4d4b27884a3234f": "WORKDIR /go/src/github.com/systemli/ticker", "93e4499d1d074935529d7915e91bab44": "ADD . /go/src/github.com/systemli/ticker", "794d8c893f248b45b38c648cf35db346": "RUN go build -o /ticker", "1b8eec70bc5e8e8430e5f20ad1a842e1": "COPY /ticker /", "f72371c7d48ee3f4e21498f4ee9454a9": "ENTRYPOINT [\"/ticker\"]", "7fece70778ad6b73d332e8f00e511ec3": "RUN go test *.go", "6dbb8b2e69cbf6167fa173f31bb03562": "RUN go build -o /proxy-server ./main.go", "0b46f7dcb17ac0f9db523bca4575a9a2": "ENV CRA_PROXY_CACHE_DIR=\"/cache\"", "2a6c0a84c4485a66420b49e0eaa69514": "RUN mkdir -p /cache", "9760e5d1e590594227d91dbb6f705523": "VOLUME [\"/cache\"]", "865a76050d4734259da9c9ec53643048": "ENV CRA_PROXY_BIND=\":80\"", "cf17fec95b15076fff545097f4c7a354": "CMD [\"/proxy-server\"]", "86c3262f70c48da58a64ed843ce78cb8": "ADD . /go/src/github.com/m-lab/prometheus-bigquery-exporter", "222a0f177ba47e84872591bb50f40207": "RUN go get -v github.com/m-lab/prometheus-bigquery-exporter/cmd/bigquery_exporter", "cc8772f6e8e8396303f65a2bc46e031c": "ENTRYPOINT [\"/go/bin/bigquery_exporter\"]", "85f249a97fbc82e06bc262b650cfa64e": "RUN mkdir -p /tmp/go-app", "db959b7f351b8fc0c31955eb639d670f": "ADD . /tmp/go-app", "b2c89eb60ef0a647bf554036abf64a8a": "WORKDIR /tmp/go-app", "5d20147ad3d2e46f1f04e783c08a0170": "RUN go get -d -v github.com/go-redis/redis github.com/gorilla/mux gopkg.in/yaml.v2 github.com/thedevsaddam/gojsonq github.com/yalp/jsonpath", "e8659d8460d6f1cb73a5eaee63b8b8cf": "ENV SRC_DIR=\"/go/src/github.com/ajarv/go-app\"", "1a845efc0781d8bac752251621664114": "COPY /tmp/go-app/main .", "c9db202d55a9a8be738d147ec0378706": "CMD ./main --port 8080", "dd7d6df1c2e2ae00f8ce1b7297637684": "COPY . /go/src/github.com/m-lab/nodeinfo", "77f6447e436ca0331af39808cad53f95": "WORKDIR /go/src/github.com/m-lab/nodeinfo", "b600d58e76411d5fe2c44e443f7dcf6a": "RUN go get -v -ldflags \"-X github.com/m-lab/go/prometheusx.GitShortCommit=$(git log -1 --format=%h)\" ./...", "2cbdb87c1c5972909793a1ac04f25b3f": "RUN apk add --no-cache lshw", "03812736800a20d6f6d179c49dd48e2b": "COPY /go/bin/nodeinfo /", "2e00de14313d5a5005c5ec19d4b46bf0": "RUN mkdir smoketest", "401d9fae913e806983eb5c4e2094f99e": "RUN /nodeinfo -smoketest -datadir smoketest", "d0e2560a11cb2e961642ef6c57e59d2a": "RUN rm -Rf /smoketest", "39bf63181a281d94f002aa816e65d33a": "RUN rm -Rf /var/spool/nodeinfo", "e9342aef98d59140c0a425f9a7e516dd": "ENTRYPOINT [\"/nodeinfo\"]", "43d7fca2abe379f38d1545496884c669": "MAINTAINER \"Lennart Espe <lennart@espe.tech>\"", "d990cc8b0a3284bb87d49ae03e3148b5": "RUN apk add git build-base", "95eba845142353b929ce1f659eafdc32": "RUN mkdir -p \"/build\"", "be3fdeb1ad6de792662b3bfab4022103": "RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go get -v .", "8f10345f16c4936300d4e32f4ec9c377": "RUN go build -a --installsuffix cgo --ldflags=\"-s\" -o informer", "c98c30ecdf3419e686f2756bf74e504f": "FROM alpine:3.4", "8a12830a03682e2f7be5838fc732e406": "COPY /build/informer /bin/", "70e6f70df6119055015ed8ed2b9a7887": "ENTRYPOINT [\"/bin/informer\"]", "b8acc8ac14e98781052304fd143e110e": "FROM golang:1.12.4-alpine3.9 as builder", "5cc14503680e3a92cec34f05a19a2b53": "RUN apk add --update --no-cache build-base curl git upx", "32fde95a2c8f9fab18af8784f1f720eb": "ENV GOLANG_PROTOBUF_VERSION=\"1.3.1\" GOGO_PROTOBUF_VERSION=\"1.2.1\"", "c696786728a8d6c0ea3b0d620979367c": "RUN GO111MODULE=on go get github.com/golang/protobuf/protoc-gen-go@v${GOLANG_PROTOBUF_VERSION} github.com/gogo/protobuf/protoc-gen-gofast@v${GOGO_PROTOBUF_VERSION} github.com/gogo/protobuf/protoc-gen-gogo@v${GOGO_PROTOBUF_VERSION} github.com/gogo/protobuf/protoc-gen-gogofast@v${GOGO_PROTOBUF_VERSION} github.com/gogo/protobuf/protoc-gen-gogofaster@v${GOGO_PROTOBUF_VERSION} github.com/gogo/protobuf/protoc-gen-gogoslick@v${GOGO_PROTOBUF_VERSION}", "9e87bdd2262c90a2ddd31d4c7956ee4e": "RUN mv /go/bin/protoc-gen-go* /usr/local/bin/", "d255210f7dcd5ba2a75ff8f2293c6b22": "ENV GRPC_GATEWAY_VERSION=\"1.8.5\"", "0fd64ccf052f43d7f9f3110779d6c4c3": "ENV GRPC_WEB_VERSION=\"1.0.4\"", "de8a71ec2c95c2f1bfb30e2505141c50": "ENV YARPC_VERSION=\"1.37.3\"", "79755e955d6e16cecbe68fa8cdf59a29": "RUN GO111MODULE=on go mod init", "768f52fbb2d4a1ba9c167a6a379779c4": "RUN GO111MODULE=on go install ./encoding/protobuf/protoc-gen-yarpc-go", "73405284b0acd3a60fda50b99f26c03f": "RUN mv /go/bin/protoc-gen-yarpc-go /usr/local/bin/", "88e454fb72ce5c5d1e62fdcef35793b9": "ENV TWIRP_VERSION=\"5.7.0\"", "acfac47d04850e987f45727b1d0b0f16": "RUN curl -sSL https://github.com/twitchtv/twirp/releases/download/v${TWIRP_VERSION}/protoc-gen-twirp-Linux-x86_64 -o /usr/local/bin/protoc-gen-twirp", "adc126588da19267b98003494d79269c": "RUN curl -sSL https://github.com/twitchtv/twirp/releases/download/v${TWIRP_VERSION}/protoc-gen-twirp_python-Linux-x86_64 -o /usr/local/bin/protoc-gen-twirp_python", "9db2bbaffcfec3c4d293615434e7b2e3": "RUN chmod +x /usr/local/bin/protoc-gen-twirp", "51bbc7d3b9904d1bee2a9ca75329826c": "RUN chmod +x /usr/local/bin/protoc-gen-twirp_python", "4e5af156a4b8f6cbf74c751a24e86fb8": "RUN mv /tmp/protoc/include /usr/local/include", "66a603dccab8b8bb377f4714c3553b9b": "RUN mv /go/bin/prototool /usr/local/bin/prototool", "4b053002cb03c33381a5a82f62be1295": "RUN upx --lzma /usr/local/bin/*", "03f7956e2b87175d7ea349a1c22546bc": "ENV PROTOTOOL_PROTOC_BIN_PATH=\"/usr/bin/protoc\" PROTOTOOL_PROTOC_WKT_PATH=\"/usr/include\" GRPC_VERSION=\"1.21.3\" PROTOBUF_VERSION=\"3.8.0\" ALPINE_GRPC_VERSION_SUFFIX=\"r0\" ALPINE_PROTOBUF_VERSION_SUFFIX=\"r0\"", "c00617eaec6d08925ac1899bf32f9d1b": "ENV GOGO_PROTOBUF_VERSION=\"1.2.1\" GOLANG_PROTOBUF_VERSION=\"1.3.1\" GRPC_GATEWAY_VERSION=\"1.8.5\" GRPC_WEB_VERSION=\"1.0.4\" TWIRP_VERSION=\"5.7.0\" YARPC_VERSION=\"1.37.3\"", "2d10f1eee290a1c8227631ce5cc49a24": "ENV SOURCE=\"/go/src/github.com/viglesiasce/gke-info\" GLIDE_VERSION=\"v0.12.3\"", "78ba0431e1d504e523e9f86d49ffddd1": "RUN curl -fsSLO https://get.docker.com/builds/Linux/x86_64/docker-17.04.0-ce.tgz", "d9697a66d6bd7762733297a583c939cf": "RUN tar xzvf docker-17.04.0-ce.tgz", "a2b1fe5825eb61d9813ea52a6eeddb16": "RUN mv docker/docker /usr/local/bin", "ac989e75e8adec49d29df2622161a6b3": "RUN rm -r docker docker-17.04.0-ce.tgz", "fb9f91a9f2d511e1c2faf7e15c12a033": "RUN wget -q https://github.com/Masterminds/glide/releases/download/${GLIDE_VERSION}/glide-${GLIDE_VERSION}-linux-amd64.tar.gz", "b5bb4307831ad922ee7f650e13c5bac5": "RUN tar zxfv glide-${GLIDE_VERSION}-linux-amd64.tar.gz", "cc86c20012916d1f675480a4984d36f4": "RUN mv linux-amd64/glide /usr/local/bin", "f09101e337e5df5b15bda875bebf0b79": "COPY ./glide* $SOURCE/", "37c9a01c8ced90c1a1d749881f4c6b40": "RUN cd $SOURCE", "be66c8c710091f12bdb0f1a66174844e": "COPY . $SOURCE", "e2b5d549eb87da95e704ab92bfcf7474": "WORKDIR $SOURCE/cmd/gke-info", "04283ca9e8e496e0a4d3c5fd9ac69dfd": "RUN go build -o gke-info", "74cfb4e0e87ad4f5cd75b582e8d6349c": "CMD ./gke-info", "6c08484353359e8edb0c716746dccf4e": "COPY ./hostkey /gindoid/", "2a5391507bf12f138553edadc87d5589": "COPY ./emails /gindoid/", "9c1136b7e5c8391bf944d271ea522a98": "ENTRYPOINT ./gindoid --debug --knownhosts=/gindoid/hostkey --target=/doidata --templates=/tmpl --key=$tokenkey --port=10443 --sendmail --mailtofile=/gindoid/emails --mailserver=$mailserver", "77f7440021416b3ff6059daa30b1db9f": "COPY /go/src/go-droneci/main .", "595b1b69efe67d61656f96e35cfab517": "RUN apt install -y dnsmasq dnsutils", "798eb3b1b432f30a72a91b784d790ba1": "ADD ./dnscrypt-proxy.toml /etc/dnscrypt-proxy/", "f9029a09aeda9b89483dc7de53ed76e4": "ADD ./dnsmasq.conf /etc/", "9e9d363e7223841575bbfa386da333dc": "ADD ./start.sh /etc/dnscrypt-proxy/", "8e33763a8b0801a77a17d8f4205dd8fc": "RUN git clone https://github.com/jedisct1/dnscrypt-proxy src", "d0d7a05a156f9e3b47ac526e52bb3606": "RUN cd src/dnscrypt-proxy", "d290e7ee8adeed5b206c5b2d7f522d6f": "RUN go clean", "ae4021a86a8912af5ae5aa7c44132edc": "RUN go build -ldflags=\"-s -w\" -o $GOPATH/linux-amd64/dnscrypt-proxy", "0884c458fd5b645b11f58b0d2e01ff90": "RUN cp systemd/* $GOPATH/linux-amd64/", "62f1d3d4fd4e956ceaac8ce3cd7e5c33": "RUN rm -rf ./src", "ae91709c73a09a75817a13b34e4c5c95": "RUN chmod a+x /etc/dnscrypt-proxy/start.sh", "09e486768bc3bf308150384b6d9decdd": "WORKDIR \"/etc/dnscrypt-proxy/\"", "769cfd26fe864a7a88d5cc28c1d6b401": "HEALTHCHECK CMD dig @127.0.0.1 cloudflare.com || exit 1", "5dfe8f41e4c73dba52475f8421e56ff5": "ADD go.* ./", "cada219a6548ef1c8e08ff2a119704ae": "RUN apk add --quiet --no-cache git", "cadea22788b46676e2c254807f89a643": "COPY /go/bin/* /usr/bin/", "9e172aaa85a7a49ed17cca69f7806c54": "RUN useradd -u 8877 lavagna-go", "02cb1a71732e2e18a9e8602f4dce6556": "RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -o ip-api-proxy .", "a4fadf463ca4f9130b6a2fc4099d51a1": "RUN mkdir -p etc/ip-api-proxy", "98e577117c27a2e8f88ff913b36838d4": "RUN mkdir -p /ip-api-proxy", "eb898d4592a51ed5ffbea350aaac5288": "RUN chown -R nobody:nogroup etc/ip-api-proxy /ip-api-proxy", "b303cbdef0bcf54c8b03e3d4c1cd592f": "VOLUME [\"/ip-api-proxy\"]", "4e9a52e154262e29a44ecd728014df18": "WORKDIR /ip-api-proxy", "d92bf2598f08177e26cc704c95dbc3c8": "COPY /app/ip-api-proxy /bin/", "41bc285c331e7b854cda63a177b3750e": "CMD [\"/usr/sbin/update-ca-certificates\"]", "4f68706f3f8f8b23c42aefcbd1154673": "ENTRYPOINT [\"/bin/ip-api-proxy\"]", "7e4a46f362d60b14f5ae53387ac45fcf": "CMD [\"--config=/etc/ip-api-proxy/config.json\"]", "f3574cf5162e25f964dbabf11678f278": "WORKDIR $GOPATH/src/VideoPlayer-ms", "c9ca88e2c6ca9c84dde6db10514e9f74": "CMD [\"./VideoPlayer-ms\"]", "58f05734778713ae76b33725201cdfe3": "FROM golang:1.18 as build", "e38edcb98dde3dc880fd217414171bb2": "RUN go vet -v", "77325269aa888354fe38d451a3ba9fbc": "RUN go test -v", "7d46418a687b34e147f0ed3b2994b725": "RUN CGO_ENABLED=0 go build -o /go/bin/app", "75e8c912d59d7a04230c2b383cb26da5": "FROM gcr.io/distroless/static-debian11", "728b2a6af301dbb001ec0ce8ced0d556": "COPY /go/bin/app /", "9324ccf58db51903146ecec0eee78ef0": "FROM golang:buster", "27cdeb3b15ed91f09c6cf00f6421b172": "COPY . /app/", "4e835b0db756e60283a1bd200efb2fbb": "RUN go build -o gql .", "02a0340d06723f2c41b6a587643fb8f7": "RUN apk --no-cache add curl git gcc libc-dev", "39fb174542d161ccd80d5fe55fe7e115": "RUN GOOS=linux go build -a -o certificates main.go", "fdb7af77615d9b9c8d9a15ff784b6900": "COPY /src/certificates .", "0d852d326bfcdac8438a16aca61c0f15": "ENTRYPOINT [\"/app/certificates\"]", "2a489e5c3b3c8a1dde4c5d55366df2ca": "FROM golang: 1.8-alpine AS builder", "1fd9587a80d090c8430853e207cdbe38": "RUN apk add make", "cf08965ed049a6ce073a5170d7057316": "RUN apk add --no-cache git make gcc musl-dev", "491cf118babcacf261df0b3d12f5ebb7": "ENV REPOSITORY=\"github.com/future-architect/vuls\"", "0eb28fa0a3dd59c342229e5eb3e63f2f": "COPY . $GOPATH/src/$REPOSITORY", "46accd1ef49ca2dfd79df8b48f2580f3": "RUN cd $GOPATH/src/$REPOSITORY", "e57d1c9d5680a10d0b30dba1f782fdfa": "MAINTAINER hikachan sadayuki-matsuno", "57930c28f4f430692a3ba1057cee2bc1": "ENV LOGDIR=\"/var/log/vuls\"", "06b62f4e8a444b2da4c8ab0d08f55a22": "ENV WORKDIR=\"/vuls\"", "c8b1cc33ff2dff0cc02e13186904548f": "RUN apk add --no-cache openssh-client ca-certificates git", "c7e910f0d0bf26b455475664b518b8f4": "RUN mkdir -p $WORKDIR $LOGDIR", "d33b5b420be1d7a1d9b1de6766b70692": "COPY /go/bin/vuls /usr/local/bin/", "cdaecc385e18abd748b3f788f9cd800b": "VOLUME [\"$WORKDIR\", \"$LOGDIR\"]", "6420d5e1b50d3986eb992f411573c323": "WORKDIR $WORKDIR", "52daa078849c1f42a0a101b0c7e36169": "ENV PWD=\"$WORKDIR\"", "c005ba1ae279ea5fb3169a47f348d0e9": "ENTRYPOINT [\"vuls\"]", "9ca469b66a1eeb86c3e3b13884fe1426": "WORKDIR /data/projects/fatecloud", "bf2caa7eb7066d02a0607b247196bc27": "RUN go build -a -ldflags '-s' -installsuffix cgo -o kubefate kubefate.go", "5bffe4532dc04a657d55c192662ffd20": "COPY /data/projects/fatecloud/kubefate /data/projects/fatecloud/", "74733925e4dc8d47c573e76743bcde07": "COPY /data/projects/fatecloud/config.yaml /data/projects/fatecloud/", "cb00714658942c3c667e353ac132153f": "CMD [\"kubefate service\"]", "0d4ac946256f9878752b3f67cb800151": "ENTRYPOINT [\"/bin/bash\"]", "0c00ee4082c8f1993cb198ae7c41dc66": "FROM golang:1.14-alpine as build", "3a54b25daea9749607131bf8c58fd84a": "RUN apk add --update --no-cache build-base git", "f50cf4c75cd772e7d9833781ba1b7f7d": "RUN echo \"nobody:x:65534:65534:Nobody:/:\" > /etc_passwd", "fb91428c9bed7e04b6e27db0f023492b": "WORKDIR /go/src/kubernetes-route53-sync", "489841ed1fffff62b209999c56b9517f": "RUN CGO_ENABLED=0 go build -o /go/bin/kubernetes-route53-sync ./main.go", "cdae8508d43fa2c54cdfa6ea8123bfd6": "COPY /etc_passwd /etc/passwd", "2359e20818f01f9af14d805a4e1c412b": "COPY /go/bin/kubernetes-route53-sync /bin/", "25bf6f1cd57077c1df4adf99c5450a0f": "ENTRYPOINT [\"/bin/kubernetes-route53-sync\"]", "c0e88c959cd3a420b9d3bf879638cd2d": "FROM golang:1.9 AS builder", "9485adbb24166e95e247f8db2af96ba7": "WORKDIR /go/src/github.com/boivie/undergang", "6f5f87a235f7afb761894b8ce5ed0bd0": "COPY app /go/src/github.com/boivie/undergang/", "e601e644d975ba66cb84ed55fb7307c0": "COPY main.go /go/src/github.com/boivie/undergang/", "eb976975b42d10c7a3d9c2259e9e9890": "RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo .", "03e4e1b61fc2de393ef91320040c6554": "COPY /go/src/github.com/boivie/undergang/undergang .", "85a6714d3171f4ee21a4b54f9862e031": "CMD [\"/root/undergang\"]", "76fcff893136dc67b943a8142c854304": "RUN go build -o gosimac", "a2cea1bc7e85068ccdf337a2b54a2f49": "COPY /src/gosimac /app/", "e9db3eb834acb32cf193944e72c2feb2": "VOLUME [\"$HOME/Pictures/Bing\"]", "f6ff1b700e86a39a36241e7cf0b12dca": "ENTRYPOINT ./gosimac", "a3ef46662020eb9b4b1437e1933c0274": "RUN go build -o librebread", "b243d2e7b8f660030a775f9828d286d6": "FROM golang:1.11.3-alpine3.8 as builder", "3e91a5c6a38fd31f3f12f84acdcfcd8a": "RUN adduser -D -g '' appuser", "71aac635a66435c7af4d461ed9f107df": "WORKDIR /go/src/github.com/skabashnyuk/json-rpc-loader", "bc62bed6cd8b8ebc63a3bc045ddcb23e": "COPY . /go/src/github.com/skabashnyuk/json-rpc-loader", "86cc5d4946a2dfa16065af96da6953fa": "RUN CGO_ENABLED=0 GOOS=linux go build -a -ldflags '-w -s' -installsuffix cgo -o json-rpc-loader main.go", "8addc8ab3ab047f469e2e599328326ca": "USER appuser", "6dd4e4ee13c72d109a0dc6d21b4025a9": "COPY /go/src/github.com/skabashnyuk/json-rpc-loader /", "270326a0bbe4cab55ba11ac042d5d735": "ENTRYPOINT [\"/json-rpc-loader\"]", "688b1000a04aaa87f72b032c78d716cc": "FROM golang:1.12.6-alpine3.10 AS build", "1bee721ea6f040c6443eb45a7705c8b8": "ENV CHAIN_ID=\"irishub\"", "887d450b5e2ab4dbaa02814caa9c1c71": "ENV VERSION=\"v0.13.1\"", "529fbacbf9bd3c78295c41a89b4efc12": "ENV NETWORK=\"mainnet\"", "70b914dda9137bb1e96be1fa803ec67d": "WORKDIR /go/src/github.com/irisnet/", "f03b90cb0259b73bd1db8a2003e17637": "RUN git clone --recursive https://www.github.com/irisnet/irishub", "f2c72bc50c01292f7c478c7a6be9dcb2": "WORKDIR /go/src/github.com/irisnet/irishub", "a24e4942036075d7b7dfaf0744645148": "RUN git checkout $VERSION", "711d93fbc6c1606472de1688f46f5123": "ENV IRIS_HOME=\"/.iris\"", "9f0d82d50558fc8875cee86ee7859b05": "COPY /go/bin/iris /tmp/bin", "d19b70ded6f85a6712b6a183e65d0098": "COPY /go/bin/iriscli /tmp/bin", "c141e04ea7397a309fc4b1163f67b420": "RUN install -m 0755 -o root -g root -t /usr/local/bin `find . -maxdepth 1 -executable -type f`", "5ce9e2f6c26135e5349d4861941a11e1": "WORKDIR $IRIS_HOME", "44f62d9b567d60ac5fcc4434c5834f82": "RUN addgroup -g 1000 -S mintel", "5a9c6d90da0436aa0e84de1a3c2993d6": "RUN adduser -u 1000 -S mintel -G mintel", "71f000b221680b4afa55e827ecb7108d": "USER 1000:1000", "ce8ff2d41f00fe762581974c18de35aa": "ENV GO111MODULE=\"on\" CGO_ENABLED=\"0\" GOOS=\"linux\" GOARCH=\"amd64\"", "7fab4cae0af67b05ff4f465f7a73bbb8": "COPY /go/bin/myapp .", "bde07ddbc8fedf8279aa7eef030b58c7": "ENTRYPOINT [\"./myapp\"]", "7f80637dbe7f476af9af2fa470522b10": "RUN go install sigs.k8s.io/kustomize/kustomize/v3", "e95175a25a179e23598e39c740a65e89": "COPY go.mod go.sum config.yaml ./", "8bf3805bde6909dd6c12aaa9c96f8e43": "RUN cp /build/main .", "c235595cc970d2afd86b1e10674500ad": "COPY /dist/main /", "d35c75525759027c606654d1fbd7ecd4": "ENTRYPOINT [ \"/main\" ]", "39b4bad2dd734c825e8435382ca4169b": "FROM golang:1.13 as builder", "4dae113f5097ee9adc0f30a4f5294334": "RUN go build -v -installsuffix cgo -ldflags '-s -w' -o /app/jsonrpc-gateway cmd/gateway.go", "c51070efcda3e60c842eb4bff868e48f": "RUN mkdir /lib64", "95938cd99d5e711a58a3c6f01d870d29": "RUN ln -s /lib/libc.musl-x86_64.so.1 /lib64/ld-linux-x86-64.so.2", "af7a3bf469dff6a7f2265e493f29144c": "COPY /app/jsonrpc-gateway /app/", "f3ecc0864b8682c1e4603bcd8db5b53e": "COPY /app/config.json /app/", "32fb13b6f8254de11e5eb5049a0b1166": "RUN addgroup -S appuser", "88be53a2ec20a28b582dff1dbb31fe5c": "RUN adduser -S -G appuser appuser", "9221d3a2232bbefc677363d6f41e066d": "CMD [\"/app/jsonrpc-gateway\"]", "a7a305586c9c61a884d3a3eb49aa074a": "WORKDIR /go/src/github.com/waltzofpearls/rolli3.net", "9105a4fb9cd62e698e93925c0cd69bcc": "CMD [\"./rolli3.net\"]", "111ca6993e2c3d39c7f557666f5d51b3": "FROM golang:1.13.6-alpine3.10 AS apibuilder", "ffa66bb4976a07ca4438b03b131ef095": "FROM node:12.14.1-alpine AS frontendbuilder", "a6d3da70f80c7d80853192d84cbcbb80": "RUN apk add bash dumb-init ca-certificates", "f5222dbb16bcbed6e6e5f18ff256dd31": "COPY entrypoint.sh .", "a46bcd58b41e6ba5e5b842b9f61f4132": "CMD [\"/go/bin/entrypoint.sh\"]", "5491c1df034d2dece72976381b934fbf": "RUN CGO_ENABLED=0 GOOS=linux go build --ldflags \"-s -w\" -a -installsuffix cgo -o /go/bin/gl2j-gw .", "a7a4a4f3977816cb499e4824e0a640b4": "CMD [\"./gl2j-gw -c /etc/config.yml\"]", "619f2a5a8519e137cb6541898269fad5": "WORKDIR $GOPATH/src/github.com/kuzaxak/promalert", "fa02fdb143b6226136ea36cfd5039cff": "COPY Gopkg.toml Gopkg.lock ./", "0248d49770c8ff64b7b8e9e4a8a68b99": "RUN dep ensure --vendor-only -v", "18a30e7e1e2ac39e117749731dc39d27": "RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix nocgo -o /app .", "13577720ffed047b5b419d48e279cdfe": "COPY /app ./", "ef113d9fa5c2f2d107fa7747fe21f0c6": "COPY config.yaml ./", "0ee5b9f682b678af1b250f2ae4268e9a": "ENTRYPOINT [\"./app\"]", "8d01a75f339f48a8e0e45e0ad14730c2": "FROM golang:alpine as base", "5ad273336487e33d9710792a044a9821": "MAINTAINER Stefan Martinov <stefan.martinov@bestbytes.com>", "5974b1267a404237f1f9566dfe497d7c": "RUN apk add --no-cache git make bash upx", "8159102ec3ae3f67440e6ec85d24cb29": "FROM base as builder", "cd3dc835e03197d20d599b886490044a": "RUN go build -ldflags \"-X main.Version=`git rev-parse --short HEAD`\" -o /pagespeed_exporter pagespeed_exporter.go", "38c33dca218351d95e809588ecba5956": "RUN upx /pagespeed_exporter", "d6b5305290582935d6a23a3009c1e55c": "COPY /pagespeed_exporter /bin/", "5fdbe40b552bc268c305f7a020ce7661": "EXPOSE 9271", "3b62133ef7d777207b0b853688ea9b85": "ENTRYPOINT [ \"/bin/pagespeed_exporter\" ]", "97970e40ab13c58c27735499bbab709c": "FROM golang:1.16-alpine as builder", "f830e3cec48d4814e0c15fa1a113d439": "COPY mockery /usr/local/bin", "365c8980d72cbbd68caed4e3471b71b8": "ENV GOCACHE=\"/tmp/.cache\"", "55a9ae6d8191d74a0ad1fc075617d5db": "ENTRYPOINT [\"/usr/local/bin/mockery\"]", "e563583cf0994688a246c84bfcca96b9": "RUN apk apk -U upgrade", "e6a48a36d3c15c2552898e07d6fff76d": "WORKDIR /go/src/github.com/in4it/envoy-autocert", "42ddaba5946e8ebf0a0983945ecf233c": "COPY /go/src/github.com/in4it/envoy-autocert/envoy-control-plane .", "a161c9b3053ce5e7ffccaa27003ea41b": "ADD ./content /", "3ba7e3e8ad2773a4d7c98c878e260f7b": "COPY go.mod /src/", "d5c778bd7f355e13500e7dcde8d57508": "RUN CGO_ENABLED=0 GOOS=linux go build -a -o gochro -ldflags=\"-s -w\" -gcflags=\"all=-trimpath=/src\" -asmflags=\"all=-trimpath=/src\"", "c3d323f34d1146b77b329d52a86e4f2f": "RUN apk add --no-cache chromium", "9334a39cb2c6167ac7653df17722c957": "RUN rm -rf /var/cache/*", "634d840e5e4b8999d16df2d3d8b1d3e0": "RUN adduser -D chrome", "9db024c05f0a4f0bc0b298fa1511343a": "RUN chown -R chrome:chrome /app", "30019f7acde0c47b7aab104c4a151116": "USER chrome", "0f1fe87c6160f2675357e254b3da0aa2": "ENV CHROME_BIN=\"/usr/bin/chromium-browser\" CHROME_PATH=\"/usr/lib/chromium/\"", "92be6fccae8c5f3d03a5ef5d0aa33eff": "COPY /src/gochro .", "83636ad5523233e8291522b8d4ebd2bf": "ENTRYPOINT [ \"./gochro\" ]", "722667f6b35e4ddeb206917cf2fd9319": "RUN apk add git gcc", "0695534b08703f913a5701ee1285c6eb": "RUN GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go install -mod vendor -gcflags \"-N -l\" ./cmd/...", "7a69de10dc3f77c0b75c2ab7e375b475": "RUN touch /build/.env", "cdb871cb9ba76172e7cacdaaff952e93": "RUN apk add ca-certificates git", "28c70b12cbe1761cfcaef84dfb7bd9a4": "WORKDIR /usr/local/bin/", "61873d95ac97e7a30e6b039bf4bb9fd2": "ENTRYPOINT [\"flaredns\"]", "552c2a42048f3c40d96193cce18cfe4e": "FROM golang:1.11-alpine3.8", "cd0e923cf1198b0fee7b80161386e8f9": "RUN apk add curl bash jq git --no-cache", "769b9534fcf27623bd3607dbee8fc188": "COPY init.sh /go/src/akamai-ip-range/", "e067edf805063b9d5c3cc5a995032f4c": "CMD [\"/go/src/akamai-ip-range/init.sh\"]", "5c918bc5190d5f78874a436e1c82b79c": "FROM golang:1.11 as build", "7c5f32714366b0ab3859e7721e245ff1": "COPY . /go/src/github.com/m-lab/gcp-service-discovery", "d66808f4c77e0769af902deb58d3a0cf": "RUN go get -v github.com/m-lab/gcp-service-discovery/cmd/gcp_service_discovery", "2b6715d1cdf33c12d2a54de61cfcbc31": "COPY /go/bin/gcp_service_discovery /", "cfcaf5443bb31b24b675edf727dacbb6": "ENTRYPOINT [\"/gcp_service_discovery\"]", "ef2ff0feaa59a11a3dbd9cd9ae1cb44a": "WORKDIR /go/src/github.com/aloxc/gobanner/", "099c79ccd8ecdbb85b3aa92889d10c5a": "RUN mv /go/src/github.com/aloxc/gobanner/gobanner /root", "58946413267396210f458b664697a2b6": "RUN rm -rf /usr/local/go", "40df1858311d074fbf0d1857d8ce5926": "RUN apt-get remove -y g++ gcc libc6-dev make pkg-config", "1ba6aec02e884ab9f78280e074c5b847": "RUN /root/gobanner", "be11f46e045593276087e5f0fc11c8d2": "RUN apt-get -y install curl gnupg build-essential git less nano", "9998ad4ca0597dfaaeeadafa80bd7b91": "RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash", "06638d07d9ae40c6f196438ce49db69a": "RUN . /root/.nvm/nvm.sh", "09e95c977afcdb20375a2801f6756ab8": "RUN nvm install v13", "84b9eab6f7eaebaf177d28f5487142b4": "RUN npm i -g yarn firebase-tools", "423b1c8d1fde0be08c5d8e52215c48b5": "RUN go build -mod vendor -o main .", "edf0d7bd841d3ccf1cbde5fb1f1912f3": "COPY /app/main /app/", "d789cff0ad61b891acda2e9dc8fb9718": "RUN apt-get -y install lsb-release curl gnupg build-essential git apt-utils apt-transport-https", "dae30de98e1a4a7dba7445dad3f58b6f": "RUN export CLOUD_SDK_REPO=\"cloud-sdk-$(lsb_release -c -s)\"", "c38c745f37fbef44d2f1b79da96f716f": "RUN echo \"deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list", "68036fa262765223c6d294b7e586a58b": "RUN apt-get -y install google-cloud-sdk-app-engine-go google-cloud-sdk-datastore-emulator", "2587800b070c1826607950dd32e73dbf": "RUN npm -g i polymer-cli yarn", "30c06213c0103bfe0ee87110b7dd6b64": "FROM alpine:latest as nixbuilder", "17e8be4aee7bfdebb14673e4b86f5a21": "RUN echo http://dl-2.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories", "86002600f07f81f91fbf108643d4313c": "RUN apk --no-cache --no-progress add git openssh cmake doxygen git build-base boost-dev boost-static cppunit-dev hdf5-dev hdf5-static", "2b59cfff85bdcdfbf8283c478a6a1b67": "RUN git clone https://github.com/G-Node/nix /nix", "8ae1dbb8e26e6d30cd2b9e62844b7692": "WORKDIR /nix", "5c1aed7da354b3dea2cda4a24f5ec336": "RUN git checkout master", "4d3afc1916959f07fa3644131a2d5ffc": "RUN mkdir build", "e25c92a4b42a799f5b237eea21020b2e": "WORKDIR build", "06c1ec6031926ad6f112852d6d195a20": "RUN cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=Yes -DBUILD_STATIC=on ..", "1a6c96efb6022b5e37dd8b8ec1399fb1": "RUN apk --no-cache --no-progress add bash git nodejs npm openssh python3 py3-lxml", "e43fce2c771b939f725c3c76807f3c0f": "RUN pip3 install -U pip", "975cd7c36f32326f3f050ce01d722433": "RUN pip3 install odml", "3606bad6720d227ed44ec7b1056e60b4": "COPY ./scripts/odml-validate /bin", "49f8d4cc75ece128af8d77083cb003d8": "COPY /nix/build/nixio-tool /bin", "a9ca9df00038d61b75c282d3738ebf96": "RUN nixio-tool", "c2a73921146cfc21c92db75324051229": "ENTRYPOINT /ginvalid --config=/gin-valid/config/cfg.json", "f039827940d4147cfa41a516100aea7f": "FROM golang:1.12.3 AS BUILD", "b2419591b3d04ff9c1463efab46ead22": "RUN mkdir /dockerwall", "fc6a35e40e6402b7c5d8ded33b1963c3": "WORKDIR /dockerwall", "b6dda8ff10ac45dec0c7f7a477562f0c": "RUN go build -o /go/bin/dockerwall", "9609779e26134d46e9fa5a934b6b9efd": "FROM golang:1.12.3", "794d29da93e693c4bfa75eab7a614e6f": "RUN apt-get install -y iptables ipset dnsutils", "2b1a61328d58b88364d3469944316b3d": "ENV LOG_LEVEL=\"'info'\"", "ead41f9ed59583c71794140220ecc230": "COPY /go/bin/* /bin/", "bcc6f57f74c7b08226dc773eac60547d": "ADD startup.sh /", "c7298130e462c3d768caa6e9dd7f8fec": "ENV GATEWAY_NETWORKS=\"\"", "d375560f44860c213f1cffda89a502d8": "ENV DEFAULT_OUTBOUND=\"_dns_\"", "65cca4a158647059e9294f8eafa21328": "ENV DRY_RUN=\"false\"", "d59c8698abcbec5c66514c05508087ec": "VOLUME [ \"/var/run/docker.sock\" ]", "7a98936b78e78abc244e53102afbea76": "EXPOSE 50000", "9a53662eb1a3f25efdfdf824ae89aa54": "CMD [ \"/startup.sh\" ]", "63b0ec2b0c6cd1b9424a24237dc5d37f": "RUN mkdir /out", "dec53710c562632ac670726dc8eb0cb6": "WORKDIR /out", "aa46132cbce61c0333ec838ff22242e7": "RUN go get -v -d github.com/cbeneke/hcloud-fip-controller", "313e528941eef0ecdc1bfeeaf6303e38": "ADD . ${GOPATH}/src/github.com/cbeneke/hcloud-fip-controller", "939384a8b856e0b8682be61b06ac1cc4": "RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -ldflags '-extldflags \"-static\"' github.com/cbeneke/hcloud-fip-controller", "4e137fe4b6d9dde4e16e4b4f7d599d2e": "RUN adduser -S -D -H -h /app runuser", "9dfdd9ce1a20dce4e34a73b8d924aace": "USER runuser", "07dfb54899e0bfb8e36030fcadb324eb": "COPY /out/hcloud-fip-controller /app/fip-controller", "37c75b01c1fc9102d54246b11b8e8821": "ENTRYPOINT ./fip-controller", "9fd8b6a48d0db3a06202920588e13952": "ENV PKG_NAME=\"github.com/DeFacto-Team/Factom-Open-API\"", "67d3579dbb7d509589fae305929b1a35": "ENV PKG_PATH=\"$GOPATH/src/$PKG_NAME\"", "8a3e090bbcc79f4291ac336b9a0d35cd": "WORKDIR $PKG_PATH", "5f000b5eda95d470ca0a46dce13f833a": "COPY glide.yaml glide.lock $PKG_PATH/", "47d4fcb6591cbf038d6f6bb7ccf50dab": "COPY . $PKG_PATH/", "77f036ee29962ee502c7ea7ef648b83e": "RUN go build admin/user.go", "83d8a32ff040497812dfd43a4855ab84": "RUN mkdir -p /.factom-open-api", "b8b566f2a1f1d28da69144871138647d": "COPY config.yaml /.factom-open-api/", "0e5088cd2f50da45bf5e8e2fc8dd2e8c": "LABEL version=\"1.0.5\"", "a35c39a5fe4933c1b6d9ff14061f5784": "ADD . $GOPATH/src/github.com/aiotrc/gm", "a1e8cd86b139fcfd70acf1ee85127afa": "RUN cd $GOPATH/src/github.com/aiotrc/gm/", "be5a314725d3a74f6863b13e14e07d87": "RUN go build -v -o /gm", "fa29d887f3ae02baa8a63277dcad4d6d": "COPY /gm /app/", "0c099e7c9a7bfce9cea08313a07a00f1": "ENTRYPOINT [\"./gm\"]", "5af8b02542b07818fd13746e11a36b7f": "FROM --platform=$BUILDPLATFORM golang:1.19 as builder", "cdbf983d75aacbce0b5c947093eb04bc": "ARG BUILDPLATFORM=\"\"", "f363df720514c8726417cea1a02481e8": "RUN GOOS=linux GOARCH=$TARGETARCH make build/scorecard-test-kuttl", "1f6ae3edf540e027599cf8eaf0e809bc": "FROM kudobuilder/kuttl:v0.15.0", "5f79c0f189f8cecd9d8b478f8633a182": "ENV HOME=\"/opt/scorecard-test-kuttl\" USER_NAME=\"scorecard-test-kuttl\" USER_UID=\"1001\" KUBECONFIG=\"\"", "2a2e9063f8906e515aee0ea8936ed59b": "RUN echo \"${USER_NAME}:x:${USER_UID}:0:${USER_NAME} user:${HOME}:/sbin/nologin\" >> /etc/passwd", "0e130508439ba7a1a2a41f3ed01508fb": "WORKDIR ${HOME}", "481509c31ec8223e5a346d7fdcd0f631": "RUN chmod g+w \"${HOME}\"", "3d707f5566698149565b4b630e743915": "COPY /workspace/build/scorecard-test-kuttl /usr/local/bin/", "0267bf564d6a8f93616a90791859cfd7": "COPY /workspace/images/scorecard-test-kuttl/entrypoint /usr/local/bin/", "b260b7ab68af2758c696f841020bb82c": "ENTRYPOINT [\"/usr/local/bin/entrypoint\"]", "14ee353e102380969ea558439faed779": "RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -o crashplan-ffs-puller .", "63bd9900a3ed092aef6df29938b4584e": "WORKDIR /usr/local/crashplan-ffs-puller", "a1e45b187e8a32cf4a94bf7440f91140": "COPY /app/crashplan-ffs-puller .", "c3047f637dd3f12b70625c6e4a1429ca": "CMD [\"/usr/local/crashplan-ffs-puller/crashplan-ffs-puller\"]", "c8c9da36b4286e93654e56bf990c00c7": "FROM golang:1.12.6 AS build", "cb8c9efb1566b958bf043af466d61116": "ENV GOSS2=\"github.com/zhoubowen-sky/go-shadowsocks2\"", "96a7eb5cea5942f7492a434ad1a3ef14": "ENV KCPTUN_URL=\"https://github.com/xtaci/kcptun/releases/download/v20190611/kcptun-linux-amd64-20190611.tar.gz\"", "23796d9311d66b754e2887a19ccece35": "ENV BROOK_URL=\"https://github.com/txthinking/brook/releases/download/v20190601/brook\"", "c9e49ec8b1a1be4af88e059d6ae56f7d": "RUN go get -d -v ${GOSS2}", "b564379e5599fa6c83e6554382ef1982": "RUN go install -ldflags '-w -s' -tags netgo -v ${GOSS2}", "5ae4e882d9f6ad1b4755d27343a4291f": "FROM alpine:3.10.0", "d400c6e93b66c756df4c372fabb4d5a0": "ARG TZ='Asia/Shanghai'", "f3dd75841ec92b7d96ef6c6853b07596": "ENV TZ=\"${TZ}\"", "ec5934e815896dd90aefe2bede65ec08": "RUN ln -sf /usr/share/zoneinfo/${TZ} /etc/localtime", "43b3a698999e15c9f5b45a161bb138b8": "RUN apk add monit openrc python", "f4fa243a001d4b68ea1cfd3e9673b9b1": "RUN mkdir /usr/local/sbin", "1c273d8d5559d0f7f257c1396f88b133": "COPY /go/bin/go-shadowsocks2 /usr/local/sbin/", "92774751ef01f19ef61218b51c1afd2e": "RUN cp -rf script/shadowsocks2Console /usr/local/sbin/", "e6d0a4dd21a800db53256eb62a57df11": "RUN chmod a+x /usr/local/sbin/kcptunConsole /usr/local/sbin/shadowsocks2Console /usr/local/sbin/shadowsocksRConsole", "de35b3b16a16c80e61ee245ed24a57e3": "EXPOSE 5300", "5d5fd06e4230b15da552c3fee56e1db7": "FROM golang:1.13.4", "41a2227baca78582bde53ff81c7d0695": "LABEL maintainer yydfjt <yydfjt@hotmail.com>", "7c878659ccfe5c83855d27b81d10dcb9": "RUN apt-get install -y -f vim apt-utils git build-essential flex bison libgmp-dev libssl-dev cmake net-tools", "51948189abed52f9d5f5dc1f3e250e11": "RUN echo \"install mcl\"", "6f427a0a2871e2f5fd1f901e99e01307": "RUN mkdir -p $GOPATH/src/mcl", "d82183dc921fd43cc6f1d624b4b8f5df": "RUN cd $GOPATH/src/mcl", "dbd34375b7bb0c21404dccff1f3b00d9": "RUN git clone https://github.com/herumi/mcl.git", "e481d169e10dd04c16b7da17ff4faf6a": "RUN cd mcl", "cd49c4097194f79f977c58858eb706e7": "RUN cmake ..", "d3b20c2d84de0ebd51b7ee708ecb2743": "RUN make -j 8", "31671b39dcab27f411e21a52b85cc9d5": "RUN ldconfig", "1d2bc58af3e5808de8d118a4b933784d": "RUN echo \"install golangci-lint\"", "d2a21a6545e5e1ee911f6b1dffc86b31": "RUN curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v1.17.1", "bc718d5d46fc0ea74c785908466a9211": "FROM golang:1.13-alpine AS dev", "c841299529f8218dae8d45381b7a73a2": "COPY scripts/setup.sh /", "7cad335a1fedeaa17f555ad719bb35f1": "RUN /setup.sh", "c1a0b8a82e64cabeb4f2aff6999ff25b": "RUN rm setup.sh", "02862bd0ec683716798c8e4aed7eed14": "COPY .bashrc /root/", "bace7552fc15175c678af011bd1084ce": "FROM dev as repository", "fa13e87913583310ff5839caf0fa477d": "WORKDIR /go/src/kurl", "e8aec01de6d7c6066caf50d8812068ae": "COPY src src", "a699d371153f30ce106d317eb5dfdd13": "FROM repository as build", "5626a6c5e89eb8778119f952a9382acd": "RUN scripts/build.sh --release 2>&1", "7d447d05084f1804f34d6f1978afc143": "FROM alpine:latest AS deploy", "67ff0caa608594e448ecbfaafd4a3b64": "COPY /usr/local/bin/kurl /usr/local/bin/", "c9deac5215ce3867544f39257aecdc16": "ARG AUTHOR=\"\"", "0fa19fe344b6f222ddf210c154d608ac": "ARG BRANCH=\"\"", "9c3eeed9c0cf14a534418de63436c086": "ARG COMMIT=\"\"", "11fb85f050c163a6d7ffb9b211e07ff9": "LABEL Author=$AUTHOR Branch=$BRANCH Commit=$COMMIT", "fa54a467e05705f45f242bce8fb7a0eb": "FROM repository as build-dbg", "208d77da054f01724bba471903e42ce7": "RUN scripts/build.sh --debug 2>&1", "20324131e7d6340f606cf8774b0b5482": "FROM alpine:latest AS deploy-dbg", "868b207382846a336a9e07e2330bee63": "FROM golang:1.20.5", "b09bd04b1de98b0cd8579bd586972f75": "LABEL maintainer=\"Beata Skiba <bskiba@google.com>\"", "50f3ddcb0033fd360e6f8a3a258c8659": "ENV GOPATH=\"/gopath/\"", "29c8b2815e7b2db6b1869a97aaede338": "ENV PATH=\"$GOPATH/bin:$PATH\"", "eca1e4aa5cd1a701b8ca80b94bc022b1": "ARG GOARCH=\"\"", "846043c4b1bb1895a9f4c55185949e8f": "ARG LDFLAGS=\"\"", "495eea53e3036203ed26a8d678656250": "RUN go install github.com/tools/godep@latest", "c6c5787975b5db03df76089c9ff40218": "RUN godep version", "ea1907ca8358fb0a3a49d12a3864f620": "CMD [\"/bin/bash\"]", "5113fbd846718252459527d45dab6cb3": "FROM golang:1.13-buster as builder", "dc3cafdeea0254993580b5473e83b8e1": "COPY /work/bin/metal-cloud-controller-manager .", "1d21b47bf5025ecb684ea7fe7e689058": "ENTRYPOINT ./cgw", "e4fb4218741a615edeed137cb0a99a83": "ENV TERM=\"xterm\"", "8373f7c1254873e6c470e8d410efbbc9": "RUN apt-get install -y alien libaio1 postfix mailutils", "36186d17d57fb0b57d6c9aa037132e83": "COPY ./oracle_client /oracle-client", "36baa025cb6e3fbf795224522c4cdbdd": "RUN alien -i /oracle-client/oracle-instantclient12.2-basic-12.2.0.1.0-1.x86_64.rpm", "8057654dd34201b879d7c73d3220075a": "RUN alien -i /oracle-client/oracle-instantclient12.2-sqlplus-12.2.0.1.0-1.x86_64.rpm", "361f857f276c995865e4cc113de468bc": "RUN alien -i /oracle-client/oracle-instantclient12.2-devel-12.2.0.1.0-1.x86_64.rpm", "9dab3c829c2aae966b8b598bbc569988": "ENV LD_LIBRARY_PATH=\"/usr/lib/oracle/12.2/client64/lib/\"", "a4fd78dc11b9661b21d2a3c666df9d4c": "ENV PKG_CONFIG_PATH=\"/oracle-client/\"", "39aa8434fdf14e3af805db6f8a89e596": "RUN rm -r -f /oracle-client/oracle-instantclient12.2-basic-12.2.0.1.0-1.x86_64.rpm", "f1f8b313a85f6e08069e369783a4adc5": "RUN rm -r -f /oracle-client/oracle-instantclient12.2-sqlplus-12.2.0.1.0-1.x86_64.rpm", "544394c87745b4c548279ea6dfc6fa07": "RUN rm -r -f /oracle-client/oracle-instantclient12.2-devel-12.2.0.1.0-1.x86_64.rpm", "93e0ef55cb37c3f0e51580fa44e8cff1": "COPY ./postfix_main.cf /etc/postfix/main.cf", "77817addad80e1219db1d36967f241f8": "ENV REPOSITORY=\"github.com/kotakanbe/go-cve-dictionary\"", "416d7aba88605611e7c2fd053a44970c": "COPY /go/bin/go-cve-dictionary /usr/local/bin/", "8944a3388e4dc12cef59c537d55eeeb7": "ENTRYPOINT [\"go-cve-dictionary\"]", "60a014259ec137769710ce27c5775f17": "CMD /go/bin/clawiod -conf /go/src/github.com/clawio/clawiod/clawiod.conf", "b615efc75f4dfa8fa366195b33f2b4f0": "RUN go build -mod vendor ./...", "454ae0b6e6dd6cf8057cb9140a55e2ee": "COPY /nautilus/cmd/svc_id/svc_id /bin/", "1bb7f0df7aa87fab0c3f341a7d505d5d": "FROM golang:1.10 AS BUILD", "bd74612be3192b3cc77007f5fc2c7903": "ADD /main.go $GOPATH/src/dockerwall/", "bdecd7a67e42627b4d17402320460b55": "RUN go get -v dockerwall", "d9c13f67bdaca14cd652010bb9e917d2": "ADD dockerwall $GOPATH/src/", "66fd4f8a566eb4ca51863592006d64cc": "FROM docker:18.09", "a7d1d010d42e6c9edf26b1b54be08fc1": "CMD [\"./talltale\", \"--world\", \"looking-glass\"]", "2ce8eba926136d4dd811495b47880d81": "WORKDIR /go/src/groupbdbot", "b6db6f71adb0730c7afcc6efefcea6ce": "CMD [\"./groupbdbot\"]", "4e1c9b2deb4dc69c44ee29b9f2bbe03c": "RUN go test -v ./chaoskube ./util", "83c620c08452f94258ba71f6a14a0263": "RUN go install -v -ldflags \"-w -s\"", "fe5ba99228ffe187a74e6d5b3fb57768": "COPY /go/bin/chaoskube /go/bin/", "57dbe6fe9d9397adf9662374644d374f": "ENTRYPOINT [\"/go/bin/chaoskube\"]", "ee92f8d8de28efd83ef84b659edfee35": "ENV ACME_AGREE=\"true\"", "adbcdcf6b4c14ce2c789d3cef96b8b96": "ENV ENABLE_TELEMETRY=\"false\"", "bcc64b632a8f953eccad90c40a8fe34d": "CMD [\"--conf\", \"/caddy/Caddyfile\", \"--log\", \"stdout\", \"--agree=$ACME_AGREE\", \"--email=$APPLICANT_EMAIL\"]", "a4acb82832a312172a5631db821401c1": "ADD . /go/src/zeit/brcep", "253bb324735e137e24cda9d87ced8400": "RUN go install zeit/brcep", "8b03acd6a6b6d2b294819746d8499190": "FROM golang:alpine3.6 AS binary", "cabfd1011d015a21249acf5865c58beb": "RUN go get \"github.com/Tomasen/realip\"", "81c5a239551d397d16446bc233df86ea": "RUN go build -o http", "642e97cc48218b485d7e988e05a141d1": "ENV PORT=\"8000\"", "61ecac147e46981d970e1f5c6c99a939": "COPY /app/http /app", "75b6a7990c087913b365dd1dd4fc7ea9": "CMD [\"/app/http\"]", "6bb2fa3e69053d7121fa2cd1d637cc45": "COPY models ./", "63b630dacb675d9257a7a8bad6d46bcf": "COPY tcig.io ./", "4176993ee49eaef38cdb4cffc83f594e": "RUN sed -i -- \"s/__VERSION__/${BUILD_VERSION}/\" tcig.io/version/version.go", "5259fe50394fdcd888d365b76cb3f541": "RUN sed -i -- \"s/__DATE__/$(date)/\" tcig.io/version/version.go", "65becffd05a9af245f0aacf4f7290a35": "FROM golang:1.10-alpine AS build_env", "b163f42ef9927f3c24e4ac692a8f2229": "RUN go get -t .", "aa0cd174b9431505e6c2c59d1e14cf4b": "RUN apk add ca-certificates bash", "6ac9a222c58d56356c16a806fdbcad9d": "COPY /go/src/github.com/ah8ad3/gateway/dist/gateway .", "e7421660c57386d034d30394820970e7": "COPY /go/src/github.com/ah8ad3/gateway/entrypoint.sh .", "a84acb881f5c14d23020a4792958e745": "COPY /go/src/github.com/ah8ad3/gateway/services.json .", "8077570d0227a4f44f2f38f68180635a": "COPY /go/src/github.com/ah8ad3/gateway/integrates.json .", "f809fd314f6ef4321069776f037bb04a": "FROM golang:1.12.9-alpine AS build", "51bc0cabd2d822f00ed874af147ed0da": "COPY . /go/src/wonderapp", "931c5d8c73fdf5b199a11eb7d7ee236c": "RUN go install wonderapp", "a422032b2b4ac798abfd40375fa276cb": "COPY /go/bin/wonderapp /", "8b9f5aed358304098a63029fda60619b": "ENTRYPOINT [ \"/wonderapp\" ]", "b6efdf3d333a461e2ed8ffb8c39b8b9b": "ENTRYPOINT [\"gggtracker\"]", "c17e8d9f76dd8de5dcc212e3e7c98cde": "LABEL maintainer=\"Rajeev Singh <rajeevhub@gmail.com>\"", "334f1a8321511db0db5abe5bce8a637c": "COPY /go/src/User-Management .", "351371b86ebbd0c4df959821e62648cf": "EXPOSE 5003", "545f098c931c865ffb8ede93904dd81b": "CMD [\"./User-Management\"]", "c018639586902e63af709f6737df182b": "ADD . /go/src/github.com/m-lab/reboot-service", "12108cb7d0a44d635413d61287b270d5": "WORKDIR /go/src/github.com/m-lab/reboot-service", "48486216af2f031c6aa9a8b980d8d68e": "RUN go get -v -ldflags \"-X github.com/m-lab/go/prometheusx.GitShortCommit=$(git log -1 --format=%h)\" github.com/m-lab/reboot-service", "e74243ee5b77602bbe932f843a4d1bec": "COPY /go/bin/reboot-service /", "9df007b0295fead93ea4eab7d297ae9d": "ENTRYPOINT [\"/reboot-service\"]", "005cb5015e02f81898f9e00debdcd93f": "RUN apk add -U ca-certificates curl git gcc musl-dev", "472a386444aaf903037a3462e862e0bd": "RUN mkdir -p $GOPATH/src/github.com/bgpat/godoc-walker", "ec7eb9b9b728c2bdbb93aaaf9a31dbec": "WORKDIR $GOPATH/src/github.com/bgpat/godoc-walker", "47fd7a70d9d5d49e33d25b1cedc03840": "RUN dep ensure -vendor-only -v", "2d6a398c9e879778ebeeb67ca463452b": "RUN CGO_ENABLED=0 go build -ldflags=\"-s -w -extldflags '-static'\" -o /godoc-walker", "8ba3d4745771e13f3490b6b31e42cb0a": "RUN apk add -U --no-cache ca-certificates curl git", "aee09aba13dd01c3bdb0ee42138edbb4": "COPY /godoc-walker /", "5202def0074a47d1cb7acfadae785916": "ENTRYPOINT [\"/godoc-walker\"]", "dfb9df7919cde3f5a25a3d829a474867": "RUN go get -u github.com/mitchellh/gox github.com/stretchr/testify/... github.com/kardianos/govendor github.com/kisielk/errcheck github.com/golang/lint/golint github.com/go-swagger/go-swagger/cmd/swagger github.com/jteeuwen/go-bindata/... github.com/elazarl/go-bindata-assetfs/... golang.org/x/tools/cmd/goimports github.com/gogo/protobuf/protoc-gen-gogo", "283c659d1390a62eff4833dec684b362": "RUN export PATH=$PATH:$GOPATH/bin", "fb5816cce1595aaa26526d4c61392b3c": "RUN apt-get install unzip -y", "e799d499dce9228cb3dbb57f0fcf2de4": "RUN wget https://github.com/google/protobuf/releases/download/v3.1.0/protoc-3.1.0-linux-x86_64.zip", "7306bfe3a9788cd38abfbce2373ea6e8": "RUN unzip protoc-3.1.0-linux-x86_64.zip", "1ec6900d90de5ee7d9d5be4cbd858f48": "RUN export PATH=$PATH:$(pwd)/bin", "d0689225123aae400e149dd6e4ba110b": "COPY *.sh /root/", "162283333cd9729ce4c28faf74b9695a": "RUN go get -v github.com/golang/protobuf/proto", "9e12afbd8379d42c4cbd337e75975e83": "RUN go get -v github.com/golang/protobuf/protoc-gen-go", "82ade90c0698be79b8f4bff4292713f3": "RUN go get -v github.com/micro/protoc-gen-micro", "43b2d999ca54d00d00e0a1138c90b3c9": "RUN go get -v github.com/micro/go-micro", "e9d9f4cd3018f5d1284de9ec3f1d098c": "RUN go get -v github.com/go-bindata/go-bindata/...", "8c4cb6560e448ebcaefa42deba02eef6": "ADD server/rca.crt /go/", "a92af7019261348d2a53e890a372e7ef": "ADD server/rca.key /go/", "281123f2f0bec58e83845cb5c91af8a9": "EXPOSE 6050", "379bc62714944217a29b763c7f539cff": "RUN go build -o ./bin/admin ./cmd/admin", "ea28738b11c0838bb75404048e501563": "FROM alpine:3.9 as globber", "de5f82fdee404c966bb28bce3b6e2a3c": "COPY /src/bin/admin /bin/", "450795f08270bba234e51462b073c91e": "RUN apk add postgresql", "803edd877180f42eec97f8f352573e27": "ENTRYPOINT [ \"pgsql-backup-s3\" ]", "2d130b3bcb889cbfe5e79bab736def3a": "WORKDIR /go/src/go-snmp-grpc", "24871bbbf3edd642c729e0a6273da2ce": "RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o /server", "34c2921e5f8c5e870ab3e4c3c8af6726": "LABEL maintainer=\"binary4bytes@gmail.com\"", "95e3ba503ed305745145e2ad04ae8f12": "LABEL author=\"thebinary\"", "68444e8ed9d3dfc8dff4f8a8a3897580": "COPY /server /", "1292eee11b30c69fec3e547a1c420fbb": "ENTRYPOINT [\"/server\"]", "e89476964b91250867369926b623e400": "RUN apk add --update git python3 python3-dev py3-pip build-base zip nodejs", "b004d3e5af5167e23113bb4a6c66ff5e": "RUN cd /bin", "7da3269eaa6d6ec27cfc212b212fb1fd": "RUN wget https://releases.hashicorp.com/terraform/0.12.12/terraform_0.12.12_linux_amd64.zip", "0af7727c91e5ec686e10bf94f209dc9a": "RUN unzip terraform_0.12.12_linux_amd64.zip", "0bce1ba92817d7e562274ff003e6a853": "RUN rm terraform_0.12.12_linux_amd64.zip", "a70c650b782212bbd6aad8fc79b5170d": "RUN git clone --depth=1 https://github.com/go-task/task /tmp/task", "1dd20c5923da3c73b837a37e4ddf88c7": "RUN cd /tmp/task/cmd/task", "6fe20a1382839568cd62aeeca6096c04": "RUN rm -rf /tmp/task", "a399627299717e3bf67d76279761d7e0": "RUN git clone --depth=1 https://github.com/wata727/tflint /tmp/tflint", "03a8b13f25b1560b74f2367c49092538": "RUN cd /tmp/tflint", "e4a1e7c69481c8839cb83ef52e18f175": "RUN rm -rf /tmp/tflint", "17fd13e3c57786bfc1eef51411f4f4ea": "FROM golang:1.14 AS build-env", "9e5be4c7a8444aa27a3ffc86d40f853e": "RUN GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o /go/bin/app", "e674a4829f2b5568c7535ac2a8c0690f": "FROM alpine:3.11 AS runtime-env", "9d22a05d3af192f7392b6375e3413401": "COPY /go/bin/app /usr/local/bin/", "584e30aeb47db0f2991f2c4399916c76": "ENV PKGVER=\"1.1.0\"", "3ab70bced3ee62a25316e60076ced12c": "FROM golang:1.16", "4c2d468d00487282b6f477af0acd5683": "RUN go env -w GOPROXY=https://goproxy.io,https://goproxy.cn", "fb79b7033f7aeb202537d84620f2cc07": "RUN go env -w GO111MODULE=\"on\"", "9e2d9418ed1f52116e94f8f25fedb097": "WORKDIR /tools", "d7207f3f0ca05d33045776d4fc890f7b": "RUN go get github.com/cosmtrek/air", "841587dbce4293bcbcd306678a9ebbfb": "WORKDIR /backend", "81757189d7ef9cfc6d91180edf9d8df2": "RUN rm -rf /tools", "583bf71ef55df4213d9f4d3c7e545080": "RUN chmod 777 /tmp", "8ef224a40f5fa31499b6d309d4d5e7fc": "RUN apt-get install -y curl git net-tools iputils-ping ntp ntpdate nginx wget dumb-init cloc", "fe73de33f0b9217d74ab079837841a66": "RUN apt-get install -y python3 python3-pip", "d42f5a7ce933e91bafc00513643a7eb4": "RUN ln -s /usr/bin/pip3 /usr/local/bin/pip", "470877b5d126362f00c134829390175c": "RUN ln -s /usr/bin/python3 /usr/local/bin/python", "3e8b90e91964ad013746824395a807b8": "RUN curl -OL https://storage.googleapis.com/golang/go1.16.7.linux-amd64.tar.gz", "e9f10f876bcea0e4d5e397c2b0374e6d": "RUN tar -C /usr/local -xvf go1.16.7.linux-amd64.tar.gz", "3889973436aec415e19a0cf011a596b5": "RUN ln -s /usr/local/go/bin/go /usr/local/bin/go", "a8296ca6b0741965c2a7d145e48b816e": "RUN rm go1.16.7.linux-amd64.tar.gz", "a254e5610d8e816a2c4d8aba2ce02a25": "RUN wget https://github.com/chrislusf/seaweedfs/releases/download/2.76/linux_amd64.tar.gz", "7c73e8a325c37f48ed49b681fe53f4fa": "RUN tar -zxf linux_amd64.tar.gz", "f9624d0f952b823049e732984db76ca7": "RUN cp weed /usr/local/bin", "fb9dc5aff565f0ad56255713355c6a41": "RUN rm linux_amd64.tar.gz", "f59df1335691d0d4bf94859c9f7c16c1": "RUN pip install scrapy pymongo bs4 requests -i https://mirrors.aliyun.com/pypi/simple", "20e1a7ecfbaa0daaf93b6d33660bb5d9": "RUN pip install crawlab-sdk==0.6.b20211024-1207", "cd9848732428819cc378755e5392da7b": "VOLUME /backend", "3fa48399d2caddaf4b983a4624841556": "RUN rm -rf /var/cache/apk", "e67a373f6bef2485e936b9830abcd27a": "RUN mkdir -p /var/cache/apk", "7b5f19e382b0018d19311f4989f3c083": "ARG GOLANG=\"1.11.5\"", "64a89ca767bab97e250ff58b557aac86": "FROM golang:${GOLANG} as builder", "9e3abaab92144b9838876a400713ecbc": "ARG PRISM_VERSION=\"dev\"", "3719c59df2a8e98fa211dbfa7dbc2f8f": "ARG LIBVIPS_VERSION=\"8.7.4\"", "31e55f62e7c4470c713c96d98b6c1c3a": "ARG GOLANG=\"\"", "569f843f13c1e9c3731912958d2d1a3f": "RUN DEBIAN_FRONTEND=noninteractive apt-get update", "46af3253fb0c4000dccd014c34e77b79": "RUN apt-get install --no-install-recommends -y ca-certificates automake build-essential curl gobject-introspection gtk-doc-tools libglib2.0-dev libjpeg62-turbo-dev libpng-dev libwebp-dev libtiff5-dev libgif-dev libexif-dev libxml2-dev libpoppler-glib-dev swig libmagickwand-dev libpango1.0-dev libmatio-dev libopenslide-dev libcfitsio-dev libgsf-1-dev fftw3-dev liborc-0.4-dev librsvg2-dev", "c1122ea0ac2957bd05ca05a69dcc89fa": "RUN curl -fsSLO https://github.com/libvips/libvips/releases/download/v${LIBVIPS_VERSION}/vips-${LIBVIPS_VERSION}.tar.gz", "43b714040dfc7f437906e1466c3c72cd": "RUN tar zvxf vips-${LIBVIPS_VERSION}.tar.gz", "d756c214f1dc5cc4758afe2874b52cd9": "RUN cd /tmp/vips-${LIBVIPS_VERSION}", "bdfb6ad1d418c3c59bcf415dcce0c94d": "RUN CFLAGS=\"-g -O3\" CXXFLAGS=\"-D_GLIBCXX_USE_CXX11_ABI=0 -g -O3\" ./configure --disable-debug --disable-dependency-tracking --disable-introspection --disable-static --enable-gtk-doc-html=no --enable-gtk-doc=no --enable-pyvips8=no", "16acfe10cb825415a444d3fd1ef731bd": "RUN curl -fsSL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b \"${GOPATH}/bin\" v1.16.0", "15e94f186769f05560b4c75c709b7fb3": "WORKDIR ${GOPATH}/src/github.com/sherifabdlnaby/prism/", "604f576afdec35a248f5dc38ca2c2b23": "WORKDIR ${GOPATH}/src/github.com/sherifabdlnaby/prism/cmd/", "d984977d8f176ff95c844b8b5c92cdf4": "RUN go build -a -o ${GOPATH}/bin/prism -ldflags=\"-s -w -h -X main.Version=${PRISM_VERSION}\"", "4e071fd51d5907a90424d784f65c288b": "FROM debian:stretch-slim", "950ac63ad3f5f70cc01d86c404610590": "ARG PRISM_VERSION=\"\"", "f96b3f58dc7e2dd26a56af9e5cc1dbb7": "LABEL maintainer=\"sherifabdlnaby@gmail.com\" org.label-schema.description=\"Image Processing Engine\" org.label-schema.schema-version=\"1.0\" org.label-schema.url=\"https://github.com/sherifabdlnaby/prism\" org.label-schema.vcs-url=\"https://github.com/sherifabdlnaby/prism\" org.label-schema.version=\"${PRISM_VERSION}\"", "3837960d938f166ad37f616d07555fbc": "COPY /usr/local/lib /usr/local/", "abd24cd0bf91c9533ed385047d7fec88": "COPY /go/bin/prism /usr/local/bin/", "397c805a2fb73fd7f9372b89a6a418ec": "RUN apt-get install --no-install-recommends -y libglib2.0-0 libjpeg62-turbo libpng16-16 libopenexr22 libwebp6 libwebpmux2 libtiff5 libgif7 libexif12 libxml2 libpoppler-glib8 libmagickwand-6.q16-3 libpango1.0-0 libmatio4 libopenslide0 libgsf-1-114 fftw3 liborc-0.4 librsvg2-2 libcfitsio5", "7c9dbf13c51f5483dc2c43dcb588748c": "RUN apt-get autoremove -y", "d8fd0eef73de62ccf21852e0d168f98f": "RUN apt-get autoclean", "a6ff2f773b7f9475cd98ee6dbdcb7fd5": "ENTRYPOINT [\"/usr/local/bin/prism\"]", "d1696ce2f0b1c4e84bcc02e47c8e94f4": "RUN go install github.com/sigmonsays/webchat/...", "04c696bdc0996d5815fddfb34ba4089c": "ENTRYPOINT [ \"/webchat\" ]", "91fa310798a11962b4b4b07e4bb5236c": "CMD [ \"-h\" ]", "a47e0e4642aab8b148cc386795c5af1b": "FROM golang:1 as builder", "26e9ee1f203f01accbfa18080ed260fa": "COPY . /go/src/github.com/blacktop/ipsw", "32ac75d14e847efc36f2946d4509534e": "WORKDIR /go/src/github.com/blacktop/ipsw", "2d6f173f1881a33d91c195d71865fc40": "RUN apt-get install -y cmake", "ccc02d4117c3ce88ce466e329e3da2a3": "RUN echo \"===> Installing lzfse...\"", "7e620b80c82ff2f6a173de45c165b142": "RUN git clone https://github.com/lzfse/lzfse.git", "2e5f8f4da50f88146b8bc981fc2b0691": "RUN cd lzfse", "f87322166b4364770f1e66255252911d": "ENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/usr/local/lib\"", "405f62ccddb2fa6647e62e583b5a6b27": "RUN CGO_ENABLED=1 go build -o /bin/ipsw -a -tags netgo -ldflags '-s -w -extldflags \"-static\"' -ldflags \"-X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppVersion=$(cat VERSION)\" -ldflags \"-X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppBuildTime=$(date -u +%Y%m%d)\" ./cmd/ipsw", "2e412eef178e62a25bfa5d9bf663ab6e": "FROM ubuntu:19.04", "97057ff7ea50b86436282973a05f8a9f": "RUN buildDeps='libfuse3-dev bzip2 libbz2-dev libz-dev cmake build-essential git libattr1-dev'", "067858909e9022786d9adcff9a86c38c": "RUN apt-get install -y $buildDeps fuse3 unzip", "af16573895e287175ea11333e95c2deb": "RUN echo \"===> Installing apfs-fuse...\"", "4be5efad0a9b2aa20726f0d2c10eac46": "RUN git clone https://github.com/sgan81/apfs-fuse.git", "b1666bcd2010ce97dab0857a6212d393": "RUN cd apfs-fuse", "add906d799dd5d7cddd0440c2004801b": "RUN git submodule init", "1697a229ddff271de9f9e6d0b01b995f": "RUN git submodule update", "5f77e83a53288082e01b44583602b85c": "COPY /bin/ipsw /bin/", "ff44d51bfa2ff2b1acb51e3d2960429c": "ENTRYPOINT [ \"/bin/ipsw\" ]", "b61408b3aa938ff26ac07c5131002aea": "CMD [ \"--help\" ]", "c09da4359ddf8cb9367f124bcf07d5c3": "ADD . /hugo", "a774ec17b89c77bcca23781204e27255": "WORKDIR /hugo", "1c0ae2f36dea74b6671ac79bedaa2001": "RUN wget https://github.com/gohugoio/hugo/releases/download/v0.55.6/hugo_0.55.6_Linux-64bit.tar.gz", "09ab63d0275aa02d181e262abb5e3095": "RUN tar -zxf hugo_0.55.6_Linux-64bit.tar.gz", "b49bd7299a3797fa8f9a06cbba55f8d6": "RUN chmod a+x hugo", "7533dfdc2e4dcb874b2bca01204edfe6": "RUN mkdir /blog", "37b2fad5bb10be8a916824d44ec93b0b": "RUN ./hugo -d /blog", "7cef290c04e6cc3bc6d208ddeec3127d": "FROM nginx:alpine", "ec71f0b621299705c8b53be189180616": "COPY /blog /usr/share/nginx/html", "dc8fa4f7fc419538b9b817a9671361dd": "WORKDIR /go/src/github.com/otz1/otz", "adcfb4ca83e2a127b74c3627131ad89a": "CMD [\"otz\"]", "91fc46390a152646f9b784bbbd072ddd": "FROM golang:1.11-alpine AS builder", "5b788aa7006b16989142b5e1a2f387d9": "ADD . /go/src/github.com/yuya-takeyama/circleci-queue-to-datadog", "cb79d3eac7886120b9a0a5711ae2ef91": "WORKDIR /go/src/github.com/yuya-takeyama/circleci-queue-to-datadog", "4d6d24abc575f77742face8932d1e6ce": "RUN apk --update add git curl perl", "bc0a2ef19131187a78b89e3ac0de8723": "RUN curl --fail https://raw.githubusercontent.com/golang/dep/master/install.sh | sh", "35bec42ba64729b4035ca4be9d824ae3": "RUN COMMIT_HASH=`git describe --always | perl -pe chomp`", "74ec6eb5227197c491f57c6da5cbc500": "RUN go build -ldflags \"-X main.gitCommit=${COMMIT_HASH}\"", "06a45a31a83bdd0ec52584c436e3f887": "COPY /go/src/github.com/yuya-takeyama/circleci-queue-to-datadog/circleci-queue-to-datadog /", "2feac11d70e2d83a7a4a5e076eea0089": "ENTRYPOINT [\"/circleci-queue-to-datadog\"]", "fcd54035e6bcd12a5b98257cb67b9b9a": "LABEL maintainer=wata727", "ffaf30e48ed4b8718fa45c00df6776ac": "RUN mkdir -p \"$GOPATH/src/github.com/lnsp/k8s-crash-informer\"", "d52141ac48d03ba9e46f9835f44af7e7": "ADD . \"$GOPATH/src/github.com/lnsp/k8s-crash-informer\"", "0289720b0a19f98b7a756fc99b7e754b": "RUN cd \"$GOPATH/src/github.com/lnsp/k8s-crash-informer\"", "d92d4bb018fdd0677d11f74dcabdef30": "RUN go build -a --installsuffix cgo --ldflags=\"-s\" -o /informer", "846aedf899e304b4284cda3d0cb268a1": "COPY /informer /bin/", "e56476cd6a5de66b8a425c8704b5289e": "RUN apk add --no-cache curl jq git build-base", "29b439bc58624fa66b1c56a6d6de7d37": "RUN cd /opt", "6c380a803efccbadfdea2fbd358f1e93": "LABEL maintainer=\"Elf Gzp <gzp@741424975@gmail.com> (https://elfgzp.cn)\"", "5fe23b90a0a452e52e685a4ecb332668": "COPY /opt/gortal ./", "e2cd9aa010a3552fa48f0621ba928d90": "RUN chmod +x /gortal", "5e8bdd4f62bd635a09eefb02b0b3c41d": "RUN mkdir -p /root/.ssh", "f51f922aae6b39bab4e94d1b22fda8ce": "EXPOSE 2222", "24038065da62d5c98273a92f2bb7279b": "VOLUME [ \"/root\", \"/root/.ssh\"]", "7beeaee11b6454a352cc5b9650435556": "CMD [\"/gortal\"]", "02ffb7869af4f8958b905d76d2164290": "COPY . /rest-and-go", "922dfe0967cd026eee893d55605dd91a": "WORKDIR /rest-and-go", "0eb191eb3552a4606e7363cae46f3292": "ENTRYPOINT go run main.go", "cf354a999a2ab1650df6088890110c7d": "RUN go get github.com/porjo/braid", "bb1220ac62a3433617d3a7414c226e51": "RUN apk --update add --no-cache ca-certificates curl python", "2f872fd7d1961887c291452771e2cd9e": "RUN curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl", "c3c95220b6b9667aae15b67c9c189855": "RUN chmod a+rx /usr/local/bin/youtube-dl", "a29eb2bc687a4a0a90108e254ee06974": "ENTRYPOINT [\"/app/ytdl-web/ytdl-web\", \"-cmd\", \"/usr/local/bin/youtube-dl\"]", "cf815735024c7a17b0cfb48ceb927001": "FROM golang:1.13.8-alpine3.11 AS builder", "abfb704e69bb183fdc86fa01d5b0df2b": "RUN go test -v models_test.go", "a4ac2c7f1a105dc1bc64296679fc3d89": "RUN go test -v check/check_test.go", "a7e17c4f72663cdaf057f3ef59385610": "RUN go test -v in/in_test.go", "526ec9a8961a6e382ea65ac1eaebb054": "RUN go test -v out/out_test.go", "3f936549c6080f0141a29ebf91be60b1": "RUN echo \"TESTS COMPLETE\"", "91d99b753f8af781b2dd40ca091b3459": "RUN go build -v -o outputs/check check/check.go", "ce183a61269f0f5c1c349fff67cfc31e": "RUN go build -v -o outputs/in in/in.go", "bd84cdcdc06aeb207e4e4a993b189072": "RUN go build -v -o outputs/out out/out.go", "001da652896b05f76122397402b2cf6f": "RUN apk add --update bash ca-certificates", "92925a83612b76e0c4f30c53a06c3329": "RUN CGO_ENABLED=0 go get -v github.com/m-lab/gcp-service-discovery/cmd/gcp_service_discovery", "39acd00d345ba53c3d507ad755d78fb0": "RUN apk add --update bind-tools git", "54f978775e900129fb0e85094f13af76": "RUN chmod +x /etc/dnscrypt-proxy/start.sh", "e19602986d131191dd5e2c98c4cca4c6": "HEALTHCHECK CMD dig -x 1.1.1.1 || exit 1", "05de4682dc2168b63409f699ab7398e3": "COPY . /go/src/gcp_service_discovery", "9ca57148857ac09b96fd8ae6520f9808": "RUN go get -v gcp_service_discovery", "4303e46c852277ec42418ec1b35f2182": "ENTRYPOINT [\"/go/bin/gcp_service_discovery\"]", "1e3c96b195b51403580c658e718c37eb": "ENV MEDIASUMMON_DIR=\"/mediasummon\"", "b024a2629a0c1753b7ca07fa568d17d8": "VOLUME ${MEDIASUMMON_DIR}", "6de8f87014949005d19febab2b0297e8": "ENV DEFAULT_TARGET=\"file:///${MEDIASUMMON_DIR}\"", "e563e8106b1b87edab5543d3f841f105": "WORKDIR /usr/src/mediasummon", "a661612c90af4cb9d6275568c5213430": "ADD . /usr/src/mediasummon", "9eba258d00baf445d11b93274681d1f1": "RUN go build -o /usr/bin/mediasummon", "7f7960494eb2ce801e40ceb77e7d5308": "WORKDIR /etc/mediasummon", "6af09cce273bb86ec18c7aff5ea501ae": "RUN cp -R /usr/src/mediasummon/admin /etc/mediasummon/", "4daa8be2fd03e44afebecee118ead745": "ENTRYPOINT [\"/usr/bin/mediasummon\"]", "e75a36cabbe9c166c53a7a012dc4e52e": "WORKDIR /go/src/github.com/vspaceone/SpaceAPI-Server", "1914a479cbd7a23ee95fff52da7fd6e8": "ENTRYPOINT [\"SpaceAPI-Server\", \"serve\"]", "545006fe1f7b8d666abdcb1ba849bfde": "RUN apk --no-cache add gcc libc-dev git", "e78ace31bd7674d6ed579942fe053c3d": "ENV DEVELOPMENT=\"true\"", "508cc9b9ee89a92bb04c6a159e4d0b9a": "FROM scratch AS final", "b141db56757e87a1f6338d29c46a5314": "COPY /bin/start.sh /bin", "98c70a3681b0975544b4935fdfd45af1": "COPY /bin/app /bin", "2d1def6e9e5b5150f06f305fd5e6cac7": "RUN apk add --update git python3 python3-dev py3-pip build-base", "4e6113b39ff89435ff15656698f4164b": "RUN wget https://releases.hashicorp.com/terraform/0.12.8/terraform_0.12.8_linux_amd64.zip", "3b62a20d7fc98b751ce4da23cfeabbdb": "RUN unzip terraform_0.12.8_linux_amd64.zip", "5dc1a73e6ccd260845f4de73f045e673": "RUN rm terraform_0.12.8_linux_amd64.zip", "49902fe706bbeff95c80c32bb0d9f0e1": "FROM golang:1.10.3 as builder", "ac7aed48fda6285faecca9c2145d68ab": "WORKDIR /go/src/github.com/chickenzord/kube-rule", "97600315844a2a68b62bcb01db73ae8d": "COPY pkg/", "95e0a319dc136554a6926ed24e48b4de": "COPY cmd/", "9c333e4e5d0214cadc8737b5aa2d3021": "RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -o manager github.com/chickenzord/kube-rule/cmd/manager", "5ca61b73a9fc826cbe1c12c66c744672": "COPY /go/src/github.com/chickenzord/kube-rule/manager .", "388e512f8d82372cf9b7a67e94d673d4": "WORKDIR /go/src/docker-trigger", "e4b6cd62a47145956524334f742fca70": "COPY main.go /go/src/docker-trigger", "53e6350b2e7a898889a6439e5d08fb9e": "RUN cd /go/src/docker-trigger", "4806f8bd10151ce122cefac443234cfd": "RUN GOOS=linux GOARCH=amd64 go build -o goecho", "e27d53f985d508c0b09ce82dfb400a5c": "ENTRYPOINT [\"/go/src/docker-trigger/goecho\"]", "5d954e6572094f012d87af65c6ef0f95": "RUN apk add --no-cache make curl git gcc musl-dev linux-headers", "f922fa0a4a3a50a4fb7f434ff2d41f71": "WORKDIR /go/src/github.com/linkbutlerservices/pandascore-adapter", "58a26cfb2b166da15ae3d804b6d3aa53": "COPY /go/src/github.com/linkbutlerservices/pandascore-adapter/pandascore-adapter /usr/local/bin/", "1fff620dc6b404a89fb956c55265128f": "ENTRYPOINT [\"pandascore-adapter\"]", "d26597667e2fb6cde5052c93c7f73e19": "RUN wget -O - -q https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | ash -s v1.12.5", "735c864293c7ce6f442a9f50d554d15b": "RUN apk add --no-cache make git protobuf", "2ae9a241a9a02705cb9f3670527ca264": "RUN chmod 777 /.cache", "cd8e7128fc9df7858f4c7d901fb5df6e": "ADD ./users.json /", "ef21869b1c1c52da45146cdfb600183f": "RUN go get github.com/zchrykng/gocaster/cmd/caster", "2c26bb70a84af968ff0401f9f483d68e": "RUN go install github.com/zchrykng/gocaster/cmd/caster", "7030be9b84208ba402d99da6fe4c809a": "LABEL Description=\"Remove a reference between obsolete Docker images and their blobs for later removing by garbage collector\"", "1953217a1637712b88740620ce99ff95": "ENV GO_DOMAIN=\"github.com\" GO_GROUP=\"otaviof\" GO_PROJECT=\"shorty\"", "635d6e7b538ece68b870f02156b20dbc": "RUN apk --update add gcc git make musl-dev", "e0ea3e7ad1ec47828a81493170751675": "ENV APP_DIR=\"${GOPATH}/src/${GO_DOMAIN}/${GO_GROUP}/${GO_PROJECT}\" USER_UID=\"1111\" SHORTY_DATA=\"/var/lib/shorty\" SHORTY_DATABASE_FILE=\"/var/lib/shorty/shorty.sqlite\" SHORTY_ADDRESS=\"0.0.0.0:8000\"", "3176fa8756983ae2b32905422ca384f0": "RUN adduser -h ${SHORTY_DATA} -D -u ${USER_UID} ${GO_PROJECT}", "d309d5117c567c4ac0781c9967f156e9": "VOLUME ${SHORTY_DATA}", "dbd580b5def548a8b42cae9ffae7510e": "WORKDIR ${SHORTY_DATA}}", "91c149467a725898d5738ac79009fd23": "ENTRYPOINT [ \"/usr/local/bin/shorty\" ]", "5e925f8bf9a2d915e372d3cefb058cda": "FROM golang:1.8.0", "8392f85fb325f4c4f9f2d4f059d6b7bf": "MAINTAINER Mark Lussier <mlussier@gmail.com>", "491acc3463671cd29e94138ee827232c": "ENV NODE_VERSION=\"7.6.0\"", "aee9e1a3932fa7b080fe9cb48c043d6b": "ENV GLIDE_VERSION=\"v0.12.3\"", "01a6151345c5c17540cfdbb22d137ba8": "ENV GLIDE_DOWNLOAD_URL=\"https://github.com/Masterminds/glide/releases/download/$GLIDE_VERSION/glide-$GLIDE_VERSION-linux-amd64.tar.gz\"", "e046db366fe069be6b9e49b546ef9f2d": "ENV GLIDE_DOWNLOAD_SHA256=\"0e2be5e863464610ebc420443ccfab15cdfdf1c4ab63b5eb25d1216900a75109\"", "f6bbf2945a1e9d835f25aac1d62ee95f": "ENV PATH=\"$PATH:/usr/local/glide/linux-amd64\"", "ab1235abe6b22bedeb1ddaeacc4f60bc": "RUN for key in 9554F04D7259F04124DE6B476D5A82AC7E37093B 94AE36675C464D64BAFA68DD7434390BDBE9B9C5 0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93 FD3A5288F042B6850C66B31F09FE44734EB7990E 71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 DD8F2338BAE7501E3DD5AC78C273792F7D83545D B9AE9905FFD7803F25714661B63B535A4C206CA9 C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 ; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; done", "28abc3c304c41d8cbcca7c6038bb4227": "RUN curl -fsSL \"$GLIDE_DOWNLOAD_URL\" -o glide.tar.gz", "75291d7c6a79e67d856d1e7d851504d0": "RUN echo \"$GLIDE_DOWNLOAD_SHA256 glide.tar.gz\" | sha256sum -c -", "e3f3d1024d194ca79544a1d4a3979623": "RUN mkdir -p /usr/local/glide", "f2e947c885875fd8d554c548fb602eb5": "RUN tar -C /usr/local/glide -xzf glide.tar.gz", "56d6d963318bd85ef43d3a82dda218ed": "RUN rm glide.tar.gz", "885b0d4f4f6c4b629cadb4d77f43d8a3": "RUN go get -u github.com/Masterminds/glide-report", "4a9857935a2ace95a397cf6431139d47": "RUN go get -u github.com/sgotti/glide-vc", "32dff1d08292c6ca9bb4a5b9db4e2d72": "RUN go get -u github.com/ngdinhtoan/glide-cleanup", "8cd1e10d1877f538f4f26ec14fd5df0e": "WORKDIR ${GOPATH}/src/github.com/sherifabdlnaby/prism/cmd/prism", "0f8ca307906d76051c5eec336441e289": "RUN CGO_ENABLED=0 GOOS=linux go build -ldflags '-w -extldflags \"-static\"' -tags cb-spider -o cb-spider -v", "95ae2954b0c08e6420932fa2eaec6665": "COPY /go/src/github.com/cloud-barista/cb-spider/cloud-driver-libs/* /app/cloud-driver-libs/", "8e368bf6dbf64fab8e300a017a5ec48a": "COPY /go/src/github.com/cloud-barista/cb-spider/conf/* /app/conf/", "cee406b522c6251bd0c1869becc5aa3a": "COPY /go/src/github.com/cloud-barista/cb-spider/api-runtime/rest-runtime/cb-spider /app/api-runtime/rest-runtime/", "9cc97e6aa292ff7db7d7941ce4ee9d87": "ENV CBSPIDER_ROOT=\"/app\"", "5543c8efd480631e50f51cfab439680b": "ENV CBSTORE_ROOT=\"/app\"", "e8045cfc870283f12ac9e3d48fe9fe01": "ENV CBLOG_ROOT=\"/app\"", "d08fa8acdd35484f72c31cf2035edf43": "ENTRYPOINT [ \"/app/api-runtime/rest-runtime/cb-spider\" ]", "fa76be7dde02f7832fd016ba4bbe52fe": "RUN adduser -S -D -H -h /app appuser", "200ef3774b11410703c91cc600fec6e5": "EXPOSE 8088", "93a34a38415fe991503d3ccb6bb0a18d": "FROM golang:1.12.5-alpine3.9 as builder", "c36a4388053b41c5a6541a728b0d9b13": "COPY vendor vendor", "bb0fe0c65b447ab039959b7df1482f88": "COPY Gopkg.lock .", "540a30fa65a6510093b4cd84508a1c46": "FROM golang:1.8-alpine3.6 AS development", "451962ed55bfff07dce5e1d7a25cf474": "ENV PROJECT_PATH=\"/go/src/github.com/brocaar/lora-app-server\"", "62ac8bab6dced3b4dc4642ac3eb2dd02": "RUN apk add --no-cache ca-certificates make git bash protobuf alpine-sdk nodejs-current nodejs-current-npm", "05ec61e4b95b80afe183c3adb5e06a73": "RUN mkdir -p /etc/lora-app-server/certs", "9f3ffeaf0ad8e831d7aeec57d4cea538": "RUN openssl req -x509 -newkey rsa:4096 -keyout /etc/lora-app-server/certs/http-key.pem -out /etc/lora-app-server/certs/http.pem -days 365 -nodes -batch -subj \"/CN=localhost\"", "4f28cdf23394d143f11b4d0351cfd9c3": "RUN make requirements ui-requirements", "27244b9159dd1e4c80e69ca8de7502cd": "COPY /go/src/github.com/brocaar/lora-app-server/build/lora-app-server .", "b27abb4a299f55b1d00ee2ac939fe5b1": "COPY /etc/lora-app-server/certs/http-key.pem /etc/lora-app-server/certs/", "785d794e472d93ff7638c36b180b35c8": "COPY /etc/lora-app-server/certs/http.pem /etc/lora-app-server/certs/", "c6ac03312aae36049d0e2b6ffe3b4688": "ENTRYPOINT [\"./lora-app-server\"]", "b870a9afb5d6f8d3a6e6687c02acc30a": "FROM golang:1.13-alpine as apibuilder", "6d617d415c346b00da87c9a678f9a22e": "RUN apk add --update curl git upx curl unzip autoconf automake libtool make g++ file", "c44752a28c862e7b53a8051dfa7fd263": "RUN GOPATH=/workspace/go go get -d -u github.com/golang/protobuf/protoc-gen-go", "d0051c73d7741f283bdfec0d827813a1": "RUN GOPATH=/workspace/go go install github.com/golang/protobuf/protoc-gen-go", "8d00ff15bc224ac617f3def46aec6868": "COPY .git .git/", "20e1aac62c7f5ca0f0a83d93379e1d52": "RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO111MODULE=on go build -a -o app -ldflags \"-X 'main.CompileDate=`date -u`' -X 'main.GitCommit=`git rev-list -1 HEAD`'\" cmd/main.go", "6cbf96f2e99c0a58e5165bbabeb1f1c9": "RUN upx app", "016f23743a594127f99e9021fda8b318": "FROM node as uibuilder", "f5f2dded1e760d97e679482a3cdf238c": "COPY ui/package.json /workspace/ui/", "799ebb2ff87466950fca296dfc5c3eb5": "COPY ui/package-lock.json /workspace/ui/", "ea85e92dbbc7337221d53aca95c41363": "COPY ui/ /workspace/ui", "0ea5177643ab8c784be95e477576f700": "RUN apk add --update protobuf protobuf-dev", "9c98be25ee0e83ebf0906497bfffa3b6": "RUN adduser -u 1000 -h /opt/proto-registry -s /bin/false -D protoregistry", "a25df8131f652fa34737cac411fa5c5c": "USER protoregistry", "8682604204fb3f1c405330bb4cd0640f": "WORKDIR /opt/proto-registry", "bad49437e8b70b0186df81c4a34122c2": "RUN mkdir /opt/proto-registry/data", "9999332355fc6d04c14ddec2b651e215": "COPY /workspace/app /opt/proto-registry/", "c93103568c39bbf83e11eb9613cff9c0": "COPY /workspace/go/bin/protoc-gen-go /opt/proto-registry/bin/", "2177028efadd2c46719d75f72b651d2d": "COPY /workspace/ui/build /opt/proto-registry/static", "cc6bac8ce8ca5488613705cc6e06c869": "CMD [\"/opt/proto-registry/app\"]", "37d2a8653389bea0fb0bef12de543708": "MAINTAINER xtaci <daniel820313@gmail.com>", "a2fca70df31817f26b7ee254c3039924": "RUN go get -ldflags \"-X main.VERSION=$(date -u +%Y%m%d) -s -w\" github.com/xtaci/kcptun/client", "a89b68da572c2f4b5ec4455d93b38219": "RUN go get -ldflags \"-X main.VERSION=$(date -u +%Y%m%d) -s -w\" github.com/xtaci/kcptun/server", "cab92d43b07189cd055588cee178f27d": "COPY /go/bin /", "fd5b7888e0db0c2076e223dbb5382335": "EXPOSE 29900/udp", "aaf6db3afa8e8a341bc9939c037b3e9f": "EXPOSE 12948", "2801232ed7b110bc0c05df66e6c94614": "FROM golang:1.11.2-alpine", "297c34990f0cec0409aed168164ac6fc": "MAINTAINER backflow <hunan.me@gmail.com>", "231250e98ad6217fb4521c84e24aa6aa": "RUN chmod +x /*.sh", "30bdf2b38ff565a2c5e1d64fe9706ff2": "RUN apk add --no-cache curl xz tar", "78600b4e8b1a4a3b9b33769ac9e663fb": "RUN curl -skLO https://github.com/upx/upx/releases/download/v3.96/upx-3.96-amd64_linux.tar.xz", "8017ff5d7c1a29e74960aacf0ae18024": "RUN tar -xf upx-3.96-amd64_linux.tar.xz", "ac238a834c846d307f55416e82b514f3": "RUN cp upx-3.96-amd64_linux/upx /usr/local/bin/", "df4abdbbf245975da7dea39329f76978": "RUN rm -rf upx-3.96*", "9d3240f1bc2267658537c0515812973c": "RUN go build get-ssl.go", "0fa0c4234f68b72f61b2b956feb7f336": "RUN upx get-ssl", "8ae00700ca56ace5d8adc618c37662c7": "RUN mv get-ssl /go/bin/get-ssl", "df2d8aa860dc18444d32bf00469aa37e": "RUN apk add --no-cache --virtual .build-deps git mercurial", "038f82824ef7cdeb87af55ffe0d61c7c": "RUN go get github.com/andreimarcu/linx-server", "7dbf72ab2ead6f8ad311ce9067ddae4d": "VOLUME [\"/data/files\", \"/data/meta\"]", "fd9304e30039f49c76b96babdff2bb28": "ENTRYPOINT [\"/go/bin/linx-server\", \"-bind=0.0.0.0:8080\", \"-filespath=/data/files/\", \"-metapath=/data/meta/\"]", "b7d482ffa7026299f4e336d3ab9d42f4": "CMD [\"-sitename=linx\", \"-allowhotlink\"]", "a2568fafea4e4a15f053ea07cbc83fed": "FROM golang:1.12-alpine as gotty-build", "4ead16669ef4f667a0d25a8f5a9f6cf6": "RUN mkdir -p /tmp/gotty", "b35b921a85c856539bb3e5a8d31a8704": "RUN export GOPATH=/tmp/gotty", "1e965c6cfbc2bd09c9ef41817dda3247": "RUN go get -d github.com/webkubectl/gotty", "99c06779107711542a661a40b5e8b649": "RUN cd $GOPATH/src/github.com/webkubectl/gotty", "fc062cfbb6e1f20a853ebb4c4a95dab7": "RUN make asset", "de701143883ff24950c5231faf559f5d": "RUN cp gotty /", "0c8f07f5fd4767f11cc987cd3713ff5e": "RUN ls /gotty", "105a95fe5d4c39606da35aaf83d2d39b": "FROM ubuntu:18.04", "b4035c50e16951eddf493da525cf6573": "USER root", "19d39d083fab4948dfa658fdcdb9fcc5": "ARG ARCH=amd64", "85558eea553a1e90b62829edfec96de6": "RUN rm -f /bin/sh", "65510249e0c64001cf517af7c6dff4f8": "ENV KUBECTL_VERSION=\"v1.16.1\"", "6030ff5538d7cae4c177241d9d18c74d": "COPY /gotty /usr/bin/", "6d928f4e55e08dec4637b224d668d737": "RUN apt-get install -y --no-install-recommends curl ca-certificates jq iproute2 vim-tiny less bash-completion unzip sysstat acl", "96891727c9a9676066575c7ce4615f18": "RUN curl -sLf https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/${ARCH}/kubectl > /usr/bin/kubectl", "b884be94b9097511663c377975bb93be": "RUN chmod +x /usr/bin/gotty", "b22de6405f828be18bae5e0653bb5e9a": "RUN DEBIAN_FRONTEND=noninteractive apt-get autoremove -y", "f3dcab2ac219eb2cf68da6542f55a402": "RUN DEBIAN_FRONTEND=noninteractive apt-get clean", "8792149c0564632ff47a9b6641a352a2": "COPY start-webkubectl.sh /", "11706b69c2da15d0aca224a6db08f824": "RUN chmod +x /start-webkubectl.sh", "10ee59694f4e3cd14d0b60cdcbb6bc34": "COPY start-session.sh /", "ea3835d3f8bf497e89e490978e6d5c26": "RUN chmod +x /start-session.sh", "b10bcdb1cb939c093a906d0bd6c4e2ca": "COPY init-kubectl.sh /", "d3cc64285dc597ff4f83e4ac67dfc071": "RUN chmod +x /init-kubectl.sh", "6377222da1b55e7934b066d635682e48": "CMD [\"sh\",\"/start-webkubectl.sh\"]", "7be869a62ef50c2882008fb9926c2a24": "ENV PORT=\"30000\"", "ef8155bc8400659afaa1b6f366ab3e80": "FROM ubuntu", "5e1fd0bb0b6c97024f12354181bb5810": "COPY /app/GETDataConvertService .", "58c9b2c1d97b18c164ea195828ff176e": "CMD [\"./GETDataConvertService\"]", "077296e9f9cfc491062769276b463e20": "MAINTAINER Jian-Long Huang", "760f343dbfc05176c48bd04fc70eb90e": "RUN mkdir /web", "80578f943603b5ffcb7ffa6c0c58b958": "COPY ./web /", "3f366291e655e20ef946c7aaaf5990f1": "WORKDIR /web", "9175ba49f1bd34793c4c0d4f1223fd68": "RUN go get github.com/gin-gonic/gin github.com/gorilla/feeds", "77302e8799e84d64c9e05ee28a4dcec1": "CMD go run main.go", "d0c856e626bf4274dace11a1b8d41d66": "ARG ALPINE_VERSION=\"3.10\"", "75471f4f99de02908275f00569347fe5": "ARG CFSSL_VERSION=\"v1.4.1\"", "d98ebe805c704b5a4e100f2a03c2097e": "RUN apk add --no-cache gcc git make musl-dev", "c5425332aa654ad140fc5f418a3bf17d": "RUN git clone https://github.com/cloudflare/cfssl.git", "f8184be268d127c5a08255fa865827e0": "RUN cd cfssl", "4e556fde64b82fe991d694b28855d83b": "RUN git checkout ${CFSSL_VERSION}", "8541b880bd12aa2839a76973e4b08d5b": "FROM alpine:${ALPINE_VERSION}", "731fd669996e42b91a3c4fe4c9cfc191": "ARG KUBECTL_VERSION=\"v1.15.6\"", "269804755056520f58a430c4b17f056a": "LABEL org.label-schema.build-date=\"${BUILD_DATE}\" org.label-schema.description=\"Alpine Linux image with kubectl and cfssl.\" org.label-schema.docker.cmd=\"docker run -it --rm cjmach/kubessl\" org.label-schema.name=\"cjmach/kubessl\" org.label-schema.schema-version=\"1.0\" org.label-schema.url=\"https://github.com/cjmach/kubessl\" org.label-schema.vcs-ref=\"${SOURCE_COMMIT}\" org.label-schema.vcs-url=\"https://github.com/cjmach/kubessl\" org.label-schema.vendor=\"cjmach\" org.label-schema.version=\"${SOURCE_BRANCH}\"", "356716731ba7f97ab21882dd1307fc9c": "COPY /go/cfssl/bin /usr/local/", "221aba424bfaa39279141ea98d4f2612": "COPY scripts/* /usr/local/bin/", "b39dd2cb36819f582558a3fc7964358d": "RUN chmod +x /usr/local/bin/gen*", "0cb3278517474871dac4234c77a3c36a": "RUN rm -rfv /var/cache/apk", "fcffa4c6b435f95ef1b3be4d18f2cc27": "RUN curl -L https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl", "f94ffc71973fb75d949a8f10b97823cf": "RUN chmod +x /usr/local/bin/kubectl", "88fd9b497ff5cc53c95b0a23b5f5b86e": "WORKDIR /mnt", "a4f5428449d0de157e5a9ca38502cfb3": "ARG BUILD_VERSION=\"latest\"", "7479f7efd3e97908afa9506344f85a88": "LABEL org.label-schema.build-date=\"${BUILD_DATE}\" org.label-schema.description=\"Alpine Linux image with kubectl and cfssl.\" org.label-schema.docker.cmd=\"docker run -it --rm cjmach/kubessl\" org.label-schema.name=\"cjmach/kubessl\" org.label-schema.schema-version=\"1.0\" org.label-schema.url=\"https://github.com/cjmach/kubessl\" org.label-schema.vcs-ref=\"${VCS_REF}\" org.label-schema.vcs-url=\"https://github.com/cjmach/kubessl\" org.label-schema.vendor=\"cjmach\" org.label-schema.version=\"${BUILD_VERSION}\"", "b1cba397d169e1b7ff77114268d772e4": "RUN groupadd docker", "e9ae64fd7dd4b89d264428022bb79779": "RUN usermod -aG docker jenkins", "3b0118d5f3dcc6f35946a2205a7fbebb": "RUN apk add --no-cache make git gcc protobuf musl-dev docker", "ef4f39d1c5bb6adc2dc3ace3495659f4": "RUN go get -v github.com/micro/micro", "1a44b113d30c7dda573f9754395683da": "RUN mkdir -p /go/pkg/mod/cache", "c484b8f8feb43d7c3284475d38c56880": "RUN chmod -R 777 /go/pkg/mod/cache", "e1d15573f87cbcbeb5af7f789ac26f18": "RUN mkdir /home/jenkins/.cache", "e5cabeac7711b346387ceba37b46251c": "RUN chmod -R 777 /home/jenkins/.cache $GOPATH", "1ec6835532507e7d2e18a3157aca966b": "WORKDIR /go/src/github.com/sstarcher/helm-exporter", "8d162ec071b161bb08caa984848e8060": "COPY . /go/src/github.com/sstarcher/helm-exporter", "1fe0779ff0648149a1eb8a8154ac9199": "RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o /go/bin/helm-exporter /go/src/github.com/sstarcher/helm-exporter/main.go", "52c25db372320ed9cb255a848f051764": "RUN addgroup -S helm-exporter", "d865e81b7ad1ba4f1fc3f785c32bf885": "RUN adduser -S -G helm-exporter helm-exporter", "a20f6c17f6fe7c6c225319a335d540e4": "USER helm-exporter", "57ba632edd8b39537e4db9f7208dbffd": "COPY /go/bin/helm-exporter /usr/local/bin/", "aadef4ce3f4b00c444771283b3e30bc6": "ENTRYPOINT [\"helm-exporter\"]", "1d2e555d00d99201281cbb60d4cc424c": "RUN cd /app", "a3b140a8bbccf6a53b5a8e2e7faaf12f": "VOLUME [ \"/root/.ssh\" ]", "4a956ff32fc87b1b97634cf4241ccd0f": "CMD [\"./gortal\"]", "4ff15fbfb7a0efd07e9ae04730cab1f0": "WORKDIR /go/src/github.com/nkex606/docker-trigger/", "3754ac2a0190a87a2f25b7e7758b06bc": "RUN go get -d -v -t ./...", "0dfe89e75f22f87dae6f5af660fd5c78": "RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64", "1be8036bfff8a8e5249d2485be8cc82f": "RUN go build -a -installsuffix cgo -o goecho .", "683fdf73b6424204207017da14f08b9c": "COPY /go/src/github.com/nkex606/docker-trigger/goecho .", "0a7757528b23b7f55775c2e5c3d0c25f": "CMD [\"./goecho\"]", "918f5340418d728723dc9373c1ce599f": "RUN apk --no-cache add --update gnupg build-base libgmpxx gmp-dev libevent libevent-dev openssl openssl-dev xz-libs xz-dev zstd zstd-dev", "d12cffa1dc987b20dc93e2d1bc54510e": "RUN apk --no-cache add --update pwgen", "abd3ecc4afbcbd14cc7be049f07c2295": "FROM golang:1.10.4-stretch as builder", "56749ae48d3d9bc4560e382ae321d1b7": "CMD [\"cd\", \"/go/src/app/src\", \"&&\", \"go\", \"run\", \"main.go\"]", "2b48424b124eb977dc5e8eb558eb56e5": "ENV APP_DIR=\"${GOPATH}/src/${GO_DOMAIN}/${GO_GROUP}/${GO_PROJECT}\" USER_UID=\"1111\" GIN_MODE=\"release\" SHORTY_DATA=\"/var/lib/shorty\" SHORTY_DATABASE_FILE=\"/var/lib/shorty/shorty.sqlite\" SHORTY_ADDRESS=\"0.0.0.0:8000\"", "ef7d99e61a66bf5bd3b2bc411985b927": "FROM golang:1.8-alpine3.6", "e7fa490d79930ee40c7c2df772a1fc9a": "ADD . /build", "1819541566e59d25d2b76bb66e7fc136": "RUN apk add --no-cache git make bash curl", "4d57ff0a8afa8c043dd28fd083419681": "ENTRYPOINT [\"/bin/buildpkg\"]", "102f0a7e67eef5b999ef4ec7bb17b484": "ADD *.go .", "1c0e91abca56e9207f708c20e9c6964a": "RUN go build -o etcd-proxy-server", "e3e020c0631b875cf4216e670050e210": "WORKDIR /bin", "57c85ef491e1c3f1464cf0e01fdc605f": "COPY /src/etcd-proxy-server .", "1c3ff38798146b93e75d6fb0ebd3fe1b": "CMD [\"etcd-proxy-server\"]", "b67bcbd82092ccc80dff5371c25dab0d": "FROM golang:1.13.2-alpine", "dbf5cd7c2afd011c42db661f9d30d8cb": "RUN apk add zeromq-dev alpine-sdk", "866501119003f555d53586c75fd39c8f": "WORKDIR $GOPATH", "8f2e7b4f8eb0513b19d42cb31eedbaa8": "COPY server/ewi-server/*.go /go/src/", "d202fa0ce6a76d51737f3dc0136b246b": "COPY server/ewi-server/*.mod /go/src/", "fd2911489751454ab836536f0ee65d88": "COPY server/ewi-server/*.sum /go/src/", "e77f7bcb2a50f13840e8e9b220ae23d9": "COPY server/ewi-server/vendor /go/src/", "bfb0484a3f6314557a86c40083f80b27": "WORKDIR /go/src/", "2d5d15518589daaf2eeaed8c01138113": "RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -mod vendor -a -o app .", "2e9078d07e284412e29f7c5aec4125f1": "RUN mkdir -p /var/lib/ewi-server/repo", "5d505596f5848f6d55dad08b22cf0874": "FROM node:11.10.1 as build-deps", "6fa4fb4441197e448f7d6a9f3141afc4": "ARG EWI_SERVER_PATH=http://localhost:8888/", "d019c3195ab59ae992c89ad551c8069b": "COPY ui/ewi-ui/package.json ui/ewi-ui/yarn.lock ./", "bc4083b3137381158ea242ec59664a07": "RUN yarn", "9288e8b48c75be90a49458bc2ab688c8": "COPY ui/ewi-ui/src ./", "df0f1c1d45f3ce419eb8b6411aca538b": "COPY ui/ewi-ui/public ./", "b7f71b648d25d9cca30a9537e7b1e5b2": "RUN REACT_APP_EWI_SERVER_PATH=\"${EWI_SERVER_PATH}\" yarn build", "02ce936a6b2b95cd46d1a92c15ea976b": "COPY /go/src/app .", "36fa3ac6624eb13e25d0d2f74c2f8afb": "COPY /var/lib/ewi-server/repo /var/lib/ewi-server/", "360f9f31d449ca3b4285d0b4a03e3af0": "VOLUME /var/lib/ewi-server/repo", "7a0ba9dcbf7350458e6255bb3098ea1e": "COPY /usr/src/app/build /var/lib/ewi-server/static", "cac555fcacfcef8ed28aeb4c2ea65454": "FROM golang:1.13.4-alpine3.10 AS gobuild", "1711b38c5439febb675f60c292818a6c": "RUN apk add --no-cache gcc git build-base ca-certificates curl", "d3bb926dd7ef345c956b510a2779e6e3": "WORKDIR /goapp", "48fdbb19dff1950e2db07fed7ed90489": "RUN go build -a --ldflags '-extldflags \"-static\"' entrypoints/main.go", "ee4a25a5bfef91a9eaec29a9229f5a0e": "COPY /goapp/main /app/go-graphql-srv", "ef7456e7dac22ed5795492d667b50b70": "RUN chmod +rx -R /app", "5bd9002974b0863afa296aa6828b7b9e": "RUN adduser -S laisky", "0ddc9dfd08d2b8e143e662c0bb095b60": "USER laisky", "149034612466dfe5ac01b90563f3d871": "ENTRYPOINT [ \"./go-graphql-srv\" ]", "42e94133cb746ae6ab32aaeee6c94e95": "CMD [ \"--debug\", \"--addr=127.0.0.1:8080\", \"--dbaddr=127.0.0.1:27017\" ]", "2bcdd6b49a4a046dc43260493a8145ba": "LABEL repository=\"https://github.com/pjbgf/gosystract/\"", "363b3894d8e60d5dd0fd1964fc7a837e": "WORKDIR /go/src/pjbgf/gosystract", "b7fe4b274a506f869f267a41395daf33": "RUN apk --update add git gcc", "a32aa4aa7bd6cf08b43e0cc7d8194941": "ADD . /go/src/pjbgf/gosystract", "f524ffe6ed302b58a680fa2b4f605d7d": "RUN go build -ldflags \"-w -X=github.com/pjbgf/gosystract/cmd/cli.gitcommit=$(git describe --tags --always)\" -o /go/bin/gosystract", "979934152f9fd47ab14fadbedc688ad0": "COPY /go/bin/gosystract /usr/bin", "a44964641925800b9ab605784c464d42": "COPY /usr/local/go/pkg/tool/linux_amd64/objdump /usr/local/go/pkg/tool/linux_amd64/", "2c1ba9c64dc55954d42bbad2e63df994": "CMD [\"/gosystract\"]", "b7a52e7c4617548338fc72a8cedf6dfe": "ADD . /src/claim-parser", "7b3af9e5803850e601d4ab77a4893f13": "WORKDIR /src/claim-parser", "53a62c5d59225c83e17aca4f4f347bc3": "COPY /src/claim-parser/bin/claim-parser /app/", "ac7ff63224e7273a8e57200f8efb0419": "COPY build/entrypoint.sh /app/", "4ed0363e1de5d76c9e31619e849aea71": "RUN mkdir -p /root/.gladius/wallet", "3dafb1ff33c89408d6643159078f4a2a": "FROM golang:1.13.1-alpine3.10 AS builder", "a139994a69b16ad067691f491a64c75b": "RUN mkdir -p /go/src/github.com/snowdreams1006/readmore-server", "e8f9614c6663ce67074ed83e9e71790a": "COPY . /go/src/github.com/snowdreams1006/readmore-server", "706a7fab13c4710fdbbd2e3bc8b2e659": "WORKDIR /go/src/github.com/snowdreams1006/readmore-server", "cf8c683fb84eeaba2e4ab3e7c3fc2151": "RUN go build -o readmore-server main.go", "c15b6da7982252586266e9a65e6ffa3d": "CMD /go/src/github.com/snowdreams1006/readmore-server", "cbd5e0589d6e65926ca5c63f86d90290": "FROM golang:1.8 AS builder", "08320074a82321d6e879961d76ca823b": "WORKDIR /go/src/github.com/stevenkitter/api/", "c36a5ded1b110bd92cf374b224c776a8": "COPY /go/src/github.com/stevenkitter/api/app .", "5c972f75b6c5873eca23a771d660ed64": "RUN go get github.com/alash3al/redix", "587f9ae654ccf4758eb80f4e3e5f5d07": "EXPOSE 6380 7090", "727282550f6971e49972a379c86cf532": "ENTRYPOINT [\"redix\"]", "c8d3381cc2fbf09803397a96af42c152": "FROM golang:1 AS build", "051afc8c874d8698cd37cac38f4e3d79": "RUN make miniflux", "9abb683ced58e41c45c23eff226d88f9": "FROM rockylinux:8", "68da0abba3573e8081927aabe768c4fc": "RUN dnf install -y rpm-build", "7769cde68a99de26975859f3b83e6224": "RUN mkdir -p /root/rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS}", "bae46ab351e2a42a5d6ea19c0bc92ec5": "RUN echo \"%_topdir /root/rpmbuild\" >> .rpmmacros", "b7f8da16e008b4548a13c40c0298b1af": "COPY /go/src/app/miniflux /root/rpmbuild/SOURCES/", "e7519c3b565da13594d63821cbe25e56": "COPY /go/src/app/LICENSE /root/rpmbuild/SOURCES/", "1e9f11487310f728c6df09ddb6d10285": "COPY /go/src/app/ChangeLog /root/rpmbuild/SOURCES/", "8d8d569e4e7ee840f57cd0cc0d88d212": "COPY /go/src/app/miniflux.1 /root/rpmbuild/SOURCES/", "014f06554b44005e5c8c183c4cb80b2c": "COPY /go/src/app/packaging/systemd/miniflux.service /root/rpmbuild/SOURCES/", "5241ddc7f1b8a1cba7c338190655ddb0": "COPY /go/src/app/packaging/miniflux.conf /root/rpmbuild/SOURCES/", "8ed221ef632b1e9d9964a9c958a221f2": "COPY /go/src/app/packaging/rpm/miniflux.spec /root/rpmbuild/SPECS/", "0dec5b603c33382c178e1f5cd021ec03": "COPY main.go template.html ./", "f6d703a9bc073f62ebe63ef9c0834b22": "FROM golang:1.12-buster", "d276a838f1fc45b47fea4976690db354": "CMD [\"./homemade-ingress-controller\"]", "508eb7c394eab77c1794dc13f4d8cfd3": "RUN go get -u ./...", "ad210904d3c1b240d6eb3c90ff8febf8": "ENTRYPOINT ./tuku -port ${PORT} -file ${FILE}", "7c415852aee94ca822478adf9b5dfaa3": "RUN apk add --update bind-tools curl git", "54ccc5a403b68669852edb357cd66918": "RUN sleep 5", "e045862a60d8469f433f76bb9dae2bbf": "ADD dnscrypt-proxy.toml /etc/dnscrypt-proxy/", "d43cfede215206016bca91a61ba5af52": "ADD test.sh /etc/dnscrypt-proxy/", "b8229ae9466a1aabdd127dcb06b31413": "RUN case $(uname -m) in armv7l) ARCH=arm ;; amd64|x86_64) ARCH=x86_64 ;; *) echo \"Unhandled arch $(uname -m)! Please report!\" ARCH=unknown ;; esac; VER=2.0.26; echo \"Installing dnscrypt-proxy-${VER} for ${ARCH}\"; curl --silent -L https://github.com/jedisct1/dnscrypt-proxy/releases/download/${VER}/dnscrypt-proxy-linux_${ARCH}-${VER}.tar.gz > dnscrypt-proxy-linux_${ARCH}.tar.gz", "5d7fa80cb0cde4020dafd3aa019e3f89": "RUN tar -xzf dnscrypt-proxy-linux_${ARCH}.tar.gz", "528ba2063efa5a2c15b1e7f8fcfde5d8": "RUN mv linux-${ARCH}/dnscrypt-proxy $GOPATH/bin/dnscrypt-proxy", "673553ba696bad96fab844bf37da015e": "RUN rm -rf dnscrypt-proxy-linux_${ARCH}.tar.gz linux-${ARCH}", "fa67c1487e6d4191db50524f758822c2": "ENTRYPOINT [\"/go/bin/dnscrypt-proxy\", \"-config\", \"/etc/dnscrypt-proxy/dnscrypt-proxy.toml\"]", "bd56bed1954668ad01d13866f02aceb0": "HEALTHCHECK CMD dig one.one.one.one || exit 1", "17a3a2ee09e19f77f919a38b260fc56c": "RUN go get github.com/bemasher/rtlamr", "a651c71dfb40a06bb2f71639ea501f63": "RUN go get github.com/bemasher/rtlamr-collect", "c9a2a8fa86e16815d06962435484626a": "RUN chmod a+x ./bin/rtlamr*", "6db3c980228a78f1f7b42feb561597ae": "COPY start.sh ./", "71321c513670dc76607f25060251ec3c": "RUN chmod a+x start.sh", "44f280a9fc0a18e07e451bd706a4513e": "ADD .mozilla /profile_tmpl", "095b2651724c931f4088b353b9a1d588": "FROM golang:1.14.2-alpine3.11", "bb06ff74419cee22a70a56f7bc090d37": "WORKDIR /go/src/github.com/alanqchen/bear-post", "22d1627fe00f46ba9ed659b47c11eb9e": "ENTRYPOINT ./app", "fddce5f3fe901bcb124e29ade23d0173": "LABEL Name=bear-post Version=0.0.1", "a1335db9dcf16139f9d90a04c0c0f12c": "RUN apt-get -y install jq", "2e96dafb2bbe8b8cb2af8d2c49345baf": "RUN VERSION=`curl -s https://api.github.com/repos/syncthing/syncthing/releases/latest | jq -r '.tag_name'`", "2e71b8bf5ecc0691660518a250933e6f": "RUN git clone https://github.com/syncthing/syncthing.git", "b1f56fc573839b291237b8d7d5e60a38": "RUN go run build.go -no-upgrade build syncthing", "5cf54756592194b5af69971128f3211e": "RUN curl -o /usr/local/bin/gosu -fsSL \"https://github.com/tianon/gosu/releases/download/1.11/gosu-amd64\"", "3c6957fbfa46afa96f286636a623cb24": "RUN chmod +x /usr/local/bin/gosu", "96a5ba6d39d2a46e76c3f6cf16109f28": "RUN apk del curl", "c6a61c53be6a2c1b3f89d07d86aa3d57": "RUN apk add --no-cache ca-certificates bash", "1bcbfdb267077c1f6d57faabd3bee46d": "COPY /src/syncthing/syncthing /bin/", "fa0640a31813be48fa5627f8ba59ca85": "COPY data/entrypoint /", "e97a2c0e6cb2ddb54971e934d80a5ba8": "RUN chmod 755 /entrypoint", "ba954594fe12dfb9c4a40c8c2a75e803": "ENV ST_CONFIG_DIR=\"/opt\"", "2e734b0c111f10029414589ba2da894b": "ENV ST_DATA_DIR=\"/mnt\"", "74958c966f2c9a67803f97358f00a438": "ENV ST_USER_ID=\"1000\"", "55babd1035466379e4d475908514ea0d": "ENV ST_GROUP_ID=\"1000\"", "7b840dfa43171eb5cf8e22cb549bcab1": "EXPOSE 8384 22000 21027/UDP", "3b23ba8ad78159d0e3769f12b5acedf3": "ENTRYPOINT [\"/entrypoint\"]", "3640a3d66f332aef50c31bbe3119b911": "CMD [\"run\"]", "604bfbc3df463e43e1a9e93eec8e15b9": "FROM golang:1.13.5-alpine3.11 AS build", "94430eca54c97cb642c668acf01768fa": "RUN apk add --update --no-cache tesseract-ocr tesseract-ocr-dev build-base", "78550d63ea2c6ff2093eda588f22fec7": "RUN go build -o sakura_bot cmd/app/app.go", "fd75bab609a6deac3ad6a8f5f6d47bd3": "RUN apk add --no-cache tesseract-ocr ca-certificates", "0dc3e40b482829391bb7a7c6f13b360f": "RUN mkdir -p /app/logs", "00c180959fc27c89b57de39a52d31a4c": "RUN mkdir -p /app/sakura_images", "e6456657ab45381927697ea9e4ab8bdf": "COPY /app/sakura_bot /app/", "ca37587b9723f299ffb18945d04ccfda": "ENV USER=\"email@example.com\"", "770f867998fa61b98c511e45b3e777e9": "ENV PASS=\"password\"", "051371f86731ad43fff338883223d260": "ENV LOG=\"onlyLOG\"", "43fd92838fdf1442fafcd7df728698e7": "CMD /app/sakura_bot -e ${USER} -p ${PASS} -s ${LOG}", "8cc732161cb40cca080927cdc787f7e2": "RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -o /go/bin/api .", "9545198a1133555f3965e965e51679fc": "COPY /go/bin/api .", "68ce61f08179eae03dda1c33ae9c9bc6": "RUN chmod +x ./api", "738c9914317b5c78a54295a74f347d4b": "ENTRYPOINT [\"./api\"]", "63397f72c0162aace70534791ede646e": "RUN go build -v -installsuffix cgo -ldflags '-s -w' -o /app/ethereum-jsonrpc-gateway main.go", "46ffa9132215e72efcad05cb32987279": "COPY /app/ethereum-jsonrpc-gateway /app/", "f8419f3299a088f1469786a2bbdb2955": "CMD [\"/app/ethereum-jsonrpc-gateway\", \"start\"]", "f9e67b639a415461682966ea1df4f86f": "COPY . /go/src/gitlab.com/braneproject/branehub", "1c1f977162ac2c0f93281f4190b439d1": "RUN cd /go/src/gitlab.com/braneproject/branehub", "4a6d02a2d45e031807b7768b66c84866": "RUN go install gitlab.com/braneproject/branehub", "7772261eaa97bce1ea757abd9a059d5b": "COPY /go/bin/branehub /bin/", "68c973556a462753fb2f8bc5a3d84853": "COPY \"start-branehub.sh\" .", "18b38741c0f4384cf6a1b390d767ea4a": "RUN chmod +x start-branehub.sh", "87adf2821eab85781c3772be0c940e2b": "RUN go build -gcflags=\"${SKAFFOLD_GO_GCFLAGS}\" -o /go/bin/shippingservice .", "4480aa1b20eb42e6518418cfaa2c5932": "COPY /go/bin/shippingservice /src/", "42671e9fb4f99386d1a8d6155ca9c6a6": "ENV APP_PORT=\"50051\"", "a41e7ffa854b1be36867cfa8f8e66268": "EXPOSE 50051", "7782955f02036455a3bd20acde6df8f3": "ENTRYPOINT [\"/src/shippingservice\"]", "d760b05ebf2b30e6f4136561b2c6a9ac": "FROM golang:alpine3.10 as builder", "91c028a86731908e78814db407567a8a": "RUN apk --no-cache --no-progress add make git gcc musl-dev ca-certificates", "2ad502857de412ae628fce0f43e0c16e": "RUN apt-get install sqlite3", "273b3e0af2dd4fb85f67301776e02460": "WORKDIR /go/src/panopticon", "0660a3321b7e2b48c4b432810a70b250": "RUN go get github.com/mattn/go-sqlite3", "4f503ebae0bf045e7af4254ec125d294": "COPY ./runtests.sh /go/src/panopticon", "115d6476e9ec0f6861879a78d41074c3": "COPY ./tests /go/src/panopticon/", "38eb93c8fc85931b84cfbbbc4b6e600f": "COPY ./main.go /go/src/panopticon", "46e00d1ed73eff476bfd767a2c499563": "CMD ./runtests.sh", "8241fdf5a92c77c58d198660c1361f68": "ARG REAGLE_IMPROVED_FIRMWARE=\"\"", "dce769fa3519dec083ee9fc3a4d273ac": "ARG REAGLE_MODEL_ID_NAME=\"\"", "25c358425c057ae8544541da3467e98e": "ARG REAGLE_DEBUG_REQUEST=\"\"", "524fe38802d09882936082ef4857d570": "ARG REAGLE_DEBUG_RESPONSE=\"\"", "1d131b4d749196dc081c5c1c7d77649d": "ENV REAGLED_WAIT=\"1s\"", "5f03d74becb842fec08ffeb9bcdd5db6": "ENV REAGLE_IMPROVED_FIRMWARE=\"true\"", "67326bbac10f885ab274435e7a701506": "ENV REAGLE_MODEL_ID_NAME=\"\"", "04d6ba054dafdb16cea3ec7cb81a1eaa": "ENV REAGLE_DEBUG_REQUEST=\"false\"", "3bb42cdd2a0d1811a1ac5bcb86fb3ffe": "ENV REAGLE_DEBUG_RESPONSE=\"false\"", "2b30e1dfa36008588f6dfb9d793ae3ac": "RUN apk add --update --no-cache ca-certificates make git curl mercurial", "2782104722ff8761e1af59709303074f": "ARG PACKAGE=github.com/banzaicloud/anchore-image-validator", "a4e173841645736014f9ab5df57009b8": "RUN mkdir -p /go/src/${PACKAGE}", "1a42733efe3101cd6ae2282fd39f7a7e": "WORKDIR /go/src/${PACKAGE}", "2093e096b57c693b11b769c9ae45990f": "COPY Gopkg.* Makefile /go/src/${PACKAGE}/", "db648bb5ceb18b348b62888c0825480b": "COPY . /go/src/github.com/banzaicloud/anchore-image-validator", "aacf619f8ab3970b8568a516f6c3fc8c": "RUN BUILD_DIR=/tmp make build-release", "d7d6a270342394dafbc9f6b9244b24d2": "RUN apk add --update libcap", "68ead017556e38405a388958c3fe01c5": "RUN go build -ldflags=\"-s -w\" -a -installsuffix static -o /badcapt cmd/badcapt-tg/badcapt-tg.go", "059b70ac7073ce030c088b53920403d1": "RUN echo '0 * * * * /usr/local/bin/ghbackup.sh'", "0cdc8755815f88b2ad67cfd2aaf10f22": "RUN touch /var/log/cron.log", "c3477494db448227db0aa24dda04c546": "CMD cron && tail -f /var/log/cron.log", "80ceeb97644ecc593c41eecffa552b7e": "ARG golangci_lint_version=1.21.0", "48120238fa9579bb220460be80aee994": "RUN curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v${golangci_lint_version}", "949ee0ce3dbf44e7d44131344ec7e32e": "ADD . /source", "ba59996010a1eacdc383c98f3e75c8d1": "WORKDIR /source", "b3c4296917ff69f781f49f8975cfceb6": "RUN go build -o /entrypoint", "b1ac91b266ae52cbb26d5bcc20f88bfc": "RUN rm -rf /source/*", "4f3c7c335a3e072371cb258fe823e91f": "FROM golang:1.11.4-alpine", "1b6122d3286be475cae5c6aca4b5465e": "RUN apk add git tzdata", "b63fae701239b6308b480128e389d2d3": "COPY Gopkg.lock Gopkg.toml /go/src/lsgooi/", "b7f967f39d4b5183f58dba2ba57f64a6": "WORKDIR /go/src/lsgooi/", "45b1f0d928683516316789188f5c1261": "RUN go build -o /bin/lsgooi", "7f0d01b0b1bbbdef6cb3c596e93fc51f": "CMD [\"/bin/lsgooi\"]", "ef717c4b8aaa68d116ab8054031d08a9": "FROM golang:1.13.2-alpine3.10 AS build", "da856611b670e26946de4a7f7564d49e": "WORKDIR /go/ruthie", "52049e5832da4b9b76b3bf45c32c6c7a": "COPY config ./", "5e6608b6e4bbb5435a45ebf5ea9ebe2e": "RUN go build -o /go/bin/ruthie", "b2ae515764dd5ef4647d84705862f5c6": "ENV RUTHIE_CLICKHOUSE_ADDR=\"\" RUTHIE_CLICKHOUSE_ALTADDRS=\"\" RUTHIE_CLICKHOUSE_PASSWORD=\"\" RUTHIE_CLICKHOUSE_USERNAME=\"\" RUTHIE_CONSUMER_NAME=\"\" RUTHIE_REDIS_ADDR=\"\" RUTHIE_BATCH=\"10000\" RUTHIE_PENDING_BUFFER_SIZE=\"1000000\" RUTHIE_PERIOD=\"60000000000\" RUTHIE_PIPE_BUFFER_SIZE=\"50000\" RUTHIE_PREFETCH_COUNT=\"30000\" RUTHIE_QUEUE_NAME_FAILED=\"ruthie_failed\" RUTHIE_QUEUE_NAME=\"ruthie\" RUTHIE_SHARDS_COUNT=\"10\"", "efa0a7e344c2b21792e12228a56f0c72": "RUN CGO_ENABLED=0 GOOS=linux go build -ldflags=\"-w -s\" -a -installsuffix cgo -o /go/bin/erase-una-vez-2 .", "141f435f5e00513e8caeb90db9bd5337": "COPY /go/bin/erase-una-vez-2 /go/bin/", "103cc03b4cb72146cad65ce00a7d866d": "ENTRYPOINT [\"/go/bin/erase-una-vez-2\"]%", "8c038ed09cfe829fecdbd7f5fd4528c2": "CMD [\"/usr/bin/scraperserver\",\"-redishost=redis:6379\",\"-gatewayport=4000\",\"-grpcport=3000\"]", "1f1f9d61ade1b9b138a9b2dfec913d18": "ENV NOMS_SRC=\"$GOPATH/src/github.com/attic-labs/noms\"", "94c678bcd5b2eed6d3a8b7d43da4ac0b": "RUN mkdir -pv $NOMS_SRC", "a79c78cd5e1b81d162173e42bf9d0fd5": "COPY . ${NOMS_SRC}", "d987285f24bee29412c772fb1e76ef69": "RUN go install -v github.com/attic-labs/noms/cmd/noms", "ead98aa03ce6f94a1d476006d4c61494": "RUN cp $GOPATH/bin/noms /bin/noms", "a0c36f9fe03a2c252c477a996de9a1ca": "COPY /bin/noms /bin/", "a649b33747ccb29a664a653601d87216": "ENV NOMS_VERSION_NEXT=\"1\"", "e41d1f7e0e14af3941c396bb03b14954": "ENTRYPOINT [ \"noms\" ]", "e4372205d38e2ba9d86fffa44ab7d4c8": "CMD [\"serve\", \"/data\"]", "737e67e046019be5ff6a613b3c24fc69": "ENTRYPOINT [\"./coding_challenge\"]", "5225b5097df8682aab8d66b8f5833286": "RUN go build -o miniflux -ldflags=\"-s -w -X 'miniflux.app/version.Version=`git describe --tags --abbrev=0`' -X 'miniflux.app/version.Commit=`git rev-parse --short HEAD`' -X 'miniflux.app/version.BuildDate=`date +%FT%T%z`'\" main.go", "f954038bac098a5f50cf37f69dd3666b": "FROM gcr.io/distroless/base", "20d29868d64e6f6052a3a08e26b16bb3": "LABEL org.opencontainers.image.title=Miniflux", "0ba76a4adb651a068d9d2a2a911d35ae": "LABEL org.opencontainers.image.description=\"Miniflux is a minimalist and opinionated feed reader\"", "b55557f262673305d9fa3c011f220bf8": "LABEL org.opencontainers.image.vendor=\"Fr\u00e9d\u00e9ric Guillot\"", "8300ffab16e5a790da3deb2fe0438d93": "LABEL org.opencontainers.image.licenses=Apache-2.0", "5effd287d632da24105e0128b720992a": "LABEL org.opencontainers.image.url=https://miniflux.app", "91a17d91ae9994718f3d4b8b022c0ec0": "LABEL org.opencontainers.image.source=https://github.com/miniflux/v2", "285a7f53db8c075bcf73db9e77dfa74e": "LABEL org.opencontainers.image.documentation=https://miniflux.app/docs/", "bfb84e8558109656e0ce5ae7217e33a4": "ENV LISTEN_ADDR=\"0.0.0.0:8080\"", "7d42c0597c34277a502e113b1fba89c8": "COPY /go/src/app/miniflux /usr/bin/", "d0d528348b0b71d7057ed51417e7a7c8": "CMD [\"/usr/bin/miniflux\"]", "20122b3e10482e8ffbfe00b10436c431": "RUN apt -y install mecab libmecab-dev mecab-ipadic-utf8 ca-certificates", "a101727c64a53646d4b646d512ced2b8": "ENTRYPOINT /main", "5caafe10fe7ae7d434db1d4900bd7bbb": "ENV QEMU_DOWNLOAD_SHA256=\"47ae430b0e7c25e1bde290ac447a720e2ea6c6e78cd84e44847edda289e020a8\"", "d4784c14bb93c06c980adccc85245d41": "RUN curl -sL -o qemu-3.0.0+resin-arm.tar.gz https://github.com/balena-io/qemu/releases/download/v3.0.0%2Bresin/qemu-3.0.0+resin-arm.tar.gz", "261a501fed6ea95d93ed8023ab49a003": "RUN echo \"$QEMU_DOWNLOAD_SHA256 *qemu-3.0.0+resin-arm.tar.gz\" | sha256sum -c - | tar zxvf qemu-3.0.0+resin-arm.tar.gz -C .", "668c267bd9949d2d9bef070e981412f7": "RUN mv qemu-3.0.0+resin-arm/qemu-arm-static .", "4854b1b9c31e3d987b8b568db77a397c": "FROM arm32v7/ruby:3.1-slim-bullseye", "374933c123b76fac437c322884d1424c": "COPY /go/qemu-arm-static /usr/bin/", "7b39a4a384fa82b973e3fe15d785ac88": "LABEL Description=\"Fluentd docker image\" Vendor=\"Fluent Organization\" Version=\"1.15.3\"", "2eb708055fee1d59eb798b5d6a3c3382": "RUN gem install oj -v 3.14.2", "7b473a5f6e44296415dd768c3e6113ee": "RUN gem install json -v 2.6.3", "f2315ed42ab6fea2044ed3a7394fe103": "RUN gem install rexml -v 3.2.5", "687cb40f97b32a7c206b15e1309c391e": "RUN gem install async -v 1.30.3", "368ee315d9a01470c1e99b8d70d531ac": "RUN gem install async-http -v 0.56.6", "964fabbc9e98e6d630a6ec5b6cc38b18": "RUN gem install fluentd -v 1.15.3", "d5c0fd4d8593a567f3753500f64f5b37": "RUN wget -O /tmp/jemalloc-5.3.0.tar.bz2 https://github.com/jemalloc/jemalloc/releases/download/5.3.0/jemalloc-5.3.0.tar.bz2", "58813e999a7ebeae96c82ec61b88b45c": "RUN tar -xjf jemalloc-5.3.0.tar.bz2", "bd53fb4e62c0a5cae6a6d566626c8557": "RUN cd jemalloc-5.3.0/", "861ea17eb6e4ff15e91ad625f3bf9a94": "RUN rm -rf /tmp/* /var/tmp/* /usr/lib/ruby/gems/*/cache/*.gem /usr/lib/ruby/gems/3.*/gems/fluentd-*/test", "8743aa687bb7286a166b0061caae2d6f": "WORKDIR /go/src/github.com/clawio/clawiod/cmd/clawiod", "75b749218809d84cc8cfb412ed9d76b2": "CMD /go/bin/clawiod -conf /go/src/github.com/clawio/clawiod/etc/monolithic.conf", "f634522f99212c6505690b66653a7761": "EXPOSE 1560", "de307ddd7007981d9a6d2ac9605b50c0": "RUN mkdir -p \"$GOPATH/src/github.com/toskatok/lg\"", "d0832bda502e468f8c2ea514f2c4c480": "WORKDIR $GOPATH/src/github.com/toskatok/pm", "2d862a383111adf2f0cd49e7e5da0799": "COPY /lg /app/", "77183f3e0f63f0c934ba6b45622257b1": "ENTRYPOINT [\"./lg\"]", "0472f778ddbdfd5dce62ae42cf52464d": "ADD main.go ./", "692008c2b862ea8e0c7b6cec25c2432b": "RUN go build -o main", "c2596517641282655335c18c60fcb647": "FROM golang:1 AS signal", "7b0dfebffd4a7b54c9d3694c86c4239f": "COPY signal/main.go /app/", "1407956098121c845e055ef01c2302f3": "RUN CGO_ENABLED=0 GOOS=linux go build -a -ldflags '-s -w -extldflags \"-static\"' .", "c39935f15752ed4daa10ac3fc190ba06": "FROM alpine:3.10 AS files", "e147a81821e3ee8785932691e1a25eda": "RUN mkdir -p /rootfs/etc/nginx", "eaffb50d349d63ed3b42275d6cca5133": "RUN cd /rootfs/etc/nginx", "a03fa2566b67660671af40b803ef0983": "RUN mkdir -p /rootfs/etc/bot-blocker/bots.d /rootfs/etc/bot-blocker/conf.d", "6b6a5702634e21da42e8437255995aff": "RUN ln -s ../bot-blocker/bots.d .", "9a13d1204de9127f56ff8790795d9aa5": "RUN ln -s ../bot-blocker/conf.d bots-conf.d", "dc05383c5da6fbab3b5c366dd571289d": "RUN touch /rootfs/etc/nginx/bots-conf.d/botblocker-nginx-settings.conf", "efb7637eb59281c6b12341b8f6fed9a1": "RUN touch /rootfs/etc/nginx/bots-conf.d/globalblacklist.conf", "3f037ab46bd4fb0844f86ee10de88ab3": "RUN touch /rootfs/etc/nginx/bots.d/blockbots.conf", "2f946d65f6ab0f0335d933af22b1ad90": "RUN touch /rootfs/etc/nginx/bots.d/ddos.conf", "29eb3370930564128e73180ffa3383b7": "COPY /app/app /rootfs/usr/local/bin/docker-signal", "e0666d41a60a9c675047e949e5a596bb": "COPY /docker/passwd /docker/group /rootfs/etc/", "a278458cd44e0cb5959a57da559b5cbb": "COPY /docker/mime.types /rootfs/etc/nginx/", "21b35df3ab8e91065686ecd902fa2712": "COPY /nginx.conf /rootfs/etc/nginx/", "d0bbdc22319d3eb8639e3d737cd59d7a": "COPY /include/", "728a8a660f3daf906a3b5bf32e8f6a41": "COPY /docker/default.conf /rootfs/etc/nginx/conf.d/", "0dc237ac4acef41d0a47003530c5f800": "COPY /docker/cron-acme /docker/cron-bot-blocker /docker/update-bot-blocker /docker/cron-rotate-log /docker/rotate-log /rootfs/usr/local/bin/", "170df1f4f9e3b55b9555c38441c4816f": "ARG NGINX_VERSION=\"1.17.10\"", "77ac82e11b40f32f773968008e614b38": "ARG GPG_KEYS=\"B0F4253373F8F6F510D42178520A9993A1C052F8\"", "5529be6322758bce3151d7a3cc3e8d6b": "ARG MODSECURITY_VERSION=\"3.0.4\"", "6e75d1ce8ac567f0d5f552100c644a64": "ARG MODSECURITY_SHA256=\"b4231177dd80b4e076b228e57d498670113b69d445bab86db25f65346c24db22\"", "945fe17fccf00a98bf9390bf9ab06c84": "ARG MODSECURITY_CRS_VERSION=\"3.2.0\"", "c66f894fa9ea363176951df67ddb718b": "ARG NGX_BROTLI_COMMIT=\"8104036af9cff4b1d34f22d00ba857e2a93a243c\"", "8222d73597f77776980ea5eff41a459b": "ARG NGINX_CONFIG=\"    --sbin-path=/usr/local/bin/nginx     --conf-path=/etc/nginx/nginx.conf     --pid-path=/tmp/nginx.pid     --http-log-path=/dev/stdout     --error-log-path=/dev/stdout     --http-client-body-temp-path=/tmp/client_temp     --http-proxy-temp-path=/tmp/proxy_temp     --http-fastcgi-temp-path=/tmp/fastcgi_temp     --http-uwsgi-temp-path=/tmp/uwsgi_temp     --http-scgi-temp-path=/tmp/scgi_temp     --with-file-aio     --with-http_ssl_module     --with-http_v2_module     --with-stream     --with-stream_ssl_module     --with-http_stub_status_module     --with-http_gzip_static_module     --with-threads\"", "6682c10b8a918ac452130d3518f57e91": "RUN apk add --update --no-cache ca-certificates coreutils openssl pcre zlib libaio libxml2 libstdc++ yajl bash curl git", "effef47ccb820b07ed5e72b12c50fa71": "RUN apk add --update --no-cache --virtual .build-deps gnupg1 build-base openssl-dev pcre-dev zlib-dev libaio-dev libxml2-dev linux-headers libcap curl", "a1b366487495b75ff99e8bb07fcd8502": "RUN curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz -o nginx.tar.gz", "2464c6910b52c05387c503ca0f88e55a": "RUN curl -fSL https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz.asc -o nginx.tar.gz.asc", "56bddc18c5f47d4882775e83fa0bc45c": "RUN curl -fSL https://github.com/SpiderLabs/ModSecurity/releases/download/v$MODSECURITY_VERSION/modsecurity-v$MODSECURITY_VERSION.tar.gz -o modsecurity.tar.gz", "42324a760ad14e4292c61de9e8e75ede": "RUN git clone --recursive https://github.com/eustas/ngx_brotli.git", "f6484900346f5f55af52f6b5a045d548": "RUN cd ngx_brotli", "b9e1f2969f6832e7b03beadacebf18af": "RUN git checkout -b $NGX_BROTLI_COMMIT $NGX_BROTLI_COMMIT", "a2117e44bbf9d90d12b5783b72b7a9ff": "RUN if [ \"$MODSECURITY_SHA256\" != \"$(sha256sum modsecurity.tar.gz | awk '{print $1}')\" ]; then echo \"modsecurity hash missmatch $(sha256sum modsecurity.tar.gz | awk '{print $1}')\"; exit 1; fi", "c11c5be27b1003706f5bf497ef89b338": "RUN found=''; for server in ha.pool.sks-keyservers.net hkp://keyserver.ubuntu.com:80 hkp://p80.pool.sks-keyservers.net:80 pgp.mit.edu ; do echo \"Fetching GPG key $GPG_KEYS from $server\"; gpg --keyserver \"$server\" --keyserver-options timeout=10 --recv-keys \"$GPG_KEYS\"", "93ad4c82b41abeb3032b8920e8f878ba": "RUN echo >&2 \"error: failed to fetch GPG key $GPG_KEYS\"", "70d79bdc2696f68161aca4ea206540a5": "RUN exit 1; echo \"verify nginx signature\"", "42eb27be216a169b70d11382895b5e94": "RUN gpg --batch --verify nginx.tar.gz.asc nginx.tar.gz", "0fddc101b26bc4f08cb7604385364d51": "RUN tar xzf nginx.tar.gz", "73da88c7aeabf76d4ccca4c537c633f4": "RUN mv /tmp/nginx-$NGINX_VERSION /tmp/nginx", "07794cf76317cbe12736f2d513c33e66": "RUN rm -rf \"$GNUPGHOME\" nginx.tar.gz.asc nginx.tar.gz", "524627b14f12b00eb4259c2da2701655": "RUN tar xzf modsecurity.tar.gz", "97689d2fa06ad3e48c6367d356f8cfce": "RUN rm modsecurity.tar.gz", "c8a47088c69ae523ffa5761013192d3e": "RUN mv /tmp/modsecurity-v$MODSECURITY_VERSION /tmp/modsecurity", "dfc51e975eb024848e66050a79945cfa": "RUN cd /tmp/modsecurity", "d017fe94e5f3ef32145470531fd9471f": "RUN export MAKEFLAGS=\"-j $(grep -c ^processor /proc/cpuinfo)\"", "56fd7e2bd7f7ee8572828f64584371ea": "RUN echo \"configure nginx\"", "ee6829794174bea7e50567c856c06da3": "RUN ./configure --enable-standalone-module", "d7172a29984ec788d9d73e99fa073564": "RUN echo \"make nginx\"", "5d5d4bdc45ce9bd13678e220e58d27c4": "RUN echo \"install nginx\"", "3c233e3b8d74d5aa397ad7ac9d843017": "RUN echo \"strip modsecurity\"", "f964f0131a46fd2a5634ab033084b516": "RUN strip /usr/local/modsecurity/lib/libmodsecurity.so.$MODSECURITY_VERSION", "1399517920d870696bd0576193f441b9": "RUN rm -rf /usr/local/modsecurity/lib/*.a /usr/local/modsecurity/lib/*.la", "d01647b3c93438cb281cb8ac3d133181": "RUN mkdir -p /usr/share/modsecurity", "caeffdde3883fd5f4eff7805180ed6c5": "RUN cp /tmp/modsecurity/modsecurity.conf-recommended /usr/share/modsecurity/modsecurity.conf", "9d1204dcdbc1fa18fc75c0451dcf13bc": "RUN cp /tmp/modsecurity/unicode.mapping /usr/share/modsecurity/unicode.mapping", "488ed3d523f94df7f0e6c7d572736d9e": "RUN rm -rf /tmp/modsecurity", "2f0ea36f0ed490dd9c0abf0064882c41": "RUN echo \"clone modsecurity-nginx\"", "4f8b0279ee5efd747747718c897de1ca": "RUN git clone https://github.com/SpiderLabs/ModSecurity-nginx", "43e183cc4c43347572e6110e0cd80e35": "RUN cd ModSecurity-nginx", "743e6f5f06d2a0a7fc46df4915e73f38": "RUN git checkout d7101e13685efd7e7c9f808871b202656a969f4b", "d9ada904e75eae67b70c63eeb0f7b1e7": "RUN cd /tmp/nginx", "bfe4d31a2a7b83a75067adf1acb45b40": "RUN echo \"configure modsecurity-nginx\"", "0bef16287b8dc95f0165f9d6f767f3f2": "RUN ./configure $NGINX_CONFIG --add-module=../ModSecurity-nginx --add-module=../ngx_brotli", "f177771d5beb9d59945e2e55ed073b6c": "RUN echo \"make modsecurity-nginx\"", "5f12b210153338b3a847c10523a1127f": "RUN mv /tmp/nginx/objs/nginx /usr/local/bin/nginx", "97426f0033e3169f596116d11c1c9f38": "RUN /usr/sbin/setcap cap_net_bind_service+ep /usr/local/bin/nginx", "304684b356ef2958600f60fdb24713d9": "RUN rm -rf /tmp/nginx /tmp/ModSecurity-nginx /tmp/ngx_brotli", "0ccedb5dec1d968ed86dc531ec5567b0": "RUN mkdir -p /var/log/nginx", "8748bb8254eb0fa4b1c025e6524508f0": "RUN cd /var/log/nginx", "f4248a93dde29dbed9963da913f157a9": "RUN ln -s /dev/stderr error.log", "b59929aa6b4c8e3e0730c4462101a6b3": "RUN ln -s /dev/stdout access.log", "28d50efb5464f8bcecd9bc4b0c34de82": "RUN ln -s /dev/stderr modsec_audit.log", "e9197cdf0dce7de6e5e913446b5e22a6": "RUN rm -rf /usr/share/terminfo", "9d72b2a4aaf86cccf1c73aca8effc9b6": "RUN echo \"ldd modsecurity\"", "6fbf4e7531e6b17c727a2c885da76d98": "RUN ldd /usr/local/modsecurity/lib/libmodsecurity.so.3", "bec4ed911a3facbb903fb9e9490b1fd9": "RUN cd /usr/local/share", "2e20a37a40b769e693aa404b8c3fa483": "RUN echo \"fetch crs\"", "4bff76be74b379f0c9828ecbd488c4be": "RUN curl -L https://github.com/SpiderLabs/owasp-modsecurity-crs/archive/v$MODSECURITY_CRS_VERSION.tar.gz | tar xz", "b2bf305d51eb5a7f6b337ac29702d737": "RUN mv owasp-modsecurity-crs-$MODSECURITY_CRS_VERSION modsecurity-crs", "b0649737c6102c610d926baef1fd357a": "RUN rm -rf modsecurity-crs/util", "1f30ad29105e2440444948229718c5af": "RUN cp /usr/share/modsecurity/unicode.mapping modsecurity-crs/", "9f5baefb138b42c8522d801597efce15": "RUN sed -e 's#/var/log/#/var/log/nginx/#g' -e 's#SecStatusEngine On#SecStatusEngine Off#g' /usr/share/modsecurity/modsecurity.conf > modsecurity-crs/owasp-modsecurity.conf", "35399135b5d38467b1d9b2a9839819cd": "RUN echo 'SecAction \"id:900990, phase:1, nolog, pass, t:none, setvar:tx.crs_setup_version=310\"' >> modsecurity-crs/owasp-modsecurity.conf", "cd21cf27423aca3e1055aac41683fbbb": "RUN echo \"Include /usr/local/share/modsecurity-crs/rules/*.conf\" >> modsecurity-crs/owasp-modsecurity.conf", "c46641eeb53197d1b4cbd4403454ada9": "RUN rm /usr/local/share/modsecurity-crs/rules/REQUEST-910-IP-REPUTATION.conf", "4f1752a6c33f613527738366ed9e0a3f": "ENV LE_WORKING_DIR=\"/usr/local/bin\" LE_CONFIG_HOME=\"/etc/ssl/acme.sh\" PS1=\"\ud83d\udc33  \\u@\\h \\W \\\\$ \"", "e33ec4d8498dab4725aead71e240dbdf": "RUN curl https://get.acme.sh | sh", "000154d088c88370febb96d829ed11e7": "RUN rm -rf \"$LE_WORKING_DIR/deploy\" \"$LE_CONFIG_HOME/account.conf\" \"/etc/crontabs/cron.update\"", "a1f231f29a8d25c1b0f8fc01f3b3ab68": "RUN find /tmp/ -type f -delete", "2f35a33ff22df29ab600e16d46386f17": "RUN acme.sh --uninstallcronjob", "d7aa04eef2410e10156c7125b8e4ea07": "RUN rmdir /etc/ssl/acme.sh", "1702d1707123cd5c72b7fe1b12723a81": "RUN curl https://raw.githubusercontent.com/mcnilz/minicron/master/minicron > /usr/local/bin/minicron", "f00959fc57f7e8980ad1a606f89d239d": "RUN chmod +x /usr/local/bin/minicron", "440c5490650ff33f41ac96902200188b": "COPY /rootfs/", "c91fe5be7d4fdcedf850c1e9c4897254": "USER nginx", "31d638f84e9db4b57f269a26758335ee": "CMD [\"nginx\", \"-g\", \"daemon off;\"]", "30e68249073fa3641c65fcdd96fd29ce": "RUN CGO_ENABLED=0 GOOS=linux go build -o /proxy-server ./main.go", "02926e58738feaca677b5771bdfe0800": "COPY /proxy-server /", "0327ea5bf3e36cfcbc07903283703a05": "FROM golang:1.13.0-alpine as builder", "c34e0c1786253bf23aed01d6afe5fea7": "RUN mkdir -p /usr/local/app", "d17ee6caa05fabb5feb3538cfac98917": "WORKDIR /usr/local/app", "fc3b3a1e8a2590760316fa9927396010": "COPY ./go.mod .", "9049b8f8ddb0585b90f253b268198d11": "COPY ./go.sum .", "954ba751a183e31b76e038146964f3de": "COPY . /usr/local/app", "9ee063473123c582c9fd5af33298c353": "RUN go install -v ./cmd/...", "a0801d272100e45c466738419ceb27ae": "RUN apk add --no-cache ca-certificates tzdata", "8f22df6be4910c339b7d6a43bdc0b3c1": "COPY ./ca-certificate.crt /usr/local/share/ca-certificates/", "40db92d076e9d033b790e0e38470beb3": "RUN chmod 644 /usr/local/share/ca-certificates/ca-certificate.crt", "9991f32fa6f832d16ac53d4a2163f7c5": "ENV ADDR=\":80\"", "f39b52bd7c06716716100093ff5d857f": "ENTRYPOINT [\"./serve\"]", "5bae926825883229c8471915c3f71be8": "COPY /usr/local/app/resources/nsfw.html resources/", "66f1ade6c6fa7e4792d65f37f7f11979": "COPY /usr/local/app/resources/robots.txt resources/", "698f49ea6eb2c49822d4811fd4bb1085": "COPY /go/bin/serve .", "6b6fb90af1fd0ca8b72dc394081ed1a3": "RUN go build $APP", "a3c5c9d8c602d5f436de7698cb12be28": "ENV GOPATH=\"/golang\"", "ec25dda585bb21c4b4167063b9fe62d4": "ARG BUILD_VCS_REF=\"\"", "53c9b654721408e3ce64a6da25ce0c00": "ARG BUILD_VERSION=\"\"", "c05e88e1db341c90e9933a628e0d4b38": "LABEL org.label-schema.build-date=$BUILD_DATE org.label-schema.vcs-url=\"https://github.com/mgvazquez/docker-whoami.git\" org.label-schema.vcs-ref=$BUILD_VCS_REF org.label-schema.version=$BUILD_VERSION com.microscaling.license=MIT", "ea93fcf7f7727f12a2643502505312bd": "FROM golang:1.13.6-alpine3.11 as builder", "4b784d61c00e6085a55f8b72d7ef8ffd": "COPY templates templates", "dd8cbc0559f5d05bc677315a045d497b": "RUN go build -x -o media-roller ./src", "5351bd745b950437daffe6cd6f87a548": "FROM python:3.8.1-alpine3.11", "a83b0544236349a4a68bf6207786a7ec": "RUN apk add --no-cache ffmpeg curl", "d3ae9db729977019ebee9b1cc619c480": "RUN ffmpeg -version", "4dbc812551bb035ddbcbccd3bfbe2a19": "COPY /app/media-roller /app/", "7bc9333a235fba6fb28e283abf5887c3": "COPY templates /app/", "da054efcc7352c95d4f572a9caa143f8": "RUN youtube-dl --version", "043067bad69534271578840db52cdf24": "CMD /app/media-roller", "8e0b28a4403510be5a5757c7826a0f17": "FROM golang:1.13.1-buster AS build", "e5a319c46054c2cb037f84456ddaf8d7": "RUN go get github.com/michenriksen/aquatone; exit 0", "221da89adb70b794eab809875545e8f7": "RUN go get -u github.com/tomnomnom/httprobe; exit 0", "e870e1aea3d364595da164f79d63b75e": "RUN go get github.com/tomnomnom/waybackurls; exit 0", "ea10e070e2eeaf9d04ad1e653d76f5e6": "RUN go get github.com/OWASP/Amass; exit 0", "d95671ed5b600b21f9557730f7685b9b": "WORKDIR /go/src/github.com/OWASP/Amass", "eb00d94b7fb98a8c5590bbe975c8ecf9": "RUN go install ./...", "df6924bd55e54f1d80dde695fb47cee8": "LABEL maintainer soaringswine", "74ab21ceb4020ad850c2b411a6acb75a": "ENV HOME=\"/home/lazyrecon_user\"", "a1bedc745f1bf6a58a97e0528c1ff222": "ENV TOOLS=\"$HOME/tools\"", "b34772fcafbf46942b6dad950882b968": "ENV TERM=\"xterm-256color\"", "08ac0aa37a5ae95669d1840658324644": "RUN apt-get install -y --no-install-recommends --no-install-suggests libcurl4-openssl-dev libssl-dev jq ruby-full libcurl4-openssl-dev libxml2 libxml2-dev libxslt1-dev ruby-dev build-essential libgmp-dev zlib1g-dev libssl-dev libffi-dev python-dev python-setuptools libldns-dev python3-pip python-pip python-dnspython git rename nmap wget curl chromium-browser locales", "d1a3a36d7700ae5a3164610c2df9bdba": "RUN apt-get clean autoclean", "f7ab9385dac6adb86779b36e4cd304c4": "RUN rm -rf /var/lib/{apt,dpkg,cache,log}/", "fb4bb04c5a8d6aa5c4622c9552baed34": "RUN ulimit -n 2048", "b3e52442bd11f45af35b86e9308ded5f": "RUN localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8", "c59d490113827002702ddae84b46bb69": "RUN useradd -m lazyrecon_user", "1f7c4a77db1670262064bd9b3d1e5536": "ENV LANGUAGE=\"en_US.UTF-8\"", "e6ac4c6c29e431ed9147d1c3098ac0ad": "WORKDIR $TOOLS", "f6bc58e178d046f84c92d4aac1af7000": "RUN git clone https://github.com/aboul3la/Sublist3r.git", "11e106ed6bbc40fdc776d0ab8636241b": "RUN git clone https://github.com/maurosoria/dirsearch.git", "2deb6f44c1ec48a8db5bece5785a2f4f": "RUN git clone https://github.com/blechschmidt/massdns.git", "96ecae2e3b35c5aa4cff551afc8f25dc": "RUN pip3 install dnsgen", "977c78c47a53e90a4968a486a04f80f3": "WORKDIR $TOOLS/lazyrecon", "aa44246b9dc4b2be6ede64fadac5cb9d": "RUN wget https://raw.githubusercontent.com/soaringswine/lazyrecon_docker/master/lazyrecon.sh", "1abd5af233abe7ff4b98d7e225ed9191": "WORKDIR $TOOLS/Sublist3r", "d35967c7b199614959a47ddf8e4ac04d": "RUN pip install -r requirements.txt", "5b1787e2bd5c1fe7780750317bf76075": "WORKDIR $TOOLS/massdns", "8a06cd47bf46d09f807ace4f668a9ad0": "WORKDIR $TOOLS/SecLists/Discovery/DNS/", "591a63e5d67fac35220ecd9ea14da9d7": "RUN wget https://raw.githubusercontent.com/danielmiessler/SecLists/master/Discovery/DNS/dns-Jhaddix.txt", "5d362686f6b2790a96de95333ff7fc2d": "RUN cat dns-Jhaddix.txt | head -n -14 > clean-jhaddix-dns.txt", "b46cceec73a5a6ab6ca3403142e75e6d": "COPY /go/bin/amass /bin/", "2de6659ed627fa0124f24cb96795a25e": "COPY /go/bin/aquatone /bin/", "e80577878aa198d9a95947ffb76b57bf": "COPY /go/bin/httprobe /bin/", "77e615901a1ddcaf70400cacd47459cf": "COPY /go/bin/waybackurls /bin/", "f3d3b02cd8737f34bcd908efbab40dda": "ENV UID=\"1000\"", "d5a7554fb06ac95f8df8ea17b8b8c049": "ENV GID=\"1000\"", "64438dc0604959f46e5e1332ecf18908": "RUN chown -R ${UID}:${GID} $HOME", "8dd700164d6c59b3b8ada92e71b05801": "RUN chown -R ${UID}:${GID} /usr/local/lib/python3.6/dist-packages/tldextract/", "5920a72e39c69caa38ee8fd226a8b7d5": "USER lazyrecon_user", "59d069ad2ea63e7c2003ca79b59f764d": "ENTRYPOINT [\"bash\", \"./lazyrecon.sh\"]", "bf52d523fd898142b5af03506d5f0da3": "LABEL maintainer \"Knut Ahlers <knut@ahlers.me>\"", "8c27ca66c67f691de59705e9e35c21bd": "ADD . /go/src/github.com/Luzifer/mondash", "50d9e8a63c4618d35ac50c79db0d5cb6": "WORKDIR /go/src/github.com/Luzifer/mondash", "35ba18b32d9dbc27c95da6729075b1ee": "RUN apk add --update git ca-certificates", "37f0c668299d39442b636345d2e1fea3": "RUN go install -ldflags \"-X main.version=$(git describe --tags || git rev-parse --short HEAD || echo dev)\"", "b768372264b9b25eb178ded6e9ed00a1": "RUN apk del --purge git", "a79e78507d723c7c69a780faf7ebc03f": "ENTRYPOINT [\"/go/bin/mondash\"]", "a5c1b78926cac457096e0a6d6d7d6216": "CMD [\"--\"]", "5999f1301f590cebfac5707a7b75e36c": "FROM golang:1.11.4-alpine3.7", "3dd9d5edfe9564a18f65082bfd1b1213": "LABEL maintainer=\"Minio Inc <dev@minio.io>\"", "1f2d89fbcf68690630e079c9dbf21fc0": "WORKDIR /go/src/github.com/minio/", "a98f8d52ef77132dc08682f9682ed304": "RUN go get -v -d github.com/minio/mc", "cc6c5949d7383c4d6be556cac80ec960": "RUN cd /go/src/github.com/minio/mc", "389de4d68cffcfd0aad8e5577a2af9ef": "RUN go install -v -ldflags \"$(go run buildscripts/gen-ldflags.go)\"", "5caf21fac33d895a4b4b15dac10a9f84": "COPY /go/bin/mc /usr/bin/", "3480025818607920ee3b80e58c75e106": "WORKDIR /go/src/AlgoreaBackend", "f21c77c3399c8d0e014333384dc1a632": "RUN apt-get install -y --no-install-recommends default-mysql-client vim", "57718d0f5b53964deb2982ec874f8e9a": "CMD \"AlgoreaBackend serve\"", "1e8d03f06b4bee432651258ab25d2590": "COPY . /go/src/github.com/lordralex/mightyena", "25ccef62483b0c8bdff7047aefe8b268": "RUN apk add --no-cache git py-pip", "3c90016b363a2ad7844111104d596245": "RUN go get github.com/lordralex/mightyena", "2702d0ff3fd117b4d009e02cc3351eb2": "RUN go install github.com/lordralex/mightyena", "5005f211bb9575dc5b1217cae58dc832": "RUN rm -rf /go/src", "74a36597e23c4e276f40b1521efb3fdf": "RUN apk add --no-cache py-pip", "9918469e874f585c4fddafdffdb4b905": "RUN pip install mcstatus", "c3d064d49d9659f377d49ca4bb65940b": "CMD [\"mightyena\"]", "706c9e6034b543b1fccedb05efd305eb": "MAINTAINER Sawood Alam <ibnesayeed@gmail.com>", "b277ada45e5855856a6ed37655974da1": "COPY . /go/src/github.com/oduwsdl/memgator", "e62286740e9fddbab6a624467205a017": "RUN apk add --no-cache make gcc musl-dev linux-headers", "0d1a4243c7abcf0c9bd7734fa37e56ab": "ADD ./MATRIX-TESTNET /go-matrix", "5511288e888205a4a00ff14142de0d3c": "RUN cd /go-matrix", "475aa14edec75964e8e329b49dc733ee": "RUN make gman", "5d1d03f8e6fe7eba8d7f70b03fda33c2": "RUN ln -s /go-matrix/build/bin/gman /usr/local/bin/gman", "1e0aa90051fa14c1d5016cca78c0891a": "EXPOSE 40404 50505 8341", "14472d10caac6bd2b90d60a1896760c5": "ENTRYPOINT [\"gman\"]", "f67e63f6ae86a734879a5219b06d4e6d": "RUN go get github.com/alash3al/wsify", "4c477f8940fa1f80d109a711659795a6": "ENTRYPOINT [\"wsify\"]", "749955fc8d9e397f775ea077d9f8f307": "RUN apk --no-cache add curl git", "6f76a8d893ded21e3a8deac073f63238": "WORKDIR /go/src/github.com/mvmaasakkers/certificates", "95564c3c3ac05c6ac7b19e9fe2e9088c": "COPY . /go/src/github.com/mvmaasakkers/certificates", "d43268df43922ec3974bfbe5987fa35e": "COPY /go/src/github.com/mvmaasakkers/certificates/certificates .", "a00206306fafe32e5502ec285202ef31": "RUN mkdir -p \"$GOPATH/src/github.com/lnsp/mattermost-informer\"", "fa29d2e0e77ed8f885621dcba1f28b68": "ADD . \"$GOPATH/src/github.com/lnsp/mattermost-informer\"", "6c00c1dc4102bacee0c8cd7e321913da": "RUN cd \"$GOPATH/src/github.com/lnsp/mattermost-informer\"", "3df826e7b4183102753ef2ded117c870": "FROM golang:1.12-stretch", "818326c1414ee3351c16a8ed728f6794": "RUN echo \"deb http://packages.cloud.google.com/apt cloud-sdk-stretch main\" > /etc/apt/sources.list.d/google-cloud-sdk.list", "4311270c7112b44882ec24f0e7d775bf": "RUN apt-get install -y google-cloud-sdk vim", "c6ecfa564a8b976695a76cda8e4e1176": "ENV os=\"linux\"", "b49fca15137c37f63a7b77d3863f761b": "ENV arch=\"amd64\"", "84e0729dcbd034e4069d6d67a05b6931": "RUN curl -sL https://go.kubebuilder.io/dl/2.0.0-alpha.1/${os}/${arch} | tar -xz -C /tmp/", "d4f9ebd075f69cc68e87efae80ece9a4": "RUN mv /tmp/kubebuilder_2.0.0-alpha.1_${os}_${arch} /usr/local/kubebuilder", "96ec874d04f857d11b29c386960373b7": "RUN curl -o /usr/local/kubebuilder/bin/kustomize -sL https://go.kubebuilder.io/kustomize/${os}/${arch}", "99216021e55ed7f0a917ec2e7f1fc9e6": "RUN chmod +x /usr/local/kubebuilder/bin/kustomize", "05551e80ce612b7170677f28d2159f46": "ENV PATH=\"$PATH:/usr/local/kubebuilder/bin\"", "4bc72c8bbece8452cc7461a19da4b52c": "RUN go get sigs.k8s.io/controller-runtime@v0.2.0-beta.1", "da791e9404239e8185d5462377600537": "RUN go get sigs.k8s.io/controller-tools/cmd/controller-gen@v0.2.0-beta.1", "7d22f8f594396eb8acfd3c87a2866827": "CMD [\"/usr/sbin/crond\", \"-f\"]", "34fbe1d5497ad008de1e254be200bc5f": "WORKDIR /go/src/github.com/otz1/scraper", "6ef4d34be1a3578b0d7648d364783a8f": "CMD [\"scraper\"]", "e45628d937b8142addd833451c24c985": "ENV EXTRA_OPTS=\"\"", "efb5a19817e67198ad21c7a866bf47d8": "COPY endpoint.sh /", "bc8712d0c3527f372182a2226bcdab61": "RUN chmod 755 /endpoint.sh", "b084aa8eeab232c19a4af27bca19acde": "ENTRYPOINT [\"/endpoint.sh\"]", "0f259853284c68044087fba59b9d2b50": "COPY /go/src/github.com/mono83/oscar/release/oscar /", "320d9471e9755812452f56eb17c2c33e": "RUN go get github.com/gin-gonic/gin", "e85686240d01a16e47b6740b3d0c6d21": "FROM golang:1.13.5 as builder", "8382f0b346ece92fe40adf98ae340085": "COPY ./go.mod /src/", "95ab72a18389149b70c56ba8aa52968e": "COPY ./go.sum /src/", "4406fabc57e9c7ec8bd3af145aca3d80": "RUN CGO_ENABLED=0 GOOS=linux go build -o /src/iapap .", "434a9e0c6cac3b9bc476c82c6d02448b": "COPY /src/iapap .", "b02487abc1565b055ee5485072d19d86": "ENTRYPOINT ./iapap", "e136a3371b27683b15279bd18350aa95": "LABEL maintainer \"tomas@aparicio.me\"", "0d5dd84c03868a5222b2bae4b3669375": "ARG LIBVIPS_VERSION=8.9.2", "f7d70a429ab2a9a207f775232d45b1c3": "ARG LIBHEIF_VERSION=1.9.1", "8ccd470f4f97d4ff9815550fcdf86b27": "ARG GOLANGCILINT_VERSION=1.29.0", "c48f53ac172e33031b6a9e96e0dace7d": "RUN apt-get install --no-install-recommends -y ca-certificates automake build-essential curl gobject-introspection gtk-doc-tools libglib2.0-dev libjpeg62-turbo-dev libpng-dev libwebp-dev libtiff5-dev libgif-dev libexif-dev libxml2-dev libpoppler-glib-dev swig libmagickwand-dev libpango1.0-dev libmatio-dev libopenslide-dev libcfitsio-dev libgsf-1-dev fftw3-dev liborc-0.4-dev librsvg2-dev libimagequant-dev libaom-dev", "f8880f228234f9abd825407b52bfa4ff": "RUN curl -fsSLO https://github.com/strukturag/libheif/releases/download/v${LIBHEIF_VERSION}/libheif-${LIBHEIF_VERSION}.tar.gz", "054e747aef8f2e691e594d5b2ad7c90d": "RUN tar zvxf libheif-${LIBHEIF_VERSION}.tar.gz", "61731e5801ab6c90d19ea6d260811264": "RUN cd /tmp/libheif-${LIBHEIF_VERSION}", "8f5ee9201e00734d9a7f052dcb7880af": "RUN ./configure --prefix=/vips", "22859a52f1f4426fa28938b4396d13f6": "RUN echo '/vips/lib' > /etc/ld.so.conf.d/vips.conf", "c39a518330481695d83e15b9701dafd2": "RUN ldconfig -v", "8de8281de094a1cf17c4748ea72ef6bf": "RUN export LD_LIBRARY_PATH=\"/vips/lib:$LD_LIBRARY_PATH\"", "9383144feec683a8b9ef21ffc59891b1": "RUN export PKG_CONFIG_PATH=\"/vips/lib/pkgconfig:$PKG_CONFIG_PATH\"", "ffec48834babb7a69236f63a830f2346": "RUN CFLAGS=\"-g -O3\" CXXFLAGS=\"-D_GLIBCXX_USE_CXX11_ABI=0 -g -O3\" ./configure --disable-debug --disable-dependency-tracking --disable-introspection --disable-static --enable-gtk-doc-html=no --enable-gtk-doc=no --enable-pyvips8=no --prefix=/vips", "743055e06bac178a10409ddd14b21e95": "ENV LD_LIBRARY_PATH=\"/usr/local/lib:$LD_LIBRARY_PATH\"", "f56f271f95cef01fa12347ef82697b0f": "RUN go get -u golang.org/x/lint/golint", "e7f5b29da7871cce02c122d70d1218af": "WORKDIR ${GOPATH}/src/github.com/h2non/bimg", "a044d4187ee632b6a7cc947c09213089": "CMD [ \"/bin/bash\" ]", "cbdd57487de49cc42e3ec0bf672e2c35": "FROM golang:buster AS builder", "bd6a72f74f9c13d317b868d338996353": "FROM debian:buster", "af894abc9c53a3ebc446000593e042ad": "ARG GOLANGCI_LINT_VERSION=1.15.0", "23455a5062e355cf318b3ccdce233e5b": "RUN apk add --no-cache make git", "55d3e8aaec52ff22145853d0922af32c": "ARG PACKAGE=github.com/banzaicloud/jwt-to-rbac", "a61bcc97f2d9cf7e6beee60927cc8653": "COPY . /go/src/${PACKAGE}", "9d2090dadb4802bb0dbe859853864de9": "COPY /tmp/jwt-to-rbac /usr/local/bin/", "08d637ab3071b4b88bb744b95dfab40f": "RUN mkdir -p /etc/jwt-to-rbac", "3efe6d9897a8a1bc5ec80597c185b646": "COPY config/config.yaml /etc/jwt-to-rbac/", "c00ec4d177ebb328a0b07190a4c60456": "ENV CONFIG_DIR=\"/etc/jwt-to-rbac\"", "316da23c1bedea55d3c01c9a08671389": "RUN adduser -D jwt-to-rbac", "289867f3f4b9e417e19b5b7f53326afc": "RUN setcap CAP_NET_BIND_SERVICE=+eip /usr/local/bin/jwt-to-rbac", "26c3cd4a056f470825b302a97aab5139": "USER jwt-to-rbac", "0794cb129eefeb2ecb404adc508d3bfe": "ENV SRC_DIR=\"$GOPATH/src/github.com/bettercap/bettercap\"", "a353e84f98b81dc1124693dfcb58d9a5": "RUN apk add --no-cache --update bash iptables wireless-tools build-base libpcap-dev libusb-dev linux-headers libnetfilter_queue-dev git", "2b92144ca61ad2cc2eaff6dc7311a1ad": "WORKDIR $SRC_DIR", "cbb8b34d7cc8b5c4be9aa3d00dbb1bd4": "ADD . $SRC_DIR", "d16d136cdfa89d5a9fe202b673c04691": "RUN mkdir -p /usr/local/share/bettercap", "606a0719ea89c168f8f564f664eecae8": "RUN git clone https://github.com/bettercap/caplets /usr/local/share/bettercap/caplets", "4f0ffcd1b52209a62ee60136ff01b2dd": "RUN apk add --no-cache --update bash iproute2 libpcap libusb-dev libnetfilter_queue wireless-tools", "50011a83dfc497f50a5e187b34e03365": "COPY /go/src/github.com/bettercap/bettercap/bettercap /app/", "912d170fdf402de0b03281c54ee7f573": "COPY /usr/local/share/bettercap/caplets /app/", "8b3b0a011230384dc75d0934426acb2b": "EXPOSE 80 443 53 5300 8080 8081 8082 8083 8000", "74347614d228f3dec8cf84fcd9af4a78": "ENTRYPOINT [\"/app/bettercap\"]", "240b8d1e07570a197596710a63b8c2cc": "FROM golang:1.14.0-alpine as builder", "52b9d1437f601d4359153925d42a07ba": "COPY /usr/local/app/resources/not_found.html resources/", "55d26d4be1a75c08b7eb3c6a95baa2af": "COPY /app/ip-api-proxy .", "37ae450f82d3331917c94abfc83076fd": "CMD [\"./ip-api-proxy\"]", "307a4eb267472231acf817759d800b95": "RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main cmd/main.go", "1b404a71b4614b26ef57c1ea774b1808": "FROM golang:1.13.1-alpine3.10 as go-builder", "7b8a970ca6576d06fe458db99f2726c1": "ENV PACKAGE=\"github.com/MQasimSarfraz/moodboard\"", "8ec067566b665732a13b7d6074380b5b": "WORKDIR $GOPATH/src/$PACKAGE", "c5a522bbcaf0311b53cda0a617a0a5bb": "RUN go test --parallel=1 ./...", "d198db5270ecf39ada980d8100165db6": "RUN go build -v -ldflags=\"-s -w\" -o /out/moodboard ./cmd/moodboard", "79d2ff8666298174ce7f88d751baf473": "EXPOSE 3080", "d43ebd93c84dfc5398feba65624480c0": "COPY /out/moodboard /", "6cae2369b7cf113afa6d9eb61f9e341a": "ENTRYPOINT [\"/moodboard\"]", "9c5df2c464710522c6914493b1974d91": "ADD Makefile *.json *.js yarn.lock *.go ./", "98501f77fefde740ef0b5d9a621fba50": "ADD static static", "6c7b7d1c6f8a449d19520b783749dafa": "ADD lib lib", "d634d7489c270cc27f45e0cb2485356d": "ADD cmd cmd", "68a3fb716b3386f965f31f3480bd25bb": "ADD scripts scripts", "bfb500c307e499e8f2a4dec9716b9263": "WORKDIR /go/src/github.com/gerald1248/cluster-tests/", "6bb16aa1b62452d359e4560218675b93": "RUN go vet", "d503b3652545cea599c742e674edf2b8": "RUN go test -v -cover", "6fed04fba6a197fe135c8e51ffb6bf37": "RUN go build -o cluster-tests .", "13b3ca7309f45c11fa4400a81f2789a2": "FROM ubuntu:18.10", "7114d94ac871037e94b6f772a53e2c26": "ENV KUBE_VERSION=\"v1.12.0\"", "e0020b261c71eaba9d9e548e77268a96": "RUN groupadd app", "b2938c14c52b4740c711ee85a1c85e0c": "RUN useradd -g app app", "7100a74288f27bcd772f60986f069f32": "RUN mkdir -p /app/output /app/cluster-tests.d", "948544b2691cb5a6bc7461b101d1840e": "RUN chmod -R 777 /app", "5e8f57392c5d6d84a8df9b580e210873": "RUN chown app:app /app/cluster-tests.d /app/output", "a05140c5daa9626279050e43f7ebd7a6": "RUN DEBIAN_FRONTEND=noninteractive apt-get -qq install -y jq apt-transport-https wget curl gnupg", "c4f7ee7c29ea4da39a71991b8d3706b4": "RUN wget -O /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/${KUBE_VERSION}/bin/linux/amd64/kubectl", "bee335ad808d5970583268aff3f18bd4": "RUN mkdir -p /app/output", "0529463cd40d6628c475bbba1e580e5b": "COPY /go/src/github.com/gerald1248/cluster-tests/cluster-tests /usr/local/bin/", "ddbf13ce2e2eb30a14d0479bcfc9e897": "COPY /go/src/github.com/gerald1248/cluster-tests/cluster-tests.d/* /app/cluster-tests.d/", "9e407d2ab664510e00333bc8f805b259": "CMD [\"cluster-tests\", \"-d=/app/cluster-tests.d\", \"-o=/app/output\"]", "bffc802bc245fb1759c58bc880504981": "ENV ROOT=\"/tmp/eth2stats-client\"", "302f7833e179033e2db32914b4dc9069": "WORKDIR $ROOT", "f79cc0d891e0ff4be53a01ff1fabe271": "ADD go.mod go.mod", "9eecfc7e8685d2b410c754f280548fa1": "ADD go.sum go.sum", "ff075412c7a46539d43ca45df0cca9af": "COPY /tmp/eth2stats-client/eth2stats-client .", "dcb07e26f463cfe6db6cdea078ce6298": "ENTRYPOINT [\"/eth2stats-client\"]", "9a017b3a5fd041efc380906322370a90": "FROM golang:1.11 as buildImage", "2dbe9a8a6708b09acb73c9e5a39a0897": "WORKDIR $GOPATH/src/github.com/steffenmllr/validate-kubernetes-deployment", "5f259e31c7bd49379cd5be56e0cc35bc": "RUN GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o validate", "91c818b48abaa61dbe2fe740e7d9c28a": "LABEL version=\"1.0.0\"", "05ed2b6935e1dd8bdc15e3238d5585d0": "LABEL com.github.actions.name=\"Validate Deployment\"", "30bc29212f46f1ce75279269cb9d1773": "LABEL com.github.actions.description=\"Validates a kubernetes deployment\"", "50cc10a572f7f703ed667859607dad92": "LABEL com.github.actions.icon=\"check-circle\"", "7be7fe27ed1a17d1b7f05216142c2706": "LABEL com.github.actions.color=\"blue\"", "245377ea33007755cd2ddf3db5f54d14": "COPY /go/src/github.com/steffenmllr/validate-kubernetes-deployment/validate ./", "a964ecafa9e37b66d0da8569fe333d98": "RUN chmod +x ./validate", "69fbe11e6f39364ef489f6bff1541c48": "CMD [\"/entrypoint.sh\"]", "86eb3027b263440c6ee67670d70b2488": "RUN cd go/bin", "13c164378f19f88aec50c229945c46f1": "CMD [\"rtlamr -server=$SERVER | rtlamr-collect\"]", "f3ba599487be28f65380579a3e4a10a3": "WORKDIR /app/src", "01e0078686cc6798b1ffc615de0b13dc": "RUN apk add git ca-certificates", "be0e081769cb4459d6cf0d2fdfb49267": "COPY . /app/src", "1af49778bd83f857fdb9b847792cae1a": "RUN CGO_ENABLED=0 GOOS=linux go build -o /go/bin/app", "d860105018bedb744c6ab9597f889c37": "COPY /go/bin/app /go/bin/", "a2f8220651e07f0505e6b19380279b99": "ENTRYPOINT [\"/go/bin/app\"]", "dccb3b97e520b04a0162a93884aaccf0": "RUN apk add --update make git nodejs npm curl jq python3", "5c622687cd8fc5af5232f7ba055b924f": "COPY /usr/local/go/lib/time/zoneinfo.zip /usr/local/go/lib/time/", "2c627c8fc5fcb5aae4c412a158196136": "FROM golang:1.14-alpine as builder", "87d240d542ad1ee4d8837384ca9f1940": "RUN apk add --no-cache git make g++ gzip", "6a0212d0fedd59fba05a3883440b7319": "WORKDIR /go/share", "a17bb1c7dd248efe4fbe4422c42970b2": "RUN go generate", "32a005cdaa1371741050787f0694d80c": "EXPOSE 8222", "2e04906a8cbe8b7ea69a700aab5e1769": "COPY /go/bin/share /", "c34f8cadadb186fa6fd57fdc02c8820a": "ENV url=\"http://localhost:8222\"", "531678fd5251fcd9bae84f66e39bd91a": "CMD [\"sh\",\"-c\",\"/share --debug --min-per-gig 120 --max-file 500000000 --data /data --public ${url}\"]", "85fe7ca6269b280e6fca9e4126149a1d": "ENTRYPOINT [ \"/usr/bin/env\", \"sh\" ]", "5d0706b3a328eb2d93c966b0ca1ad7c1": "COPY /src/dist/productctl_linux_amd64/productctl /usr/sbin/", "501f4e28894d1683aa672251f643f4f8": "ENV GOPROXY=\"https://athens.i.ddex.io\"", "9eba2a9c8cce0ebc4e97eea2ff029466": "RUN go build -o main -v -installsuffix cgo -ldflags '-s -w' .", "4dd7e2187712dc07407ab606b6ef7483": "COPY /app/main /bin/app", "c8ba4c88e2964ab2cdce4d5763754b48": "RUN go build -gcflags=\"${SKAFFOLD_GO_GCFLAGS}\" -o /go/bin/frontend .", "aa481f7dd1ed3c4657a95c5f2d17ea26": "FROM alpine:3.18.0@sha256:02bb6f428431fbc2809c5d1b41eab5a68350194fb508869a33cb1af4444c9b11 as release", "1ad4a8559b466c8df542ce8f7def36fb": "RUN apk add --no-cache ca-certificates busybox-extras net-tools bind-tools", "9d157c4c4e9080429502d4db85059745": "COPY /go/bin/frontend /src/server", "e335b69bb2e406db11375d39f13f64de": "ENTRYPOINT [\"/src/server\"]", "5639046e67f499a319822a8da3eded62": "FROM golang:1.14.2", "3456c7e51f1d84dc74d5f46565c616ed": "RUN git clone https://github.com/nopp/statuzpage-api.git", "03597fd1c8fddccba158e4011733b41f": "WORKDIR statuzpage-api/", "48e84c922c066a88eb0c21c5c1839267": "RUN go get -d -v github.com/go-sql-driver/mysql", "c43fbd574f3dfdf00d6b07534024c81e": "RUN go build -o statuzpage-api .", "fde0e2b4d7e2c2cbe2a584f793b996a4": "LABEL maintainer \"Carlos Augusto Malucelli <malucellicarlos@gmail.com>\"", "0f7d65b12a7038ef14069c14089f2509": "ENV mysqlhost=\"localhost\"", "71f87cae81951ea0ada3b7df1b0f0f24": "ENV mysqluser=\"user\"", "48e973ceb8212a05985ed9e541b8118c": "ENV mysqlpass=\"pass\"", "fc554ec239dd1605e93b76e5ad49ab51": "ENV token=\"123\"", "b9a18297c2eadeb7c589561c9f3efffa": "RUN apk --no-cache add ca-certificates openssl curl", "8e6ca30415928a3a96916728c57681cc": "RUN curl -o /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub", "4c9611d7dba7b1fbc726cb80bea66506": "RUN curl -LO https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.28-r0/glibc-2.28-r0.apk", "06644331961f568ebd1626a3eb824321": "RUN apk add glibc-2.28-r0.apk", "95105009ec6eabeb9afb584d5513bc37": "RUN mkdir /etc/statuzpage-api", "3af6309fbc67beac74640e57be52ac98": "COPY config.json /etc/statuzpage-api/", "9bda8d848a53afe17b45a694e6ad1098": "RUN sed -i s/xxxmysqlhostxxx/\"$mysqlhost\"/ /etc/statuzpage-api/config.json", "ce413f53a8125b82538bed3d09f47f15": "RUN sed -i s/xxxmysqluserxxx/\"$mysqluser\"/ /etc/statuzpage-api/config.json", "b2b47aa23b01d875f792bf72b48154f8": "RUN sed -i s/xxxmysqlpassxxx/\"$mysqlpass\"/ /etc/statuzpage-api/config.json", "8b1ed3715d516c3548930838935cbce5": "RUN sed -i s/xxxtokenxxx/\"$token\"/ /etc/statuzpage-api/config.json", "02b36e3f44c29931117484ace0231643": "COPY /go/statuzpage-api/statuzpage-api .", "1e85fe6427129a3290023bc07473aee7": "CMD [\"./statuzpage-api\"]", "2de8923db17e339d676967f69197fd4f": "RUN apk add --no-cache bash git openssh make", "8dbc48106f68af5a2f6c94093397f7ce": "COPY * /app/", "ec06c40ef57400809068737d4f4090b5": "ENV PASSWORD=\"changeme!!!\"", "fad8f528edb30a987978d9202de8cbbf": "CMD exec ss-server -s $SERVER_ADDR -p $SERVER_PORT -k $PASSWORD -m $METHOD -t $TIMEOUT -d $DNS_ADDRS --reuse-port --fast-open --no-delay $ARGS", "fdf54cf85951a2b9ba722bcedef8f405": "ENTRYPOINT [ \"go\", \"test\", \"./...\" ]", "faa46763c09e5a4c8711cc0b5f38b282": "RUN apk add --no-cache musl-dev gcc # for building deps", "0aab5b1dcf25fca9d4804f52cea4b84b": "ENTRYPOINT ./gindoid --debug", "b949cfb5257308ff8e6a6332b08cfe7a": "FROM golang:1.13.4-alpine3.10 AS builder", "17d432add163a1119cc1864c7f2cae46": "WORKDIR /go/src/slack-counter", "e7c4e0b9e6d256135f7b36d7267825d9": "RUN go build -o=/build/slack-counter", "c9d65ca673aae374c21b0bbd28b13ce0": "COPY /build/slack-counter /build/", "5cb7bbc4d6aa406b666877dd9ff20dc9": "RUN chmod u+x /build/slack-counter", "0c3dcd3e6338f1ab62a7f8fc7d319d76": "ENTRYPOINT [\"/build/slack-counter\"]", "8a7becdde86a1fffb308be43f1562d0a": "MAINTAINER dashpole@google.com", "b0dbea8a71dd77c62598a89a740c1d31": "RUN apt-get install -y git dmsetup", "45dc1799d2d8099c8c95fc7702ef2bbb": "RUN git clone https://github.com/google/cadvisor.git /go/src/github.com/google/cadvisor", "8dc3a4290454540e176d187da9af32bd": "RUN cd /go/src/github.com/google/cadvisor", "8b860b3b2ef3fda629b474ee57f9c2b6": "ENTRYPOINT [\"/go/src/github.com/google/cadvisor/cadvisor\"]", "ab75e717f603622ad0f793242f781983": "RUN export GO111MODULE=on", "ac42b2c127e9891d06fedecb412a389d": "RUN export GOPROXY=https://goproxy.io", "694c07c3092185d961efbff335c94972": "RUN cp .env.$ACTION .env", "3fe437fa13b68733dcd396aa2ebe6bea": "RUN go build -o main Index.go", "9868211632ac3bfe855b5dd10ab6ce78": "RUN chmod -R 700 /app", "eeb70287e15323199a3239c89ea6f4a4": "RUN chmod -R 700 /bin", "0394b1b3f34b7ea48b89b57675f67398": "COPY main.go template.html static ./", "5451124f521fdc32493768b5d5055701": "COPY /go/src/github.com/alexellis/href-counter/app .", "0166e29403cb64365cc3cca44a17d579": "ENV NODE_VERSION=\"12.7.0\"", "a8d9443befaab42c28c8f88a65b59e98": "FROM golang:1.14-alpine3.11", "e003a73e6a1cefc481996258d782fc93": "RUN go build -a -o statcollector .", "b16505aadc301ac8afa4824cb7508e67": "FROM alpine:latest as runner", "c258bc1095078e83ae3d374f06c57f99": "COPY /go/src/github.com/vistrcm/statcollector/statcollector .", "92413603a6aa758e1ef2e097c1693e38": "CMD [\"./statcollector\"]", "58b32167f1388602cc0bfe545c818efd": "FROM golang:1.20 as builder", "d4b3f56a559cd478e7b4888f17e38539": "COPY /src/dist/productctl/productctl /usr/sbin/", "dfaec21049fbd8514e8391482168dcb3": "FROM golang:1.11-alpine AS build-env", "566c90c29709f13e902a3b7a59b04d31": "WORKDIR /go/src/github.com/ilhammhdd/kudaki-order-service/", "959b851584a7b28ea8f1b264b4b36ddc": "COPY . /go/src/github.com/ilhammhdd/kudaki-order-service/", "61c1429edd32e43547e5aec053a061ca": "RUN go build -o kudaki_order_service_app", "a77b8833e17a642e5f31aac0b97c5fa8": "ARG KAFKA_VERSION=\"\"", "25f68d3718b956f5011cf67dec6f690e": "ARG KAFKA_BROKERS=\"\"", "69e49c27ca2b9699516f239aa63b8621": "ARG QUERY_DB_PATH=\"\"", "e81882a3e4dcb0aa677be239701cbbc5": "ARG QUERY_DB_USERNAME=\"\"", "2e7b4ce363ebe9c7664f040eac1d126a": "ARG QUERY_DB_PASSWORD=\"\"", "782acf95a4d91fc6f417cd6bcd60f02d": "ARG QUERY_DB_NAME=\"\"", "fc62aa02cbd90b86d80aa3991dd5a353": "ARG DB_PATH=\"\"", "bbffbc99511b08e93ecba42ad84d07c7": "ARG DB_USERNAME=\"\"", "a68aa41a3277773ff34dffe7f07044be": "ARG DB_PASSWORD=\"\"", "8597f8e1ed09a6e33fe6547ce160821f": "ARG DB_NAME=\"\"", "e32487c3e7c1288ccd1b7c8c1a0abf4b": "ENV KAFKA_VERSION=\"$KAFKA_VERSION\"", "eb08149629b9804638010bb0162c1710": "ENV KAFKA_BROKERS=\"$KAFKA_BROKERS\"", "4f6772fa6bd4e946ce93edfad97899da": "ENV QUERY_DB_PATH=\"$QUERY_DB_PATH\"", "952c90dcb73e148f0880874b12f5fd28": "ENV QUERY_DB_USERNAME=\"$QUERY_DB_USERNAME\"", "c17df1e1f8065d89aea9b3551f03db83": "ENV QUERY_DB_PASSWORD=\"$QUERY_DB_PASSWORD\"", "a0601bd861fb11e922566b57d365c427": "ENV QUERY_DB_NAME=\"$QUERY_DB_NAME\"", "5e5676dfd0b20e28f1ae3eacd328e995": "ENV DB_PATH=\"$DB_PATH\"", "b025d03fe46c01ae1ca93ef6490b8c68": "ENV DB_USERNAME=\"$DB_USERNAME\"", "188851088d8a82728b97a6b38eba6149": "ENV DB_PASSWORD=\"$DB_PASSWORD\"", "9e3f8494fa825b2e2beae49c4c4fbeeb": "ENV DB_NAME=\"$DB_NAME\"", "52c2dd05458c98233691f2c35cdd6566": "COPY /go/src/github.com/ilhammhdd/kudaki-order-service/kudaki_order_service_app .", "ddf73d97f76127a62fafe7b16e3fa6a8": "RUN mkdir /certs", "5aa1fecccc233ce41cd8d486079559f0": "VOLUME /certs", "40795cd6e168902a321d110d95cf0be7": "ENTRYPOINT ./kudaki_user_info_service_app", "c05269adfa6dc28161378ca6259ececa": "RUN env", "569f932f59c17b78006240f33017d2d4": "RUN ls /", "c49189815bb6c460878b31c59f7bb5bd": "RUN find / -name alive.go", "ae5b273016d8569a4c1fde2b249157a7": "COPY /go/src/github.com/nkex606/docker-trigger/* ./", "f74cc209a6d9db2023cf3c39ea282415": "RUN git clone https://github.com/minio/mc", "fb4d9b153c2b5e6d4941f51aabc679fb": "RUN cd mc", "3401ad7e1c600ee3df5cad572f4a2cab": "FROM golang:1-buster as grpc_interface_builder", "1d5bb0a236731983f3ef0ddf76fd4815": "ARG DEBIAN_FRONTEND=noninteractive", "e6af98be802fec5df385b4117a6efd5e": "ENV GOPATH=\"/root/go\"", "4c390e4e96a0eaa6edb0f79b7011cfb2": "RUN apt-get install -y python3 python3-pip python3-setuptools", "88266fe159c176595fbcb93aa82c045a": "RUN pip3 install --upgrade grpcio-tools", "1e1e3f62fcfcdeefa88fa66e0cfd8407": "COPY . /pilot", "adc8e62ea825dc1886658093ecf940d0": "WORKDIR /pilot", "228647bb5f80c3445b7b7dc4c21ad885": "RUN mkdir -p \"$GOPATH\"", "e22ad2f84cc7ed94371158a7203f102b": "RUN ./scripts/build_grpc.sh", "995dfe9d6ef8b848877b29bf5da082e7": "FROM debian:buster-slim as gobgp_builder", "c1d88318026a6d385009cc1193f1013c": "RUN apt-get install -y wget tar", "7f0bf6081782b9fe917727cca9b93411": "ARG GOBGP_DOWNLOAD_URL=https://github.com/osrg/gobgp/releases/download/v2.15.0/gobgp_2.15.0_linux_amd64.tar.gz", "4b6513f608901e67dead5e869196b19c": "RUN wget ${GOBGP_DOWNLOAD_URL} -O gobgp.tar.gz", "43b8c1e09c72614b6962c5da5d157ef7": "RUN tar -xvf gobgp.tar.gz", "1ec7cc0527b37475b36914b62d953a2f": "FROM python:3-buster", "f6f4d8108c324e64b7e40b0df712e0ab": "LABEL maintainer=\"docker@public.swineson.me\"", "8b36ec03e2bc2b7962b984c5df8ee94f": "RUN apt-get install -y --no-install-recommends supervisor curl", "0aff037f5de6953ee5f41c562f605834": "COPY /root/gobgp /root/gobgpd /usr/local/bin/", "1f1761e6ea604a792e04d921835c24c8": "RUN setcap CAP_NET_BIND_SERVICE=+eip /usr/local/bin/gobgpd", "5267c0b89f6f5bfbf8419daa128af141": "COPY . /tmp/pilot", "ac7923dcbdcf8781f6cf5b8a76437ce3": "COPY /pilot/pilot/gobgp_interface /tmp/pilot/pilot/", "ed05682304f3f18d18c1550a2f842217": "RUN cd /tmp/pilot", "4956987ecb547a78a322d072c623f73f": "RUN python3 setup.py install", "964dfe4fb013a43bcf822b2e7fe7fa84": "RUN rm -rf /tmp/pilot", "7e1e6297acd42a364f5ea1650764de0c": "RUN setcap CAP_NET_BIND_SERVICE=+eip $(realpath $(which python))", "533477963f84e7097255ffcd05d394f3": "COPY supervisor /etc/supervisor/", "91d0d73a80dfead8971cc34b5cac4108": "COPY config /etc/pilot/", "6c345ef71588a2370d683b3d14b47124": "ENV GOBGP_API_LISTEN=\"127.0.0.1:50051\"", "c034ab24a0c30e6a825ca4b3575b447b": "EXPOSE 80/tcp", "0c7b6661d85f2dcbea8f3745a2515267": "CMD [ \"supervisord\", \"-c\", \"/etc/supervisor/supervisor.conf\", \"-n\" ]", "0fdb27c73aa574a2703717c7d4216f5b": "FROM golang:1.12.1-alpine", "cb29488408e624cda892ae2d0b6a7a95": "RUN apk add git curl netcat-openbsd wget net-tools vim bash", "45e20eb3d029c55736705f9194410159": "ENV PATH=\"/go/bin:${PATH}\"", "ac5101fa2aa1aa2eed7f166da8ddd220": "RUN git clone https://github.com/bitmark/bitmark-node-updater", "a8af4c820e5251613c57e5268d3e8541": "RUN cd /go/src/bitmark-node-updater", "124c6c3f2a94df2936ae72e26c75e549": "ADD dockerAssets/start.sh /", "4abb1e732ccd1e7b980b7682e16f1e84": "RUN chmod +x start.sh", "aea28b755abfb356b61b06559e75e575": "CMD /start.sh", "208809756c9afcda6c0c8a9fe4993723": "COPY scripts/dependencies.sh /scripts/", "43aa57f09264036fa34ae08e08064bc5": "RUN /scripts/dependencies.sh", "124fb53425bccde6e471880ca509cb61": "COPY scripts /", "a85a90d2ba976a1da9ff0e7c4ab88f40": "COPY rails /", "37185285963765d72cf8137af9b79d6a": "CMD [\"sh\", \"-c\", \"cd\", \"/go/src/app/src\", \"&&\", \"go\", \"run\", \"main.go\"]", "f55425bb99dbb3984392ba610d554b09": "ENV GOPROXY=\"https://mirrors.aliyun.com/goproxy/\" GO111MODULE=\"on\"", "e32760584f3671fc3a177f237958fdd9": "WORKDIR /go/src/sshfortress", "a91c0dce059578155d0e51f0a03d1700": "RUN sshfortress -V", "51ed6034b9619e089fe785f6c117311e": "VOLUME /go/src/sshfortress/config.toml", "db7d4de89fdfcc1a1c025d439230891e": "CMD [\"sshfortress\",\"run\"]", "93dc0b39d0a04f1288c87b1b7c2704b7": "RUN go build -o bin/mclogger main.go", "54dc0043f73319d3168e0ebe255f8b87": "COPY /build/bin/mclogger /app", "2b13494541527c4b1c3f882d575810a5": "COPY ./project .", "d6eaaec6c39cd29dcddfe1349b70cf0b": "FROM golang:1.14-alpine AS builder", "b4ce2f35a39910d6184e8c81661e7d19": "RUN addgroup -S app", "6b1d627c16d3f16e0a28a2235be383f1": "RUN adduser -S -G app app", "6ab3e4ecad6a0a2fd824710df286e6e4": "FROM builder AS with-postgres-client", "448c4c9c55d4e546c741deaeed3cdff3": "RUN apk add --no-cache postgresql-client=12.2-r0", "cb8fc4df91063c4a5390fdf80fd5f996": "COPY /go/bin/pgmasking .", "97964ced02a2958228000e10349c1cab": "ENTRYPOINT [\"./pgmasking\"]", "e7b36d1a77f13d671e9799e5d57b8cb7": "COPY . /go/src/github.com/andreimarcu/linx-server", "bfc3f936b58a1ce88abaaadd006925d4": "WORKDIR /go/src/github.com/andreimarcu/linx-server", "300383169e8911947f41dd7a2583b0f7": "COPY /go/bin/linx-server /usr/local/bin/", "b1bbc63630909e3397d099d240d5125e": "ENV SSL_CERT_FILE=\"/etc/ssl/cert.pem\"", "5dadf8363a64d157546cdd0a3bee3a37": "COPY static /go/src/github.com/andreimarcu/linx-server/static/", "7e3f94afc922d3d821ef965367adbcc5": "COPY templates /go/src/github.com/andreimarcu/linx-server/templates/", "b83ed6e32a9e7541b1e189d890d74484": "RUN mkdir -p /data/files", "153d36ac90e7049f9c96ee0d199d2a9a": "RUN mkdir -p /data/meta", "609749f77a659c14d1e74fd2110e2bae": "RUN chown -R 65534:65534 /data", "8eafe5074dd510fd48a1fa6b859202b4": "ENTRYPOINT [\"/usr/local/bin/linx-server\", \"-bind=0.0.0.0:8080\", \"-filespath=/data/files/\", \"-metapath=/data/meta/\"]", "865432ee09d43034ad72fa5b50dd3b92": "FROM golang:1-alpine", "f619e0f75fd391d3b7ae85aefd39f03a": "ONBUILD RUN go build -o build/service -mod=vendor -ldflags \"-X main.revision=$(git rev-parse --verify HEAD)\" service/*.go", "bb0dde167fd85454ae21d5072b636159": "ARG TOAD_VERSION=0.0.2", "0e0a2e3db12832ca16d8d801f467c760": "RUN CGO_ENABLED=0 GOOS=linux go install -installsuffix cgo .", "54a2018ee636b202e9139be87da92c94": "COPY /go/bin/cmd /usr/local/bin/anchore-image-validator", "2824bf8e6705747453325153b934a411": "FROM golang:1.9-alpine3.6 AS development", "9d454ba0ca0a6785d94e7f3e6c613451": "COPY . /go/src/rest-and-go", "007f0382b4a5d22d8b9284f8f3a9e7b4": "WORKDIR /go/src/rest-and-go", "147d630a177dc87aafff50d079b63da4": "RUN chown -R nobody:nogroup etc/crashplan-ffs-puller /crashplan-ffs-puller", "a15e59598efabd721bbc84c3e262fb89": "ENTRYPOINT [\"/usr/sbin/update-ca-certificates & /bin/crashplan-ffs-puller\"]", "1f971c0f855d72f0cf8c09774858ba11": "MAINTAINER zsfree \"963916753@qq.com\"", "69285bc7c340aaefd05e029b1c6b6afc": "RUN mkdir -p $GOPATH/src/github.com/zsfree/cy", "add90357c6af068c05bc62f906538869": "FROM golang:stretch AS builder", "eb3d32dd90e38772ab8f0f234e136217": "RUN go build -o /go/bin/deckhand", "6e81c920921066082ac9f202dc9b1cfc": "COPY /go/bin/deckhand /go/bin/", "9dccae8bdf0e525c46f98bb8eb72451a": "RUN apk add --no-cache imagemagick git gcc libc-dev", "089a6d691bafec21b6561d92f9fbee12": "FROM golang:1.10.2-alpine", "aba14901dea6e19b421e291e6972096e": "RUN mkdir -p /go/src/github.com/emitter-io/emitter/", "1992d3bbcaaf355830016afcc7109358": "WORKDIR /go/src/github.com/emitter-io/emitter/", "2d4703400764a16d199f6eaca400a810": "ADD . /go/src/github.com/emitter-io/emitter/", "a878aedf7823794ecce00bd1fabf5c1a": "RUN apk add --no-cache g++", "9467c0a2e22c6e31e966181a0dbd2663": "RUN git checkout v0.6-beta-rc4", "c35d55e1396ccf7e5748a9b612c06a36": "RUN adduser -D -u 1000 -h /var/lib/imago imago", "b200046f946931cc9e7208ad88258dba": "USER imago", "241d9da7afe7d139d4809d2a5a509af9": "WORKDIR /var/lib/imago", "d9a65ca5966aa25c85f923663529ff0f": "COPY /var/lib/imago/imago /usr/bin/", "ed596bab715a0149e9b70ef9c968f3a6": "ENV USER=\"imago\"", "5840396cecaed48d1d276806c24a012a": "ENTRYPOINT [\"/usr/bin/imago\"]", "44271a17cf9868c759b2c641030513d1": "RUN go get github.com/aws/aws-sdk-go", "f9fdb31f55713e383f61e88e5039cde9": "RUN go build -ldflags \"-s -w\" -o drone-wechat .", "42239633e8107dac77837dbba35f36c1": "COPY /build/drone-wechat /bin/", "8039992eb0443c7b695b12b96ac7d38e": "ENTRYPOINT [\"/bin/drone-wechat\"]", "2dfc606f4c7937c7cb3429e1bed7578b": "ARG TOAD_VERSION=0.1.5", "d622441e04ff81d3ea33cd2a2e862598": "WORKDIR /opt/briefmail", "17a87da6913a112059d5888ebc8e6f70": "COPY /temp/build/target/briefmail /opt/briefmail/bin/", "bb4fe2454408cfc05a552e9bbe4458e5": "VOLUME [ \"/opt/briefmail/etc\", \"/opt/briefmail/var\" ]", "396ee522a0824422e12bc206fe277227": "ENV BRIEFMAIL_CONFIG=\"/opt/briefmail/etc/config.toml\"", "a9cd003ddefb9e8605f759346931fb64": "ENV BRIEFMAIL_ADDRESSBOOK=\"/opt/briefmail/etc/addressbook.toml\"", "cfa9aaf44ba044d67aa5f7eb129bd748": "ENV BRIEFMAIL_DATA=\"/opt/briefmail/var\"", "d562c61b487b51b3565761d8d8643735": "ENV PATH=\"/opt/briefmail/bin:${PATH}\"", "44f7cda30f3f22736a83eb52e499840c": "CMD [ \"briefmail\", \"start\" ]", "51b79d8ed215ec5f9aacfc8cb28049e8": "FROM golang:1.11.5-alpine AS Builder", "4d3cfb8986c22e9dcb7fbe10b3ee22ca": "WORKDIR /go/src/github.com/MovieStoreGuy/skirmish", "484080842b48544dc692a93281d50dfe": "ENV GO111MODULE=\"on\" CGO_ENABLED=\"0\" GOOS=\"linux\"", "0863b45bd0681f559d92364389c566c2": "RUN go build -ldflags=\"-s -w\" -o /skirmish", "056b1dc7b66893f9c4dcb40b4a59b5d4": "LABEL Author='Sean (MovieStoreGuy) Marciniak'", "e830a660dd8fc8fa7385bb41cd3387f7": "COPY /skirmish /usr/bin/", "90fe992c513612f5aba90428bb99d12c": "RUN apk --no-cache add dumb-init ca-certificates", "10e20c64554f165d4c016222f7818acb": "RUN addgroup -S skirmish", "20eef042400b14d574cf9ae67c835cce": "RUN adduser -S skirmish -G skirmish", "eed57f70200f6b13426721c846954ce5": "USER skirmish:skirmish", "22f8b9880dcf252265cdc1313f81b337": "WORKDIR /user/skirmish", "a966a6f16ffe9db56e780ec34cdef6a8": "ENTRYPOINT [\"dumb-init\", \"--\"]", "790860efe5ec9a4fdd9e1338cd0c232b": "CMD [\"skirmish\", \"--plan-path\", \"${SKIRMISH_PLAN}\"]", "5ef339e2c67ff37b0ddc2eee970f64eb": "ENV REQUESTS=\"\"", "438590c706f55924eda356196cba0fc1": "FROM golang:1.12.1-alpine3.9 as builder", "7a121c5205eb1991200c0520dbc56bff": "RUN CGO_ENABLED=0 GOOS=linux go build -a -ldflags '-w -s' -installsuffix cgo -o json-rpc-loader github.com/skabashnyuk/json-rpc-loader", "aaaa49c49c5ee33c21a4a56911ba5530": "COPY /go/src/github.com/skabashnyuk/json-rpc-loader /usr/local/bin", "69e0661b659a405324c0727469b6ed51": "ENTRYPOINT [\"json-rpc-loader\"]", "2a1ad6b0eb4220406f43007d802381e1": "COPY api /public/", "5ee6c3d4376fd76e6159d89955772593": "COPY png /public/", "83d1c139f4fd86e178b40c0164ab3eca": "COPY svg /public/", "ba1dd451bae393c72e4786c0ed01ee3d": "RUN apk --no-cache add make git", "e6137cd0c9f574f37252217eaefea41c": "ADD . /work", "4b0eba51d2f179bb2c47b637a50fecac": "COPY /work/bin/myaws /usr/local/bin/", "c713a4e2c42817de0bb29415a490411e": "ENTRYPOINT [\"/usr/local/bin/myaws\"]", "b6e31402737eeaec799a69281612b40f": "RUN go get github.com/tools/godep", "700c9007e816691698ae2c320ac0fc63": "RUN mkdir -p /usr/local/go/src/github.com/dooman87/", "b20cf2a9de9ad8a4a6093b30a6d34a00": "WORKDIR /usr/local/go/src/github.com/dooman87/", "372f7a34b4ba25a602e93f5bff43556d": "RUN git clone https://github.com/dooman87/transformimgs.git", "d7a05f11741b69da0f13859f29ebbae3": "WORKDIR /usr/local/go/src/github.com/dooman87/transformimgs/", "59939451d5c97df2bac0da9df228de1d": "RUN godep restore", "b0d13afb0b004ece05f1eb34f2627019": "WORKDIR /usr/local/go/src/github.com/dooman87/transformimgs/cmd", "1f9b4cbc5d47231d79f5b0a12a10bc0c": "RUN apk add --no-cache openssh-client ca-certificates", "f84f51c8cfba760dd750c67747016370": "VOLUME [$WORKDIR, $LOGDIR]", "12b7529264f3dbc680583118ec028b7f": "ENV GO_ENV=\"production\"", "adb1f9f54639d6dafd32c11a61290041": "ADD settings /go/bin/", "42b56431bbe93ddeadffee3ac31fd464": "ENV PROTOC_VERSION=\"3.7.0\"", "bdf0c30c38d1fe8fe1ab8da91c00e540": "ENV PATH=\"$PATH:/usr/local/protoc/bin\"", "9d13f27d3e4ea5cd061e6c457c270e89": "RUN adduser -D -u 1000 golang", "40a738487b3abacb4cbfb6b260d208e2": "RUN apk add --no-cache git curl unzip make ca-certificates", "e9036fc782e99015874060526137087f": "RUN curl -o tmp.zip -L https://github.com/google/protobuf/releases/download/v$PROTOC_VERSION/protoc-$PROTOC_VERSION-linux-x86_64.zip", "c26134b137754cd42dca54c845bb42ab": "RUN mkdir -p /usr/local/protoc", "8a2865e4d299f9fe0890ed75bba93168": "RUN unzip tmp.zip -d /usr/local/protoc", "301252788deaf109f3cee9301827ba07": "RUN rm -rf tmp.zip", "06146e98236076ed1c5e1285aa5364d9": "RUN go get google.golang.org/grpc", "ddca6761b45d167442c661288fd70c2f": "RUN chown -R golang:golang $GOPATH", "cc6cbe4c711e6e7c855238dd7e9edbc6": "USER golang", "e282b0e5cb0b801e954f1892634069fc": "COPY /src/dist/bee bee", "3686a2c8b3d513371dbe0f59f1c158a3": "RUN chmod +x ./bee", "3ed5123ab1a9b1a5f8c37aeca23756cc": "ENTRYPOINT [\"./bee\"]", "0e3f9870994abfe9e9caf1885cb197c4": "RUN apk add --no-cache bash git openssh openssl", "0bf751ec1951b479b33dadd02248f345": "RUN openssl genrsa -out config/api.rsa 4096", "2ae249ee6ca449c5c0f954284696a8e3": "RUN openssl rsa -in api.rsa -pubout > config/api.rsa.pub", "13f6f2842163fa6631f576784530737e": "LABEL maintainer=\"Alan Chen <chen.8943@osu.edu>\"", "8c9571001534a4185411aeba862bfe35": "COPY backend/go.mod backend/go.sum backend/config/app.json ./", "6bee7ad85dc09087fedabac41141366c": "COPY backend/config/app.json ./config/", "b1c14fe486d35d2ab2bd2537f700d7df": "COPY /backend .", "17a21cfe247a1adff52397caa6d18d67": "RUN go build -o backend/main .", "21ec8e804b11c1869eb860a121de1b1f": "CMD [ \"backend/main\" ]", "44c7776042130e40ef21ccf9f3b0c6b3": "FROM golang:1.7-onbuild", "81da05563a69ea10c1fadaa4b1161f73": "ENV PORT=\"5000\"", "c4d8d69d4e13b64664431f4413b0ab71": "FROM golang:1.12.0-stretch AS builder", "892bba094d40b2a1ee17bb03d9b8d4b9": "ENTRYPOINT [\"/root/gomitmproxy\"]", "d22364ef38680920caa8c9a5823f5b84": "FROM golang:1.9rc1-alpine", "2c59611c81755179a9e2f690817ecff6": "RUN apk add --no-cache --update nodejs nodejs-npm gcc g++ python", "3fbe5fe00289d6e69abd1030c3e76e68": "RUN npm config set loglevel error", "357964fac62568a58604dc47c0c6dfee": "RUN npm install npm@latest -g", "9ebdcedebd5b924c56b3244f81224645": "RUN npm install dredd", "a3eac871b09f11407a0f4af6489f5395": "RUN apk del gcc g++ python", "583e8a1a5c922b1dedfaf9b2392f7a50": "RUN go get github.com/snikch/goodman/cmd/goodman", "01f5f0cc237bba0505007f3a2d3d762a": "ENV PATH=\"${PATH}:/node_modules/.bin\"", "aaf8714aac12eba1e25759a576452214": "LABEL maintainer=\"Vlad Kampov <vladyslav.kampov@gmail.com>\"", "a84743c8f406d98a881eb80fc1a5fa5d": "WORKDIR $GOPATH/src/github.com/vladkampov/url-shortener-telegram-bot", "c2aa0be0d64f60adc2f3dc5484bd2bca": "ENV V2RAY_PLUGIN_VERSION=\"v1.1.0\"", "d0f3fecf4cb513582b20e95ee21ff63a": "ARG KCP_VERSION=20190611", "18d9cf5581c52c530a75c270f2b17b16": "ARG KCP_URL=https://github.com/xtaci/kcptun/releases/download/v${KCP_VERSION}/kcptun-linux-amd64-${KCP_VERSION}.tar.gz", "1e64c324d86c602f5be6c284abf6780a": "ENV OBFS_URL=\"https://github.com/shadowsocks/simple-obfs.git\"", "903a894fdf240e6c0ebf58546f2831dd": "MAINTAINER Fluke667 <Fluke667@gmail.com>", "9ce644d0fbf6aa544458748b69f69a99": "ARG TIMEZONE=Europe/Berlin", "920254ef25edfbc98e9894661b32b331": "ENV SHADOWSOCKS_LIBEV_VERSION=\"v3.3.0\"", "37130973ee2c2922e9106511f6841b0a": "RUN apk add --no-cache --virtual .build-deps autoconf curl wget automake build-base libev-dev libtool linux-headers udns-dev libsodium-dev mbedtls-dev pcre-dev tar tzdata udns-dev c-ares-dev nano git", "7bdca95c99413c495f00991f5d25110f": "RUN cp /usr/share/zoneinfo/${TIMEZONE} /etc/localtime", "172d88146251f84da952b44afcad67ef": "RUN wget ${KCP_URL}", "9bc127f0842d070eca062dabc21e665c": "RUN tar xz kcptun-linux-amd64-${KCP_VERSION}.tar.gz", "f5cf8946deac91582c2e330fe33ff00e": "RUN mv server_linux_amd64 /usr/bin/", "24b2fe2a3de10ccac58a4a0ab974652d": "RUN git clone ${OBFS_URL}", "c8f5ff775259beeee70ebe6f0b91c4b5": "RUN cd simple-obfs", "efc97c470c8923d718eb5ab137aec0be": "ENV SERVER_ADDR=\"0.0.0.0 SS_SERVER_PORT 8388 SS_PASSWORD ChangeMe SS_METHOD chacha20-ietf-poly1305 SS_TIMEOUT 600 SS_DNS_ADDRS 1.1.1.1,1.0.0.1 SS_ARGS -u KCP_PORT=${KCP_PORT:-5021} KCP_KEY=${KCP_KEY:-kcptun} KCP_MODE=${KCP_MODE:-fast} KCP_CRYPT=${KCP_CRYPT:-salsa20} KCP_MTU=${KCP_MTU:-1350} KCP_DSCP=${KCP_DSCP:-46}\"", "64f126791109747c6f9ea22e3ae05c97": "EXPOSE $SS_SERVER_PORT/tcp $SS_SERVER_PORT/udp", "fbbb39de7fe4cc743c9bf1ffa0622abc": "EXPOSE ${KCP_PORT}/udp", "b763e9bdfbf72f3c01e3a6855defa68a": "CMD exec ss-server -s $SS_SERVER_ADDR -p $SS_SERVER_PORT -k $SS_PASSWORD -m $SS_METHOD -t $SS_TIMEOUT -d $SS_DNS_ADDRS --reuse-port --fast-open --no-delay $SS_ARGS", "dd9628596ad5fed93d1a885773027ac4": "COPY /app/ct-diag-server .", "a9f871b55726dfd46a78515c20dd9baa": "ENTRYPOINT [\"./ct-diag-server\"]", "30961e6defdc01aec7190c7f8ba82b94": "COPY license.key /etc/kaspersky/", "babc64e60d942007cf39d7f53cb2c591": "FROM golang:1.10-alpine AS build", "02e051522c82a624e9d61fdda23b01a0": "COPY /go/bin/bqv /go/bin/", "89a1d5c9dd52813029d6d00a4d063884": "ENV PKGVER=\"1.1.1\"", "6fcc7d0fe40b377cc9c7d6b7cd5c1b27": "RUN pwd; ${GOPATH}/bin/dep ensure", "934aeaffc4ac87ff24ef7009d6d0e7f8": "FROM golang:1.14-alpine as build-env", "4c3d9ded2906370bea81ea3c567b925a": "RUN chmod +x /app/main", "b1c498a4322676de0019a519ba63ba04": "ENTRYPOINT ./kudaki_order_service_app", "cb8ebf86d59c66a39508a27432ead0ba": "COPY . $GOPATH/src/github/1995parham/gosimac/", "43a9cc5c70eeaee956ccf9e805a9c213": "WORKDIR $GOPATH/src/github/1995parham/gosimac/", "8c03bfc995d707f280a66a99b2399ab7": "VOLUME [\"/root/Pictures/Gosimac/\"]", "f43e998a2eb8c3d5ea74c5ac98be6963": "WORKDIR /go/src/moul.io/cryptoguesser", "b635b442b02d8a54fbde5b7d04cf3bd3": "COPY /go/bin/cryptoguesser /bin/", "4399a7b367bd3aa5ca6b62316c8c894f": "ENTRYPOINT [\"/bin/cryptoguesser\"]", "731b1d15760516a4a88f3724be8a2ace": "FROM golang:1.12-alpine AS build", "5a67dc188b12ca8b603b620d2aa1e3ea": "RUN go get golang.org/x/lint/golint github.com/aws/aws-sdk-go github.com/aws/aws-dax-go github.com/antlr/antlr4/runtime/Go/antlr github.com/aws/aws-lambda-go/lambda github.com/awslabs/aws-lambda-go-api-proxy/handlerfunc github.com/aws/aws-xray-sdk-go/... github.com/stretchr/testify github.com/gusaul/go-dynamock go.uber.org/zap github.com/go-playground/validator github.com/satori/go.uuid github.com/asaskevich/govalidator github.com/gomodule/redigo/redis github.com/rafaeljusto/redigomock github.com/hubcash/cards github.com/newrelic/go-agent github.com/reddotpay/awskms github.com/reddotpay/redis github.com/reddotpay/logger github.com/reddotpay/api github.com/reddotpay/retry github.com/reddotpay/currency github.com/reddotpay/metrics github.com/gorilla/schema github.com/pariz/gountries golang.org/x/net/context/ctxhttp github.com/hashicorp/go-retryablehttp github.com/gianebao/n36 golang.org/x/oauth2/clientcredentials github.com/jinzhu/copier github.com/google/go-querystring/query golang.org/x/text/encoding golang.org/x/text/encoding/charmap golang.org/x/text/encoding/htmlindex golang.org/x/text/transform gopkg.in/go-playground/validator.v9 gopkg.in/square/go-jose.v2 github.com/shopspring/decimal github.com/andelf/go-curl", "a37dd8c8ec479006cdac829fe56dd674": "FROM golang:1.13.2-alpine3.10 as build", "a429224663696102c38f1e0e9bd11d60": "ENV NAME=\"wxmp\"", "9b7081f60236d9e2bf199e3e544cf4df": "WORKDIR $GOPATH/src/$NAME", "f34ebdaab54facfbe81049aa54c90ac9": "COPY . $GOPATH/src/$NAME", "faa6ffaff6e3ec86ce7841407f95fb58": "RUN go build -o $NAME .", "9b4cbb0fd9eb4217ec0db9bb227fe3fd": "RUN cp $NAME /", "066b8f636ce6d7cdf507f2988ee1a882": "COPY /wxmp .", "f22ad469a1bc2c76ddb89f57f3a3296a": "RUN chmod +x wxmp", "a161506b042088687801285d6e41a470": "CMD ./wxmp --wx_app_id=$WX_APPID --wx_app_secret=$WX_APP_SECRET --wx_encode_aes_key=$WX_ENCODE_KEY --wx_token=$WX_TOKEN --server_addr=$SERVER_ADDR", "fffe800a7f88e551b0f30e3ce131f71d": "ARG GOLANG_BUILDER_VERSION=1.12-alpine", "2b378e865e535400159c00ec39e078db": "FROM golang:${GOLANG_BUILDER_VERSION} AS builder", "8f3c6b1694f50aebee3f9969db1ba2e4": "RUN apk add --no-cache build-base git tzdata ca-certificates", "960ea0b8043d82d758f0effa17b46cf5": "COPY . /puti", "6bbae8d75130aa0c7a53cab6f40dcdf5": "WORKDIR /puti", "2b611b5a370e79d49a551438689ddc0d": "ENV GOSU_VERSION=\"1.11\"", "7534cd91b75b75af8c69ce292adb15ef": "RUN set -eux; apk add --no-cache --virtual .gosu-deps dpkg gnupg ; dpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; export GNUPGHOME=\"$(mktemp -d)\"; gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; command -v gpgconf", "e032425a5cf46788ea8d2bf51314337a": "RUN gpgconf --kill all || :; rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; apk del --no-network .gosu-deps; chmod +x /usr/local/bin/gosu; gosu --version; gosu nobody true", "df22a4a4d3562ef47afd49f0df1b4f12": "WORKDIR /app/puti/", "1ec009fa8eb22ccbfb4b4e4639f99842": "COPY /puti/puti ./", "10be749a79465e8fae3f0564bf366ad2": "COPY /puti/console ./", "535934daa594b08bab3e5cba179c100a": "COPY /puti/assets ./", "046233c7c875319040102473af7abe6d": "COPY /puti/configs /app/init/", "e2f4fb8bbba89a5ac4f076c2e48cb59f": "COPY /puti/theme /app/init/", "8ef01b519201a84c26971fea8fa4ed02": "COPY /puti/uploads /app/init/", "39e51f14db78f80f5215b13523a8b813": "RUN addgroup -g 1000 -S putiuser", "57bbfe7045eba348717d1cd90b439599": "RUN adduser -u 1000 -S putiuser -G putiuser", "1b6f76ebd9f8641a0be17f7bf1a0f014": "RUN chown -R putiuser:putiuser /app", "99cd3254847fa0cf8aeb7c6865388d1c": "COPY /puti/scripts/docker/docker-entrypoint.sh /puti/scripts/docker/wait-for-db.sh /usr/local/bin/", "c7f7d2a528e0fc20a0fb8c0ee74a4ea2": "RUN ln -s /usr/local/bin/docker-entrypoint.sh /", "d7fbf76a88f1598718780d15bd5d2cf5": "VOLUME [\"/data\"]", "c4802b9dd7c929526c03c0b9fe6f1a5a": "EXPOSE 8000 8080", "6898ce52c6565b99590eeb04ccb1c830": "ENTRYPOINT [\"/docker-entrypoint.sh\"]", "62ee3c450fe45cbdccbb2a9aebcdeab0": "RUN RUN go get github.com/gorilla/websocket", "3b7891e2147e37c564749c8636cec811": "COPY /go/src/github.com/porjo/ytdl-web/", "44f53c11a1843c2f37879f390f4d0766": "ENTRYPOINT [\"/app/ytdl-web/ytdl-web\"]", "8141ffaed6ce7be30435da5c4a0a9e90": "WORKDIR /home/", "a7fd90c05f37844152f2c4e8cfb818eb": "RUN apt-get install -y nano", "5e17a03aa81bb07c8e7d2dc621326254": "COPY data/example.go example.go", "dcf4ebd58b9e9090ca0d09affe21af7f": "WORKDIR /go/src/github.com/shotat/ghrc", "dd864c3c59d86c364d1b5daca85bdc02": "RUN go build -o ghrc", "499c6b7f98daeed793a2fde89c667308": "COPY /go/src/github.com/shotat/ghrc/ghrc /usr/bin/", "febcd893d659f09cf7fe2161eadc56d2": "ENTRYPOINT [\"ghrc\"]", "17f0df373b9c50b5109541ab49accb79": "COPY . /go/src/flaviojmendes/weathergo", "4adde5d2a32ed66e6027188153ea3a95": "WORKDIR /go/src/flaviojmendes/weathergo", "a9457d207a7004ea7a8c02a118af4aad": "RUN apk -U add git build-base", "02fe505df2bcbd657f099f679faf5578": "RUN go build -ldflags '-extldflags \"-static\"' -o /build/weathergo", "29cd912254329441263cda80fb4d3a55": "RUN apk -U add ca-certificates curl", "06097394c392767a597ed34aa883f255": "COPY /build/weathergo .", "65f0f4e2e551b74f433174bd276439e5": "ENV GIN_MODE=\"release\"", "857551bc4fc3417e77c75db83217ce18": "CMD [\"./weathergo\"]", "a36af83dac26dc97acd4da5e0864b65a": "ADD . /usr/app", "74ca0b58566ebb4a2ba6c5decacd56dc": "WORKDIR /usr/app", "0714396598b244f7a2e327f98292789d": "RUN CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -mod vendor -a -o /warden .", "bd4b2f8c8afddbd57b9f6acc36f9a06a": "FROM nginx:1.15", "4a7c91334b4c4b1aa960f7bd893e4599": "LABEL maintainer=\"Stephen Afam-Osemene <stephenafamo@gmail.com>\"", "af7150e317b6ccb254c3a9aeff98071a": "RUN echo \"deb http://ftp.debian.org/debian stretch-backports main\" >> /etc/apt/sources.list", "c2b10acd37c4464ebbcd3b88f6b118b9": "RUN apt-get install --no-install-recommends --no-install-suggests -y inetutils-ping openssl sqlite3 certbot -t stretch-backports", "967d577170b5fe960e40171fe07687e2": "ENV CONFIG_DIR=\"/docker/config\"", "b64e586adaa5819afef69ab60a1e4050": "ENV CONFIG_VALIDITY=\"30d\"", "60b2063d398d6b0b180feafe28f124a1": "ENV CONFIG_RELOAD_TIME=\"5s\"", "ccea4b3aa95f1b8472afe5b84b5a7fb9": "COPY ./config/nginx.conf /etc/nginx/", "1613e17b22f775d97ef79f46daba57aa": "RUN mkdir -p /docker/config /etc/nginx/conf.d/http /etc/nginx/conf.d/streams", "eb42c7ef93e1223b6ea96ef733182742": "COPY /warden .", "8ebac334469839830509f0ab5302bab1": "CMD [\"./warden\"]", "ffb321e4872cdb2b8204ca60192dfba4": "RUN apk upgrade --update", "26f19dfe718892cddee50e4bb0bdc9bb": "RUN apk add bash tzdata", "0ceb1ed4f99bc8886b39b6b6f4ef932b": "ENTRYPOINT [\"go-shadowsocks2\"]", "97cfe11ec7d4ba6d81c905aadcabf0b9": "RUN mkdir -p /{media,config}", "cae55b5b49f713bbd33ff1bfaa5ba2af": "COPY /go/release/config/config.yaml /config/", "2e5da5c605afc5fe3c2782055b1e1ece": "ENTRYPOINT ./labform -c /config/config.yaml", "3535cee00b89fd6635db9089dd62d83f": "RUN go get github.com/gorilla/handlers", "99f652ecc22780a8a04204bc94822a0f": "RUN env GOOS=linux CGO_ENABLED=0 GOARCH=amd64 go build -o runtime .", "0b92de1d7a03d856b363231b9baa3efc": "LABEL Maintainer=\"Amit S Dalal <amit@amitdalal.me>\" Description=\"Lightweight container with dig and bash and a runtime\"", "f557ef7acd9e9b0c32855d2a0149d37b": "RUN apk --no-cache add curl bash bind-tools coreutils", "96e134e02faaaa62188a1d04029579ea": "RUN curl -sSL -o /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub", "663073dfb888ea1ea21790fe8f3490a5": "RUN curl -sSL -O https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.28-r0/glibc-2.28-r0.apk", "112df92666f424e62f0e98f4e04fa60a": "RUN rm glibc-2.28-r0.apk", "a326252d31d0faffc14d88eab91b9a7a": "COPY dnsbl.sh /bin/dnsbl", "7ce26c1e51ccd24e12bfe28e6d1088a3": "RUN chmod +x /bin/dnsbl", "5535dde9f491c8d9fee64ffd0b3bf48a": "RUN groupadd -g 999 appuser", "8335de53c2636b260ffa9737403e8777": "RUN useradd -r -u 999 -g appuser appuser", "6c9d4284a3d3504316930b28fff73675": "COPY /app/runtime /bin", "f775311303909ae7ddc28bb831a101cd": "CMD [\"/bin/runtime\"]", "fb57361881eea8e25cd050ee57bb5015": "VOLUME /root/.gladius/wallet", "268933c72c0374e675e71f54eb91f9d1": "RUN apt-get install -yqq git curl python3-pip libyaml-dev zip unzip", "4a2d0f0ecc1e5ba7da189e4b8e81dba1": "RUN apt-get install -yqq nodejs npm", "665f0a8be858e267fcf67c69c1171f8c": "RUN apt-get install -yqq jq", "ac1b83689673f3107f64cdc047ca2962": "RUN pip3 install yq", "3d6e4d133ebf8f2b6d6269a73392377f": "RUN npm install -g ajv-cli", "197ee1a71409879c23063b93481055b5": "FROM golang:1.10.2", "91b9fc25d9b7be84bd25bdb0985c4635": "ADD . /go/src/github.com/zhanghudong/drone-test", "08102cf6ba65fccb704d269f525fdd1a": "RUN go install github.com/zhanghudong/drone-test", "4ade8bfcd2d5004e6181d0f46c15bf3c": "ENTRYPOINT /go/bin/drone-test", "f3b6e65f03a5e954c8ebda8e0cc4757b": "RUN apt-get install python3 python3-pip python3-setuptools", "a62485a964155046fcf2dac29e19c7bf": "RUN cd", "859f054040596755a1df27565def28a4": "RUN rm -r /tmp/pilot", "15bb77ad2878f0eab58bc599ba63e602": "CMD [ \"pilot_server\" ]", "874e4079c1f2323a713beb9ce5650e48": "FROM golang:1.12-alpine3.11 as build", "97d7991512a7145fdebc4543334541c3": "ARG PACKAGE=github.com/pagero/prometheus-gocd-exporter", "da7d1da3a3e66124072b6450e9b68f55": "RUN go build ./cmd/...", "529bfb768a7cea7933b2e4a673da5c6c": "COPY /go/src/${PACKAGE}/exporter /app/", "a7ff395a30de50ba1ebd985476c8a0b7": "ENTRYPOINT [ \"/app/exporter\" ]", "9157f5230cad16d56dcc485eec8aed7e": "RUN CGO_ENABLED=0 go build -o /bin/ipsw -ldflags \"-s -w -X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppVersion=$(cat VERSION) -X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppBuildTime==$(date -u +%Y%m%d)\" ./cmd/ipsw", "be387792d427faa29c3c4348f1044e4b": "ENTRYPOINT [\"/go/bin/k8s-demo\"]", "53d3e9cfdedfd384e9c2e5522a5bc0c5": "RUN apk --no-cache --no-progress add ca-certificates", "8ca7232cf8ce8a0a59e3569ee6dfcee3": "RUN wget -O- -nv https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.21.0", "3e2d62cf9c02a407c93dcab7662a9e64": "RUN mkdir /docker", "a66c310fd988d4b60b2607d9e467a61a": "ADD . /docker/", "3e64d0efcbc62cb513dae4dd6a5a4b04": "WORKDIR /docker", "b70914e2dcc3cd68c29975c5510f5c98": "CMD [\"/docker/main\"]", "a28a73db680550835d91909c066f75e8": "ADD . /go/src/websocket", "f4fa1ae9e8e576098447408e761af0b3": "WORKDIR /go/src/websocket", "7a143f18ae16ab80c6d93e284d5683c4": "COPY index.html .", "cf97719c969eb08061478babf260b1df": "COPY src/main.go .", "cecdef668c5df9c1a39f3877b0810926": "RUN CGO_ENABLED=0 GOOS=linux go install", "853cc098c6c30811447944d622f32ebc": "CMD [\"/go/bin/websocket\"]", "3b4441a2ba4ae28d82fe8f909457dd7f": "COPY /go/bin/websocket .", "97f79fcebbd7f02798df0329cce4f5d3": "CMD [\"./websocket\"]", "42142ebb3d76ed49ed3c08ed12b457ac": "CMD [\"/validate\"]", "a4dbf45fa77273042a5b0a2e93913526": "COPY /bin/start.sh /bin/", "f25574635fa95258f7d698dc254273bc": "COPY /bin/app /bin/", "e325ed57622a2ec2f0069ce4b39a7e0a": "RUN go get -tags \"v0.13.6\" -u -v github.com/gobuffalo/buffalo/buffalo", "47b2f76586045daf42ffcd6dd8b67602": "RUN CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -a -o /warden .", "60a3d7e776a4078849ba610965dd4612": "FROM nginx:1.17", "64a47c5f8863ce5db8c24c057c1d859c": "RUN rm -rf /var/log/nginx/*.log", "0485f885d0e1d1cb04ce2118a7fa9c54": "RUN touch /var/log/nginx/access.log /var/log/nginx/error.log", "6cc326e2ce2e31e48d5e98c3f88f6dab": "COPY /warden /usr/bin", "76e0cafe43dda9bee09fb56106da0194": "CMD [\"warden\"]", "19bffd9da2658e7e90641a38dd1103c4": "FROM golang:1.10-alpine AS build-env", "55ef5e7613d4384d750301de8d4dc5ae": "ENV GOPATH=\"/gocode\"", "a0e653c1f02af78cadcb00e2ce9636c5": "ENV SRC_DIR=\"/gocode/src/github.com/bettercap/bettercap\"", "befec9306c6ad301b0ae86b3327dac39": "RUN apk add --no-cache --update bash iptables build-base libpcap-dev git python", "7b5d07464e436e690964b4213d121a47": "RUN mkdir -p /usr/lib/x86_64-linux-gnu/", "20a03b3028873f8b3e52f19cd682b35e": "RUN cp /usr/lib/libpcap.a /usr/lib/x86_64-linux-gnu/libpcap.a", "d6659427ba1f2e9be3f05af4b94efb28": "RUN apk add --no-cache --update bash libpcap-dev", "a3a5f621d956907356005ca7da835a30": "COPY /gocode/src/github.com/bettercap/bettercap/bettercap /app/", "cc9a36120f663d7bac3f2f6d8498535e": "ENV DOCKER=\"1\"", "866c4726161e939dea5fd3902bb7f096": "RUN go test github.com/attic-labs/noms/...", "a27287b07184a0e8ea18af72f666fc01": "RUN git clone https://github.com/minio/radio", "fe8021eed799e63c066fdc7f71d92970": "RUN cd radio", "760c63193b38da3d6f1ec7e8b4544f64": "COPY /go/bin/radio /usr/bin/", "ddb7ac786482e546d99be07944759afe": "COPY dockerscripts/docker-entrypoint.sh /usr/bin/", "394c8a4a1a763f4e866549a3d4ca5844": "RUN chmod +x /usr/bin/radio", "5421888123b941b9bc1981b392443f18": "RUN chmod +x /usr/bin/docker-entrypoint.sh", "45e37392e23cd12f11058d972bcb2262": "CMD [\"radio\"]", "4bdca17e408b1f059d916d4e16db4042": "FROM golang:alpine AS go-build-env", "1103afb6fd0c0318cc930af5a9ad6140": "FROM node:lts-alpine AS vue-build-env", "47faf9f1434e38a9dfe6f77390612e72": "COPY conductorr-web/ .", "cee1fb1ec303cac931951c945d48ac03": "COPY dist/", "f4e82f862e8f3b8613694b5c7cefcf02": "RUN curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $GOPATH/bin v1.18.0", "8bf68a3a5f5a53595d411b6595b48368": "RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -ldflags '-extldflags \"-static\"' ./cmd/fip-controller", "f9cc0d0e3b36b9e04cb36c2e548ec256": "COPY /app/fip-controller /app/", "e64358997e5c4d8ccec21a2f29216e21": "RUN go-wrapper download # \"go get -d -v ./...\"", "f077268a83f198bb5a9be647dcb50ca4": "RUN go-wrapper install # \"go install -v ./...\"", "8815547aeb6b2ce5aea44b0afb5b348c": "RUN git clone https://github.com/bitmark-inc/bitmark-node-upgrader", "455f24b01314b22c696971c44719d39c": "RUN cd /go/src/bitmark-node-upgrader", "db869e7ac9246cae5c2fd90328665d10": "ARG VERSION=v1.0.0", "d35d8f522a814821a5a9dcc0322d10ce": "WORKDIR /go/src/github.com/vmware-tanzu/velero-plugin-for-gcp", "f80c61296977ebdcade83130fda79636": "RUN git clone --depth 1 -b ${VERSION} https://github.com/vmware-tanzu/velero-plugin-for-gcp.git .", "222030c1ab913751aa4978ab41ffca20": "RUN go build -o /go/bin/velero-plugin-for-gcp ./velero-plugin-for-gcp", "f944b3cce62c119938eb8b7ae16c3efb": "COPY /go/bin/velero-plugin-for-gcp ./", "1aad332375ed68e12bc1576dcf72185e": "ENTRYPOINT [\"/bin/bash\", \"-c\", \"cp -r /plugins/* /target/.\"]", "837d81b97a359f61e33f37cef54bc1ac": "CMD [\"./gl2j-gw\", \"-config\", \"/etc/config.yml\"]", "a5feb8cb709cc0a6758d621ba224cf06": "RUN go build -o ./out/dnschecker .", "5618ad8a35a11fbbc9d2a4d4f0512fa1": "CMD [\"./out/dnschecker\"]", "f839f701d22415c5785eaa80a8c6446d": "FROM golang:1.20-windowsservercore-ltsc2022", "8bec514317a569fd2cb1c924871bdf58": "SHELL [\"powershell\", \"-Command\", \"$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';\"]", "18bf388d0ee13632bcdb538ea7684cf3": "ENV XCADDY_VERSION=\"v0.3.4\"", "f7a326f2fb65838d93711a0215e40a4f": "ENV CADDY_VERSION=\"v2.6.4\"", "7a5182d9f3036a2ca811fe6fdaceb9ae": "ENV XCADDY_SKIP_CLEANUP=\"1\"", "fe849010f7c1192818f180203cd3135d": "RUN Invoke-WebRequest -Uri \"https://github.com/caddyserver/xcaddy/releases/download/v0.3.4/xcaddy_0.3.4_windows_amd64.zip\" -OutFile \"/xcaddy.zip\"; if (!(Get-FileHash -Path /xcaddy.zip -Algorithm SHA512).Hash.ToLower().Equals('542b4c083852d41081186c79757b66ff3c26248f72ed461dbc038b51687d0a8a8ce8eee69e3b5a1d43360c48b3405b611b940fa378debe98aaa0b3c5aebfa218')) { exit 1; }; Expand-Archive -Path \"/xcaddy.zip\" -DestinationPath \"/\" -Force; Remove-Item \"/xcaddy.zip\" -Force", "d6722167f8fc351af55663a02448a10b": "WORKDIR /mpping", "34d33df92651ab5a5456119239f0bf5c": "ADD mpping.go /mpping", "19dae98cd190d66fdb4ba458e2ca24f1": "RUN go get -u github.com/asaskevich/govalidator", "72f19a497041edfbda4812eefdcf7013": "RUN go get -u github.com/sethgrid/curse", "2024ac7bb63b74eb047824a21e9a1d96": "COPY /mpping/mpping /app/", "9b8fe1870bf4c6c5fad8b6ee27b097de": "ENTRYPOINT [ \"/app/mpping\" ]", "8bf839b091df92e86e3e235ac039e288": "MAINTAINER lixiangyun linimbus@126.com", "a5f9575d28556fc96c94a343be535b21": "WORKDIR /gopath/", "e65212c2ee5d5ff09bbf2b00aafbc487": "RUN go get -u -v github.com/lixiangyun/autoproxy", "998fad3f77aba0341709123686ab023e": "WORKDIR /gopath/src/github.com/lixiangyun/autoproxy/proxy", "dd244de07bcf853a1105590bba6cdbcc": "FROM ubuntu:xenial", "0817ec4d23f5584b99c28e66395e52f9": "COPY /gopath/src/github.com/lixiangyun/autoproxy/proxy/proxy ./autoproxy", "7264e0958070557ba6e4d082179ff77b": "COPY /gopath/src/github.com/lixiangyun/autoproxy/proxy/server.yaml ./config.yaml", "5451a99cbd53e0502b805bb81a7e85bc": "RUN chmod +x autoproxy", "90d3309035f721e4c838d2bd10028b88": "ENTRYPOINT [\"autoproxy\"]", "98b8d9bbfd610ef95496151a4587c6b9": "ENV SEABIRD_CONFIG=\"/data/seabird.toml\"", "0711fdf4cd8a0f5523fa877dd2e88477": "ADD . /go/src/github.com/belak/go-seabird", "1803956f8363f74c46210c582995549f": "RUN go get -v -d github.com/belak/go-seabird/cmd/seabird", "9273c9f87148f289a39a6a52387ac3c3": "RUN go install github.com/belak/go-seabird/cmd/seabird", "529731ee77eb2797e2491dc13d5c580d": "ENTRYPOINT [\"/go/bin/seabird\"]", "f6cd3b6c082373f5126ddd92ef464272": "FROM golang:1.13-alpine3.10", "d98c3623ae0d1a4c33a414fea4982455": "LABEL maintainer=\"Alex Vette <umme@posteo.de>\"", "a8188d5c26b0b6cab827d1fb0a7ed2e2": "RUN go build -o acmenator .", "b56d63e97df02c04dc2989c7f075664a": "ENTRYPOINT [\"./acmenator\"]", "95b85039fcdbb3c9868ff84a0e1cb0f2": "COPY Gopkg.lock Gopkg.toml /go/src/github.com/boivie/undergang/", "c6691aa5065eed89d69312dd55379937": "RUN dep ensure -v -vendor-only", "19004bb56a6e4e207d4ab8dbcb0dc77c": "ARG UNDERGANG_VERSION=latest", "03a054b1e028b3b42163791baa04b3ad": "RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -ldflags \"-X main.version=${UNDERGANG_VERSION}\" .", "a237b1346635a66323662bd80c995026": "FROM golang:1-alpine as revive", "bf2c118eeb9155a05d1b99ada1658781": "RUN GOBIN=/usr/bin go install github.com/mgechev/revive@latest", "8aa3c025b7b0f284b64f540417eca4f1": "FROM python:3.11.3-alpine3.17", "8d53a010d36e177ee9dec706c9876942": "ARG GITHUB_TOKEN=\"\"", "c17211598f8da2bc8af38f2910ff832d": "RUN apk add --update --no-cache bash ca-certificates curl gcc git git-lfs libffi-dev make musl-dev openssh", "3214ad24dff839c0ce2a8ad6817ec3ba": "RUN git config --global core.autocrlf true", "83aa4878ff4c6b13572996852f79acd3": "ENV GOROOT=\"/usr/lib/go\" GOPATH=\"/go\"", "4992fb6e940a84fcd96450e3891b62c2": "ENV PATH=\"$PATH:$GOROOT/bin:$GOPATH/bin\"", "748a03fb33d705e00d5ff6876066ee37": "RUN mkdir -p ${GOPATH}/src ${GOPATH}/bin || true", "b3a66f1618dc8bdef6a034445118e06a": "RUN yarn config set ignore-engines true || true", "0c3f04f46bf41c3ba559acadf6d50285": "ENV NODE_OPTIONS=\"--max-old-space-size=8192\" NODE_ENV=\"production\"", "be5ced727dcbe5e31a3269ad56d65121": "ENV PATH=\"/node-deps/node_modules/.bin:${PATH}\" NODE_PATH=\"/node-deps/node_modules\"", "c06bf0fce69f58dad3a38e762228b6e0": "COPY /usr/bin/revive /usr/bin/", "7d22950eb659479cb4ffa033b5f121c9": "COPY megalinter /", "7c647712c61f16c0df1a4478633c8200": "RUN PYTHONDONTWRITEBYTECODE=1 python /megalinter/setup.py install", "e6af213bc5307a71f36fada2fe52fc48": "RUN PYTHONDONTWRITEBYTECODE=1 python /megalinter/setup.py clean --all", "84586ee9aa6cd8d99af7f8ec0be99bd0": "RUN find . | grep -E \"(/__pycache__$|\\.pyc$|\\.pyo$)\" | xargs rm -rf", "0ac4405f0e295e85eeece14cc5bdd457": "COPY megalinter/descriptors /megalinter-descriptors", "2dc9bdd6dabbcdcbb48149ee86eb19b7": "COPY TEMPLATES /action/lib/.automation", "3d4ca85243d644645a40f672bde2e175": "ARG BUILD_REVISION=\"\"", "b930cd795f323662185965b46a3b6b3e": "ENV BUILD_DATE=\"$BUILD_DATE\" BUILD_REVISION=\"$BUILD_REVISION\" BUILD_VERSION=\"$BUILD_VERSION\"", "346ba396cfc893c049afcce5e1f3c4f1": "ENV MEGALINTER_FLAVOR=\"none\"", "7b30b4542e9b812a46397c61d7fb7211": "LABEL com.github.actions.name=\"MegaLinter\" com.github.actions.description=\"The ultimate linters aggregator to make sure your projects are clean\" com.github.actions.icon=\"code\" com.github.actions.color=\"red\" maintainer=\"Nicolas Vuillamy <nicolas.vuillamy@gmail.com>\" org.opencontainers.image.created=$BUILD_DATE org.opencontainers.image.revision=$BUILD_REVISION org.opencontainers.image.version=$BUILD_VERSION org.opencontainers.image.authors=\"Nicolas Vuillamy <nicolas.vuillamy@gmail.com>\" org.opencontainers.image.url=\"https://megalinter.io\" org.opencontainers.image.source=\"https://github.com/oxsecurity/megalinter\" org.opencontainers.image.documentation=\"https://megalinter.io\" org.opencontainers.image.vendor=\"Nicolas Vuillamy\" org.opencontainers.image.description=\"Lint your code base with GitHub Actions\"", "2b4a8f2c52264b64c13379cdd272270c": "ENV ENABLE_LINTERS=\"GO_REVIVE\" FLAVOR_SUGGESTIONS=\"false\" SINGLE_LINTER=\"GO_REVIVE\" PRINT_ALPACA=\"false\" LOG_FILE=\"none\" SARIF_REPORTER=\"true\" TEXT_REPORTER=\"false\" UPDATED_SOURCES_REPORTER=\"false\" GITHUB_STATUS_REPORTER=\"false\" GITHUB_COMMENT_REPORTER=\"false\" EMAIL_REPORTER=\"false\" FILEIO_REPORTER=\"false\" CONFIG_REPORTER=\"false\" SARIF_TO_HUMAN=\"false\"", "1d6d498c46cf98f061adca86f095e9dd": "RUN mkdir /root/docker_ssh", "75ce14a62009cb3511f21046284c4ec6": "RUN mkdir /usr/bin/megalinter-sh", "65cf81732de88807f91e4527e94f8421": "COPY sh /usr/bin/megalinter-sh", "487dc7f766769f4c66e639a4d1e64b58": "COPY sh/megalinter_exec /usr/bin/", "0fe20001875cfd0a796ae922efe9ef35": "COPY sh/motd /etc/", "8043c364d6044bb9c47b1eaab9c095c2": "RUN find /usr/bin/megalinter-sh/ -type f -iname \"*.sh\" -exec chmod +x {} \\;", "be39baa4968bf1f991f5d0f456aaf0eb": "RUN chmod +x /usr/bin/megalinter_exec", "c977cf3566de67f1b0eb3507b0d93095": "RUN echo \"alias megalinter='python -m megalinter.run'\" >> ~/.bashrc", "f85a6a4e5caeb28baf1e784053cd8ff2": "RUN source ~/.bashrc", "8baa78c5743cad854314686e2bd58bb0": "RUN echo \"alias megalinter_exec='/usr/bin/megalinter_exec'\" >> ~/.bashrc", "cabd22ce064b6390a36ac01dadb918be": "RUN export STANDALONE_LINTER_VERSION=\"$(python -m megalinter.run --input /tmp --linterversion)\"", "be52e39797fb7aff51c83e47bd516d8f": "RUN echo $STANDALONE_LINTER_VERSION", "ddea310d37f7c7df936021238bb7fa00": "ENTRYPOINT [\"/bin/bash\", \"/entrypoint.sh\"]", "4fb9398b2922aeab6f81a2f2dac45e79": "RUN apk add --no-cache --update openssh-client git ca-certificates", "0081b5aab345d6b55d5a7a3c22290ccd": "RUN go build -o /src/bin/grocerylistsbot ./cmd/...", "61d13e0cca8d9e96e147ad451a7db28c": "ENTRYPOINT [\"/usr/local/bin/grocerylistsbot\"]", "330cab208cc855c846aeaaf4aa8c5b81": "COPY /src/bin/grocerylistsbot /usr/local/bin/", "478173fb7d9a02eef9b62ff4b9c69ef8": "RUN go build -o /lg", "26bf4bb5382466ea5bf84328f422826e": "COPY /lg .", "9b0158d81655901d00369ca4d190cbcc": "EXPOSE 1378", "e60ab0e6f3c05886dc7071aed40e8dc8": "CMD [\"server\"]", "046e1829bcbb926b8042cf25e791889f": "COPY /go/bin/app .", "2b5a13c971aa6ef7a863430ba42afaa5": "COPY ./helper ./", "9b3d6891cb3c57c6689e936c2cd35c3d": "COPY ./util ./", "413c83171e670863159764ef26e2ee2a": "RUN CGO_ENABLED=1 GOOS=linux go build -a --ldflags=\"-s\" -o passwall-server", "c1214372925bd928fceae6712a4e73e5": "COPY /app/passwall-server /app/", "5405cd72146a767c430b0e8c3eaf9bb8": "ENTRYPOINT [\"/app/passwall-server\"]", "c3cf37cb4df43bb6b054dc6b12ba1192": "FROM golang:1.9.2-alpine3.7", "b6f0b63b94e8a84b1e8f7fa3b2b199f3": "RUN echo '0 0 * * * /usr/local/bin/youtube-dl -U' >> /etc/crontabs/root", "5b75f5dab8018c387684f26d33eb68b3": "RUN chmod a+rx entrypoint.sh", "f18cb802d5343e769cc7888477aba10f": "ENTRYPOINT [\"/app/ytdl-web/entrypoint.sh\"]", "a952a8fe446c8bd0e07b79bfd3312109": "ENTRYPOINT [\"dumb-init\", \"--\", \"skirmish\"]", "1a46de2e6a91d709b69bf158c24f241f": "CMD [\"--plan-path\", \"${SKIRMISH_PLAN}\"]", "ae152d4a68f0dcbe7313a980020efe4b": "MAINTAINER Igor Shishkin <me@teran.ru>", "dbc70c86e287d457443f8bad3963aa5c": "ADD . /go", "f9e88010b721bce7b8a4ee544dc0ca43": "RUN make predependecies dependencies build-linux-amd64", "b7d0dcc484996e0fd6a2cc23bed67f11": "COPY /go/bin/svcproxy-linux-amd64 /svcproxy", "8b12dd3eb93e81f697d78ff0b4b26c4d": "ENTRYPOINT [\"/svcproxy\"]", "9f6441f7cfd3c701d72587614e9c5efd": "RUN go get -u github.com/99designs/gqlgen@v0.11.1", "285c0cce780202456eb916e11ba2fe21": "COPY /go/bin/gqlgen /bin/", "64fde4660f7bbe9f8f84f6eb05813ef4": "LABEL org.opencontainers.image.title=\"MemGator\" org.opencontainers.image.description=\"A Memento Aggregator CLI and Server in Go\" org.opencontainers.image.authors=\"Sawood Alam <@ibnesayeed>\" org.opencontainers.image.source=\"https://github.com/oduwsdl/MemGator\" org.opencontainers.image.url=\"https://github.com/oduwsdl/MemGator\" org.opencontainers.image.licenses=\"MIT\"", "9e1d677ba7a852d04dcaac1ed6194b3b": "WORKDIR /agumon", "c9a3c22c98f626ea1c85a3515c7bafa9": "COPY . /agumon", "36d53cc145a0250c3a4c04eab4d8fb65": "RUN GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags '-w -s' -o /agumon", "f080c76feb9fc82c75840c177440a8b1": "COPY /agumon /", "b54ea09e6bc12d05f9d60c64f259b081": "ENTRYPOINT [\"/agumon\"]", "a80cdbb8368236ce41e26a564861f325": "FROM golang:1.13.3-alpine as builder", "e85c183a49a68590c308745fb42c1c5d": "WORKDIR /go/src/github.com/aokumasan/nifcloud-additional-storage-csi-driver", "fdb3ad1bfc27f97767917ff0d84cb45c": "RUN apk add --no-cache open-vm-tools", "8ec121970d6a1a92f2bfc434139f4b11": "COPY /go/src/github.com/aokumasan/nifcloud-additional-storage-csi-driver/bin/nifcloud-additional-storage-csi-driver /bin/", "1d83126049af1eb805dfd80ae05fa831": "ENTRYPOINT [\"/bin/nifcloud-additional-storage-csi-driver\"]", "bce520f7b510b00574295e27dcd22161": "RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o screenshot .", "15f32bdbd8bd8d4103b47a42475504e7": "COPY ${SRC_DIR}/main .", "4f2db12cca2c6bf68c9bde1b05c222da": "COPY . /go/src/github.com/m-lab/pusher", "a9276842076fa7223010add2452a0eb3": "RUN go get -v github.com/m-lab/pusher", "e15b8a2f7122ee7fda484326531d2b28": "COPY /go/bin/pusher /", "1b1a1171256c820c9035325c8637e45e": "CMD [\"/pusher\"]", "33f50c570510400ad3a2a3aa126e2c4f": "COPY /app/out/dnschecker .", "50f6d3948c450a687da52210cb4bf02b": "CMD [\"./dnschecker\"]", "af7f250e3f22e41510a5a3cf6ff0bcd9": "FROM golang:1.12.8-alpine as builder", "430b11f7d7c5b0c9113e739f5f7c5a40": "FROM golang:1.12.8-alpine", "426ac6091d00a6f9f3c8eefb1af99607": "COPY /app/ddns /app/", "039c48444db31374d4dce7a00cdb5548": "ENTRYPOINT [\"/app/ddns\"]", "97d77f0996db741f5a5e5103a6181204": "LABEL UcbPods.version=\"0.0.12\" maintainer=\"Alex\"", "51d46577a9e796bf8d4ac1d035475fa8": "RUN git clone https://github.com/edenhill/librdkafka $GOPATH/librdkafka", "d793cabdd0370b86907381a547cdd831": "RUN git clone https://github.com/go-yaml/yaml $GOPATH/src/gopkg.in/yaml.v2", "8af2198135bf57e69299a68a3330ccab": "RUN cd $GOPATH/src/gopkg.in/yaml.v2", "4d4ccbdd1f53e345a7ac51e60baddab6": "RUN git checkout tags/v2.2.2", "4e2d0027547ee58bea2a75b025c91077": "RUN git clone https://github.com/go-mgo/mgo $GOPATH/src/gopkg.in/mgo.v2", "c80cd8e230f14369f76c30229e0e5357": "RUN cd $GOPATH/src/gopkg.in/mgo.v2", "feee73f6975e7386713cd42b31a01fa6": "RUN git checkout -b v2", "97950a837e85681ce83bca00ad07ea7a": "RUN mkdir -p /go/src/github.com/ajarv/go-web-redis/", "edb3a864436d8e4311ce7472d91a8a95": "ADD . /go/src/github.com/ajarv/go-web-redis/", "49f8e58059b30b844759680792c13782": "WORKDIR /go/src/github.com/ajarv/go-web-redis/", "db655e28fdcca70b205967e45e7f0c78": "RUN go get -d -v github.com/go-redis/redis github.com/gorilla/mux gopkg.in/yaml.v2", "3820208df3e5cabed10a5b0005ec62cf": "WORKDIR /uropa", "f49d7720cdce604b20445cc7ca6081de": "COPY go.mod ./", "36f38a670d05864b41ff325d23fdf1d5": "COPY go.sum ./", "c7d70557899405f6da13475e9774339c": "ARG TAG=\"\"", "a21ab72bb27f80a7abaa6df3aebdf120": "RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o uropa -ldflags \"-s -w -X github.com/ninjaneers-team/uropa/cmd.VERSION=$TAG -X github.com/ninjaneers-team/uropa/cmd.COMMIT=$COMMIT\"", "10abd7996036e7e80065ac6e99ae5b75": "RUN adduser --disabled-password --gecos \"\" uropauser", "e9aa3fd650bf0d427e21112c537d45ab": "USER uropauser", "0cf2d71c42a39bc8853e8a79b3e362ab": "COPY /uropa/uropa /usr/local/bin", "ef7ab1ff452a1848ff91f78068034a8a": "ENTRYPOINT [\"uropa\"]", "8a014ab7b84e2fc6a142348c00bd4217": "WORKDIR $GOPATH/src/github.com/anderskvist/GoRenoWeb2MQTT", "decc0ded99de8b0b3d414480e619c49c": "CMD [\"GoRenoWeb2MQTT\",\"/config.ini\"]", "d5a3b67cc8eabc1ebfe4f0b3bdd89a2c": "RUN go build -tags netgo -a -v -o gladius-edged -i cmd/gladius-edged/main.go", "7efaafbe03f7222f23b4ab753e9454e8": "COPY /src/gladius-edged /app/", "b5f4e45295ee1e55ef0b1673e8331806": "RUN echo \"===> Installing capstone...\"", "d4ed8a2a7c3ead5310be09e3aaf12bbb": "RUN git clone -b next https://github.com/aquynh/capstone.git", "f75e1b58973ad913f11344b4be87cd3f": "RUN cd capstone", "a1b32eeccaa64bc6ddbe88ecc5907678": "RUN CAPSTONE_ARCHS=\"arm aarch64 x86\" ./make.sh", "b909f92f41094ceaa465bd71e2f31cc2": "RUN ./make.sh install", "33b161ee5dd198f62481d15afd18141a": "ENTRYPOINT [\"/usr/local/bin/kurl\"]", "2fbb954f65b1f4565d623fe46e310334": "ENTRYPOINT [ \"/go/main\" ]", "7e556ac71eff2876f3a6dadf2aa72231": "RUN go build -ldflags=\"-s -w\" -a -installsuffix static -o /badcapt cmd/badcapt/badcapt.go", "9533ff3d0f9b5d3fe2a61a272856ec7b": "ENTRYPOINT [\"/badcapt\", \"-i\", \"eth0\", \"-d\"]", "46f7df5748d62961eebe727a97f0e4e6": "RUN CGO_ENABLED=1 GOOS=linux go build -a -installsuffix cgo -o rss_sync .", "da35a67bfc3be2fb43981cea42773882": "RUN apk add --update git gcc", "f8e59e9530313004b66877e0ba05aa43": "RUN apk add --update --no-cache", "478b4d8be3fbc22fd726dd002f9197bd": "RUN ca-certificates", "2808ed1938ecb0bc8160456f1a0c17cb": "FROM golang:buster as build", "c4f21e5478e9808ba3ab806db1b6a5dc": "RUN apt-get install -y wget build-essential pkg-config --no-install-recommends", "e8803e9b049f0c366866195eb4dcc786": "RUN apt install -y -q libjpeg-dev libpng-dev libtiff-dev libwebp-dev libgif-dev libx11-dev --no-install-recommends;", "919dc039b411313c6fa59f0614dbda21": "RUN wget http://www.imagemagick.org/download/ImageMagick.tar.gz", "7c5abcc7bfe9a3eaf27c96de4f4ba5ac": "RUN tar -xvf ImageMagick.tar.gz", "4ae8dfada0a18ff123f3d5c5ccacd901": "RUN cd ImageMagick*", "8bef5ecdd5ac5261c41b0c63cde3fdd6": "RUN ./configure --prefix=/usr --without-magick-plus-plus --without-perl --disable-openmp --with-gvc=no --disable-docs", "8d9ada0df7288802e0c22e4caf3ca206": "RUN make -j$(nproc)", "3f3713308794459b2966555b89b26139": "RUN ldconfig /usr/local/lib", "34bf37b801cbe64dbc5c2dfae87c514f": "RUN export CGO_CFLAGS=\"-I`pkg-config --cflags MagickWand`\"; export CGO_LDFLAGS=\"-I`pkg-config --libs MagickWand`\"; export CGO_CFLAGS_ALLOW='-Xpreprocessor'; rm -rf $GOPATH/pkg/linux_amd64/gopkg.in/gographics/imagick.v3; cd $GOPATH/src/image-server", "09b683e54c6632c7a9155e6bf4399ad3": "RUN go install -tags no_pkgconfig -v gopkg.in/gographics/imagick.v3/imagick; go build -o app; mv app /opt/app;", "fe48e682568500e698693f580381b606": "RUN apt-get install -y wget build-essential pkg-config fontconfig libjpeg-dev libpng-dev libtiff-dev libwebp-dev libgif-dev libx11-dev", "00bc6cafc0d2a0bb4d6c7119e1678fad": "RUN wget https://github.com/jemalloc/jemalloc/releases/download/5.2.1/jemalloc-5.2.1.tar.bz2", "047898abbc755d211cf2cdd3ce3b6226": "RUN tar -xjvf jemalloc-5.2.1.tar.bz2", "f1288ed6d72e8216353bbf1603c8ef5d": "RUN cd jemalloc-5.2.1/", "e4dbb7c9c66938f89c8e70210b4c707a": "RUN ./configure --prefix=/usr/local/jemalloc", "b6f10e5f84640735bf32749dee6a73e8": "RUN echo /usr/local/jemalloc/lib >> /etc/ld.so.conf", "76248b6f8161ba1e28d257f47f96d0f1": "RUN ./configure --prefix=/usr --without-magick-plus-plus --without-perl --with-jemalloc --disable-openmp --with-gvc=no --disable-docs", "c098af4bf2bd9412cc8a0d0172b12781": "RUN rm /etc/localtime", "9fd7f28d3edbf435e0653908bd563e84": "RUN ln -sv /usr/share/zoneinfo/Asia/Shanghai /etc/localtime", "0036798b27366c308f865b4e36e35324": "RUN apt-get remove --purge -y wget build-essential pkg-config", "d9676e2a34ac3c840075f706b9b44785": "RUN apk add --update git openssh python3 python3-dev py3-pip build-base zip nodejs npm", "de29eaa18caca80e500c2726cf677503": "FROM golang:1.11-alpine AS development", "0614682133b7b08f7570bb74b1eab376": "ENV PROJECT_PATH=\"/go/src/github.com/brocaar/lora-geo-server\"", "e9ecf27f95eb9cdffe7052c66d3038d9": "RUN apk add --no-cache ca-certificates tzdata make git bash protobuf", "2182e49936172956932a300d570e8064": "RUN make dev-requirements requirements", "d56c32fd58f3e726aa53ff2ee6cbedf6": "COPY /go/src/github.com/brocaar/lora-geo-server/build/lora-geo-server .", "51d396a842168c5101b4986e1a390820": "ENTRYPOINT [\"./lora-geo-server\"]", "e2322cd908484f0d7a8a74b5cec17434": "ENV PROJECT_PATH=\"/chirpstack-application-server\"", "fee20ebb899a4743262c895b040aaef4": "RUN apk add --no-cache ca-certificates make git bash alpine-sdk nodejs nodejs-npm", "78d041b44434758bce5360beb2c63be1": "RUN make dev-requirements ui-requirements", "c432c5833113d54c6dff2a4c38d22cac": "COPY /chirpstack-application-server/build/chirpstack-application-server .", "c5fdb8ebd54aa17a424a6567b77bf195": "ENTRYPOINT [\"./chirpstack-application-server\"]", "4c514c7353d34a663d569fa5cbb52fd9": "ENTRYPOINT [ \"/go/bin/wonderapp\" ]", "5d744b6eb5c101da52bb56646eb34db1": "RUN apk add --update git chromium python py-pip", "a423b06b7330a4958cd8b549bdbdfd0f": "RUN go get github.com/michenriksen/aquatone", "5435bdb0c84a23c700c155303cffcb3d": "RUN cd $GOPATH/src/github.com", "0be98ccc476c593a0a294e7bd62ad244": "RUN mv webkubectl yudai", "7304442c9fe2999facfac7c8c1fe1fe4": "RUN cd yudai/gotty", "1452ae02c33a70e326045e1d4d9ba081": "RUN apk add --update git curl libarchive-dev build-base linux-headers nodejs nodejs-npm", "388af70bf6a87063bbf24b17659ca5f7": "RUN mkdir -p $$GOPATH/bin", "946d70e44db84b39d50d0cab047f7dda": "WORKDIR /go/src/github.com/UpdateHub/updatehub-ce", "ec11cb1e08310d61cfb3cf8f37825663": "COPY glide.* ./", "310ae43390cc2e256a1adb7983fefa68": "RUN glide i", "5086b6d5ee00d4982bf706cd283217da": "RUN go get -u github.com/gobuffalo/packr/...", "f626bdff1252bb5508b63cded4a5bf90": "RUN (cd ui; npm install", "1c1a6b11e59b4bed9d817a6f8191a0c8": "RUN npm run build)", "dd9f4df179e618529feef01dd537601a": "RUN packr install", "277e007220d3bc3850e14271197b06b8": "RUN apk add --update libarchive", "e43cdde5df55a62ee66c4234fd5bd341": "COPY /go/bin/updatehub-ce /usr/bin/", "100a92f571454d625b681803d6c69ebb": "ENTRYPOINT [\"/usr/bin/updatehub-ce\"]", "ab3b451c57f8e86067398ec70961ed87": "COPY main.go static ./", "53af17294b1f85d1f6028f5a689ab9f5": "COPY /paygo/main .", "c80e4a5ae21cad224875221ce6a01d60": "FROM golang:1.11.5-alpine3.9 as builder", "8cf9efb935cd5f1b74aaad702e9fdbd3": "WORKDIR /usr/local/go/src/github.com/antoniomika/sish", "b35d0f9c525f4d1b08b2d2e3c915e436": "COPY /usr/local/go/src/github.com/antoniomika/sish /", "8383b3bcabf4fff8898a06cbdeed9cab": "COPY /go/bin/sish /sish/", "70288145815e6f934cbebc861de4e9c1": "WORKDIR /sish", "2266fb4cc4065e2686d63ce8b1fdfcc6": "ENTRYPOINT [\"/sish/sish\"]", "3e51f3a657a297f0911c0a763ec82050": "ENV GOGO_PROTOBUF_VERSION=\"1.2.0\"", "e00d8661aac7b69c343ad7400d83ecde": "ENV GOLANG_PROTOBUF_VERSION=\"1.2.0\"", "9c082e548801156bc5e8460716e036dc": "ENV GRPC_GATEWAY_VERSION=\"1.7.0\"", "ec44e8f3f05ee9de9935128916db143d": "ENV TWIRP_VERSION=\"5.5.1\"", "4731ffe2adf69f659ff3543d2f9ea91f": "ENV YARPC_VERSION=\"1.36.1\"", "515fc514a22f6feb92b751a9f2bfbd99": "RUN git clone --depth 1 -b v${GOLANG_PROTOBUF_VERSION} https://github.com/golang/protobuf.git /go/src/github.com/golang/protobuf", "564761322ad2754fdd6d7f260358509a": "RUN cd /go/src/github.com/golang/protobuf", "718aa472934c83a1385d26207dbb442f": "RUN go install ./protoc-gen-go", "1427086af6285c3d5b2f4010ae28955d": "RUN git clone --depth 1 -b v${GOGO_PROTOBUF_VERSION} https://github.com/gogo/protobuf.git /go/src/github.com/gogo/protobuf", "9808c1936eeb1890a5b194d1c648cae8": "RUN cd /go/src/github.com/gogo/protobuf", "3c8ea4923cba61123dd298c05e5e8744": "RUN go install ./protoc-gen-gofast ./protoc-gen-gogo ./protoc-gen-gogofast ./protoc-gen-gogofaster ./protoc-gen-gogoslick", "9e33ac94fc389980dcf8122cff4fc1c4": "RUN apk add --update --no-cache bash grpc=${GRPC_VERSION}-${ALPINE_GRPC_VERSION_SUFFIX} protobuf=${PROTOBUF_VERSION}-${ALPINE_PROTOBUF_VERSION_SUFFIX}", "4127d509ee327532aff3c2964d1bf86f": "WORKDIR /go/src", "fc828722b717a0096cd4b3c3b4dac5c3": "RUN go build -v -o test-sds-server sds.go", "25327cfa1ffaeada972c0f687ca718e8": "CMD [\"/go/src/test-sds-server\"]", "e9987a8a87738aaf7b0c45fbc42cb93c": "ARG VERSION=v1.2.0", "f64501e1e7376cb3701a7dba86952d85": "RUN apk add --no-cache git make bash alpine-sdk", "0e494fd1333ac9cef9090b497adf6ec3": "RUN git clone --depth 1 -b ${VERSION} https://github.com/mintel/dex-k8s-authenticator.git .", "fff700cb4131d8c92218568d2bdd3dd1": "FROM alpine:3.12.1", "ec5002c4ccf3636f37357119565f859b": "RUN apk add --update ca-certificates openssl curl tini", "558c8885cb2b9a4b423b8853228411ec": "COPY /app/bin/dex-k8s-authenticator /app/bin/", "a946ac80b737e0ad7959c04e4b134b50": "COPY /app/html /app/", "1337f2c3e27e36ccd97870dba8eb2df4": "COPY /app/entrypoint.sh /", "65c7908735fa079bf3b21ec1ae7b48ad": "ENTRYPOINT [\"/sbin/tini\", \"--\", \"/entrypoint.sh\"]", "1734ab733d96c27001ac19a30e461629": "ARG GO_VERSION=1.11", "494d90a4ebe6579a6d5d2393c558640b": "FROM golang:alpine As builder", "5ccb30785025325334c6b229339b4edb": "RUN go build -o /applifier", "972b1c075c3a3a15a742b3feca18d653": "LABEL maintainer=\"Elahe Dastan <elahe.dstn@gmail.com>\"", "2404b6c3b129c6a0e559c768fc2c26e4": "COPY /applifier .", "b6d08d282086d3559f39fa5cba8d9c89": "ENTRYPOINT [\"./applifier\"]", "efba3a634dfab8ec353cdbb4959e18d7": "RUN git clone https://github.com/minio/minio", "dd67ec61ec585fec63fb3d45b2cb257c": "RUN cd minio/", "549ba705f03287897c53267d8ad1776a": "RUN git checkout d4dcf1d7225a38ecf94abe7cbe7c69a93dc7c0b0", "667f96c9685b4b42e849d1cc975a96e0": "RUN cd pkg/madmin/examples/", "8dff7f1696eff23c5b9e8c4b91e05192": "RUN go build adminio-api/src/main.go", "b85233266e0894787b9ec16466ebaa32": "COPY /go/src/app/vaultsync /", "5127afab7880c6c33140f40e9b7c8480": "ENTRYPOINT [ \"/vaultsync\" ]", "a4280e5823052ccc6aa58445fab1cbcb": "COPY /src/dist/bee /usr/local/bin/", "d59c27f438355cfd4153b97f6389b0df": "RUN chmod +x /usr/local/bin/bee", "34aa490cd129537cda6666b5ca3ae11a": "ENTRYPOINT [\"bee\"]", "5d12bce1016bf5fcaf7f4fc841978aad": "FROM golang:1 as fortio-builder", "fda46715780a1ea24065736c087fff68": "RUN set -ex; apt-get update; apt-get install -qy libcap2-bin", "0775dcca97843e1d629a2f51dadc62fe": "RUN set -ex; go get fortio.org/fortio; cd /go/src/fortio.org/fortio; git fetch --tags; git checkout master; make submodule-sync; make official-build-version OFFICIAL_BIN=~/go/bin/fortio; setcap 'cap_net_bind_service=+ep' `which fortio`; fortio version", "63f8daa827ca4d17a64b36036303e5ed": "ENV PATH=\"$PATH:/usr/share/bcc/tools/\"", "ab231cb742b3dfee8826d92de651eedc": "VOLUME [ \"/lib/modules\" ]", "60bf4ffbd583101e1ccea5c62e530a6b": "RUN set -ex; apt-get update; apt-get install -qy apt-transport-https bc bpfcc-tools curl dnsutils git htop iftop inetutils-ping iotop mtr netcat nethogs net-tools nmap pv strace sudo tcpdump tmux traceroute vim wget; rm -rf /var/lib/apt/lists/* ; curl -Lo /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl; chmod +x /usr/local/bin/kubectl", "b3ddfb1c65f5244b3bc25ae685fb0beb": "COPY .files /root/.files/", "0a9280deb421793ee8d09eed5f63f279": "RUN yes | $HOME/.files/install.sh", "4d8502faa5230a8db4220e02c4baadf8": "COPY /go/src/fortio.org/fortio/ui /go/src/fortio.org/fortio/", "9260f53f5c0269cc470bc85950694937": "COPY /go/bin/fortio /usr/local/bin/", "9b959ef277654341b25982ddc93136df": "CMD tmux", "3da1e6c70ebafb76b44a97acc19e88a4": "FROM golang:1.12.0", "59a0e608dc1be44ba91592f77ddd2c6e": "ENV NODE_VERSION=\"11.11.0\"", "bae83ca5c8affff1f1699110b7b5accb": "FROM golang:1.11.3-alpine3.7 as build", "500ad7725ec4e70079ac78ce7b35b4a9": "ADD . /go/src/github.com/leominov/alertmanager-devops-toolkit", "da138a5566b4eae39a4b1875a1ed36d8": "WORKDIR /go/src/github.com/leominov/alertmanager-devops-toolkit", "03cd976f68662f467990da82ba69f7a4": "RUN go build -o /bin/alertmanager-devops-toolkit .", "4d73bf48ea022e1ad48d5d7601ce6e58": "COPY /bin/alertmanager-devops-toolkit /usr/local/bin/", "2762576b083e013f05149e7f114a6536": "ENTRYPOINT [\"alertmanager-devops-toolkit\"]", "b44213a6aa2c1311740de95718b92c27": "RUN apk add --update --no-cache --virtual build-dependencies git make", "078eeb694dbd5df3acc0490dc810f334": "RUN git clone https://github.com/google/mtail", "ee248c3d796ea3fb071c361edf62754a": "RUN cd mtail", "1f1c5001e5c9cba44a6d34c6dc11c226": "COPY /build/mtail/usr/local/bin/mtail /usr/bin/", "52538a8e300be5d41b46c4d6c03246ee": "COPY *.mtail /etc/mtail/", "794f410bf1c60c2062f284e5318fec61": "ENTRYPOINT [\"/usr/bin/mtail\"]", "098f3f13cf6295bfaff4e8984e4695c6": "RUN go build -o app -i cmd/main.go", "75bf7b1f1135f3ad1f719fe93448eca2": "FROM golang:1.12.9-alpine", "f447f9d4e2fa10fcf9210bec031ccd1e": "CMD ./provisionize -config-file=/config/config.yml -zipkin-endpoint=$ZipkinEndpoint", "c3e8a026acf5b0d5465f1ca05588adc3": "COPY . /go/src/", "b39fd1fd649c3e97e892fdeb4df2edb2": "WORKDIR /go/src/api", "7e1446ec2f8a14a1b4f044c1646ba01d": "CMD [\"api\"]", "158c71b1b7dab67d6856a000b85d2ac5": "FROM golang:1.11.5-alpine3.8", "b9d6cf096cace7e7249604e372ac1f3b": "RUN mkdir -p /arangoadmin", "38eb298ae1b9cf83a28533890bd497f5": "WORKDIR /arangoadmin", "808a9bf4532fb1f0ffe501aa3aa55561": "COPY go.mod *.go ./", "334102c97f5a550bd0ba08fc424132a4": "COPY /arangoadmin/app /usr/local/bin/", "7881a3d82282d9acd0f02cead1a8ecf4": "RUN apk add --no-cache build-base git tzdata", "063abbdbcf5e103eac0fcd9306e7a406": "COPY /puti /", "9dddeb45c4a1c154dda72f08869bcfe6": "CMD [\"./puti\"]", "449ccc0d91cfe47f8128c4061a7bbf32": "COPY /app/screenshot .", "62cf7af8a01fb0b3c056387de885b7b2": "COPY config/config.yml .", "9938b5df1b0c76ca78094505510029af": "CMD [\"./screenshot\"]", "258bbb399e2df6789796095b31d672b7": "ARG APP_ENV=prod", "9d5f22e0b0ceac44d20111b684e6ded1": "FROM alpine:3 AS base", "8d75a24ee5c46d2b662b0276e2f1b8cb": "ENV JMX_VERSION=\"0.18.0\"", "6f05616365e6aecbe3e011e03a6e2a27": "RUN apk --no-cache --update-cache --available upgrade", "ec278340fb723016b5997363e15aa551": "RUN apk --no-cache add curl bash coreutils gcompat sqlite", "6410ed92082ba2197858e8387ba96cc1": "RUN apk --no-cache add openjdk11-jre --repository=http://dl-cdn.alpinelinux.org/alpine/edge/community", "66e2ec4980970f9740ce4f43d2dc5de2": "RUN apk --no-cache add jattach --repository http://dl-cdn.alpinelinux.org/alpine/edge/community/", "9229ca8763f8c17117950fbe7cdda74c": "RUN curl -sS https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-runner/9.4.46.v20220331/jetty-runner-9.4.46.v20220331.jar --output jetty-runner.jar", "5e4459f0829dd7ec3c4f9d16e61402c9": "RUN curl -sS https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-jmx/9.4.46.v20220331/jetty-jmx-9.4.46.v20220331.jar --output jetty-jmx.jar", "41497c1884acb7ba4d48c110596961fb": "RUN curl -sS https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-util/9.4.46.v20220331/jetty-util-9.4.46.v20220331.jar --output jetty-util.jar", "95b8357c645f949ba4fa0b5d3f09e732": "RUN wget --no-verbose https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.24.0/opentelemetry-javaagent.jar", "0ed683ff352095475b53c6e89b854ae0": "RUN wget --no-verbose https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/${JMX_VERSION}/jmx_prometheus_javaagent-${JMX_VERSION}.jar -O jmx_prometheus_javaagent.jar", "8f2973d76b806cd5272a3682f03bf3ae": "RUN cp /usr/lib/jvm/java-11-openjdk/jre/lib/security/cacerts /tmp/kafka.client.truststore.jks", "6714e3a03c1b76acec37782f6aa833c6": "FROM base as prod-install", "4321dc256af075df83a9ac492883154d": "COPY war.war /datahub/datahub-gms/bin/", "b57ff315b61336d3c930a7c50756d1cc": "COPY metadata-models/src/main/resources/entity-registry.yml /datahub/datahub-gms/resources/", "dba7aef48d8efcb2da7062865d68f295": "COPY docker/datahub-gms/start.sh /datahub/datahub-gms/scripts/", "aa81c8ce84ad3429fb79206243655aa3": "COPY docker/datahub-gms/jetty.xml /datahub/datahub-gms/scripts/", "115092f6b138190db598cd214da9bf55": "COPY docker/monitoring/client-prometheus-config.yaml /datahub/datahub-gms/scripts/prometheus-config.yaml", "4053f0afa106ac71e41b37bc43729cbf": "RUN chmod +x /datahub/datahub-gms/scripts/start.sh", "bc589d7ca4890885638858adae9bf4ba": "FROM base as dev-install", "cfb84b596399d1f944582d0a6ff8541f": "FROM ${APP_ENV}-install as final", "bda1db6dd9851edafd08e6c08b0e5103": "RUN mkdir -p /etc/datahub/plugins/auth/resources", "61111b5c4ab4b89f538bf032c7222843": "RUN addgroup -S datahub", "754a5fd0619d63cff0228cc25b2e6710": "RUN adduser -S datahub -G datahub", "e098004c68ca827ceda49bc72587f4f8": "RUN chown -R datahub:datahub /etc/datahub", "0e7b6bdc0212a9c22d6001366d157d96": "USER datahub", "756a0af4bf300693d8f9751ddad0fb9c": "ENV JMX_OPTS=\"\"", "d679ab7102a0f94cd05a1678ba4bf497": "ENV JAVA_OPTS=\"\"", "5c0d0d0852abe134bffffe99e2f82574": "HEALTHCHECK --start-period=2m --retries=4 CMD curl --fail http://localhost:8080/health || exit 1", "bbd05d0a9857aa46c4529acd742fb194": "CMD /datahub/datahub-gms/scripts/start.sh", "03d198b31cb4f50aae665e4dc7164ca5": "ADD . /go/src/easybot", "fbfa13dc6de64ae3c6580d33f90e3134": "WORKDIR /go/src/easybot", "3c0553919295a8bd6530d614de7f89cb": "RUN echo \"Building Version=`git describe --always`\"", "94c2c8a03727f1baaec648352ad9a2e5": "RUN CGO_ENABLED=0 GO111MODULE=on go build -ldflags \"-X main.version=`git describe --always`\" -o easybotsvc", "27cc1775ea45b125b99c003745c5de9e": "RUN ln -sf /usr/share/zoneinfo/Asia/Taipei /etc/localtime", "1a9c2a97cb4ea22da159fb38c3c2f771": "RUN echo \"Asia/Taipei\" > /etc/timezone", "5ec9b4c9eafbd9e26b59bb1f239e0c19": "WORKDIR /easybot", "92558d18722c989ba702c1a5d6285f82": "COPY /go/src/easybot/easybotsvc /easybot/", "21e053a241d5d27531095d53c3ce7a10": "RUN chmod 777 easybotsvc", "ffeaab5200cb436e6dc0ab5dea198de7": "EXPOSE 8801", "c9c947a83e4d017b5c3774124ab0c8f1": "ENTRYPOINT [\"./easybotsvc\"]", "f4820c62456e27f1e2a7da600b6423c0": "COPY /tmp /", "ccc346620c3abbd60b680051ccc04e38": "ENV CADDY_VERSION=\"1.0.0\"", "a7a1996884894853fbda8ab5baa12530": "RUN go mod edit -require github.com/caddyserver/caddy@v${CADDY_VERSION}", "eb27a95f7c8cc96742faaadcdc031ebd": "RUN go build -o invest-ftw", "1d03f2abbb8bff42ca3ba962efb5c0ab": "COPY /src/invest-ftw /app/", "344a473831cd1530770216546dadf7f7": "COPY /src/static /app/", "e83db09fd2d9215476b25c85ae0ac474": "ENTRYPOINT ./invest-ftw", "c9e91a884ccef1b7728267c77084670d": "FROM golang:1.12.1-alpine3.9 AS gobuild", "d30ef401f19c5fb82c5c8aaa446e6e53": "ENV HTTP_PROXY=\"http://172.16.4.26:17777\"", "a15984205d5bcec8b9ff12f389c7d2a9": "ENV HTTPS_PROXY=\"http://172.16.4.26:17777\"", "fca6c9e2279b3f545a74f9204fb6688e": "COPY /goapp/main go-graphql-srv", "ad68eb3a4330c01e1fdde046477b4643": "CMD ./go-graphql-srv --debug --addr=127.0.0.1:8080 --dbaddr=127.0.0.1:27017", "e84d80612fd0791c2b1993c778a3a227": "RUN go get -d -v github.com/gorilla/mux go.mongodb.org/mongo-driver/mongo", "8e3c894310236f9c9ee807aad22917a0": "COPY ./src /go/", "df08b7a127115b63853d5775e70309f6": "RUN GOOS=linux GOARM=7 go build -o /app/main /go/src/app/entry.go", "7f2efca3dac82ae365be0baf9fe89ca2": "COPY ./build /app/", "bb18f372388f5b28945cc718f5bcb8a5": "RUN ./gateway secret", "b503d5dc217d961c5eee5cd4803a0afa": "RUN ./gateway load", "adc62c6eac827ed4c6d84e88a5a0845d": "CMD [\"./gateway\", \"run\"]", "2b9d63cd00aa1b2c5a57578756b9a641": "COPY /go/src/github.com/stevenkitter/api/static .", "1d0ec7233ed1c6959889bd0494e36eaa": "RUN apk install docker", "6ba410e9ec4166ecae53432e8429e869": "RUN service docker start", "63463a6dc5ba370f436d5de63f4f18be": "RUN go get -u github.com/stretchr/testify/... github.com/kardianos/govendor github.com/kisielk/errcheck github.com/golang/lint/golint", "e14c572f8a5143c4d1a7b7f086d85956": "RUN go get -u github.com/haccer/subjack", "f5379169c12ca27d77444a56a3fd9dd5": "ENTRYPOINT [ \"subjack\" ]", "31946847e37b173c895904e863238c39": "CMD [\"/go/src/app/main\"]", "13d0535b2f3815127d48bdd26b97aa1c": "COPY . /go/src/github.com/m-lab/prometheus-bigquery-exporter", "7afeb78aff0489c43db54c8d17d21651": "FROM golang:1.14 AS build", "24c8ce26c8b5b74b30260e03a3d65e50": "RUN make binary COMMIT=$COMMIT", "d0fef20063d92465fc4b3b12a3b09f5e": "FROM debian:10.2-slim", "34a234623630b8a83838cb6b75c9b78d": "RUN apt-get install -y ca-certificates; apt-get clean; rm -rf /var/lib/apt/lists/*; groupadd -r bee --gid 999; useradd -r -g bee --uid 999 --no-log-init -m bee;", "349098e05ea69f010fd61597ac40bd12": "EXPOSE 6060 7070 8080", "11152027fd3581bf8476f5310ed36d64": "USER bee", "3e3578319d25718d07aae2dcf2a22b8b": "WORKDIR /home/bee", "a805dccf3f2216ebcc5d9c03ec039175": "ADD ./ /go/src/github.com/pvr1/anypay", "bc8827c74181202fa523333cc88a3262": "COPY controller/* .", "85de24673cb5a54d0b98305559712615": "LABEL version=\"1.0.3\"", "b5475163dfbb9ea1e29621d809d6d4d9": "RUN go get -d -v github.com/shadowsocks/shadowsocks-go/cmd/shadowsocks-server", "c846ff14c2e80c96521052a7acf11147": "RUN go install -ldflags '-w -s' -tags netgo -v github.com/shadowsocks/shadowsocks-go/cmd/shadowsocks-server", "e14daf692bf097bd58f35ff6613570d4": "RUN go get -d -v github.com/xtaci/kcptun/server", "1ba82efd322ae31af607509c0d2443c6": "RUN go install -ldflags '-w -s' -tags netgo -v github.com/xtaci/kcptun/server", "772dc1c14ceeae62a9d1d00a87f20ac4": "RUN go get -d -v github.com/shadowsocks/go-shadowsocks2", "8de1fd24b2c770125c810052517fa74d": "RUN go install -ldflags '-w -s' -tags netgo -v github.com/shadowsocks/go-shadowsocks2", "39d75b2c8120f7d99fd0eba53db3385a": "FROM alpine:3.9.4", "3dfe2f03566f54be5726160c3d9ddbb5": "ENV SS_DOWNLOAD_URL=\"https://github.com/shadowsocks/shadowsocks-libev.git\"", "99c369ba88463f8975913d8e41fe4ebe": "RUN apk add monit", "19c1f150f586654836925e813d4a0704": "RUN apk add openrc", "23fcfb10f260343dab7c43bc174851bd": "RUN apk add autoconf automake build-base git c-ares-dev libev-dev libtool libsodium-dev linux-headers mbedtls-dev pcre-dev", "39d361bb3ef239e52e340ef8b77dbf15": "RUN git clone ${SS_DOWNLOAD_URL}", "e3ae4c320c2c41b4a639b7add4174378": "RUN apk del autoconf automake build-base git", "726c28f10ede48c0b21d3ef27ffcc1ab": "COPY /go/bin/shadowsocks-server /usr/local/sbin/", "03d760d1577cb382a16acd2653d88a0f": "RUN cp -rf script/shadowsocksConsole /usr/local/sbin/", "9a72f6f5db5243a8a821acd3273533fd": "RUN chmod a+x /usr/local/sbin/kcptunConsole /usr/local/sbin/shadowsocksConsole /usr/local/sbin/shadowsocks2Console /usr/local/sbin/shadowsocksLibevConsole", "b3e2ddd9bcfce6434eac0447038a60ea": "ENV ALIYUNCLI_VERSION=\"3.0.24\"", "775fc866967405ed356401c62604ef3a": "WORKDIR /go/src/github.com/aliyun", "4864f32f2bdfa564ef1404ff8f5a7073": "RUN apk add --update make git curl", "2964c4e8f7f3aa494ee25b324b193ffc": "RUN curl -L -o aliyun-cli.tar.gz https://github.com/aliyun/aliyun-cli/archive/v${ALIYUNCLI_VERSION}.tar.gz", "190c610bfd1ea7ea49d7910534a41d05": "RUN tar zxvf aliyun-cli.tar.gz", "db2ff5176043a6ca3ff8f64acb35c3ff": "RUN mv aliyun-cli-${ALIYUNCLI_VERSION} aliyun-cli", "132ad02fcefe1eff710812a67ddcfd03": "WORKDIR /go/src/github.com/aliyun/aliyun-cli", "79ae7a32605ad4d0b36d906cc9e45c97": "RUN make testdeps", "a1ec5a7974c3eed3eae28d3396fd257d": "COPY /go/src/github.com/aliyun/aliyun-cli/out/aliyun /usr/local/bin/", "2c54edc3dd2be21d38558be05a6d17be": "FROM golang:1.8.3-jessie", "2b3a297d58eb081ee0a976957d9f522a": "RUN useradd -s /bin/bash golang", "7add649d93e0c31f7c502dc61196980e": "RUN apk add --no-cache wget curl git build-base", "401d8f9cf7ea51252a7ce3fd2cdbbd92": "ENV NAME=\"anchore-image-validator\"", "38fcc499a5d63428e924f69467f2c50e": "WORKDIR /go/src/github.com/banzaicloud/$NAME", "ccd9d7fa09c0f3597aff2a44d4839fd6": "RUN cd cmd", "9a53583faf3fbcb89bb8faf503d353a1": "RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o /$NAME", "1c55831a5c5b51edcd7142464ad59ef4": "CMD [\"/$NAME\"]", "746908ea5db234722cbc36663aa3812c": "ENTRYPOINT [\"/pusher\"]", "0c088aa909225af53674d656947bc696": "FROM golang:1.5-wheezy", "818adf911501b7e8c682bc9a2e1039ee": "RUN curl -sL https://deb.nodesource.com/setup_4.x | bash -", "8f721e9084bc4745dfc6784318284d41": "ADD . /go/src/tetris-go", "b243e7a7b0ff6ee4830c65c0edcd0fac": "WORKDIR /go/src/tetris-go", "42df7777a39b83d5a5721b1af8ffc6f4": "CMD [\"/go/bin/tetris-go\"]", "dcb50f8f4edfdd60f84ba3cb7d6a37bc": "RUN apk add --no-cache --update nodejs gcc g++ python", "a4d57136eed961157f2137e78b4ff3fc": "FROM alpine:3.9 AS files", "c5ef30062009f954337306b311903fd5": "ARG NGINX_VERSION=\"1.15.10\"", "68f1ef758f9e23cd169c3704e7601d7d": "ARG MODSECURITY_VERSION=\"3.0.3\"", "935b79e8727a718517c660bf7c35169f": "ARG MODSECURITY_SHA256=\"8aa1300105d8cc23315a5e54421192bc617a66246ad004bd89e67c232208d0f4\"", "fe53d8f42bf0e38601a0789c4a4dd328": "ARG MODSECURITY_CRS_VERSION=\"3.1.0\"", "0478a04210350815f08416cdbaf07ede": "RUN if [ \"$MODSECURITY_SHA256\" != \"$(sha256sum modsecurity.tar.gz | awk '{print $1}')\" ]; then exit 1; fi", "9f06fb878b30dc04303c1c533cf179c5": "RUN exit 1; gpg --batch --verify nginx.tar.gz.asc nginx.tar.gz", "f39c3a05035c44ad83de0c779bf142b7": "RUN strip /usr/local/modsecurity/lib/libmodsecurity.so.3.0.3", "90bd13c8f95e396e9a9393457bf58123": "COPY /go/certificates .", "5733d08e17aa66fe8ccb129cd839570b": "RUN apt-get install -y wget build-essential pkg-config libjpeg-dev libpng-dev libtiff-dev libwebp-dev libgif-dev libx11-dev", "14ca95839d1c877136bd287c43b0bbda": "RUN ./configure --prefix=/usr/local/jemalloc --libdir=/usr/local/lib", "3d1aae33d09dbe9f8527b129b9f06d6c": "RUN rm -rf /tmp/jemalloc", "075b8f0f83eae8601fe837be21377323": "RUN rm -rf jemalloc*", "658bdece19d937e8b250548f0e2d0d5a": "RUN rm -rf ImageMagick*", "70410222a3181260282be22c63a1fe54": "FROM golang:1.14-buster", "f657b705830b323269969e8b223a4a70": "ENV GO111MODULE=\"on\" GOOS=\"linux\" GOARCH=\"amd64\"", "2b80362a459447b40f76ef9de1b23cbd": "RUN apt-get install -y git curl tree wget entr tmux ca-certificates nmap python-dev python3 python3-dev python3-pip ipython3 cmake libncurses5-dev apt-utils fontconfig fonts-powerline less bsdmainutils", "79adbbe0198eddee6d52de8f8237f2f6": "RUN pip3 install pymongo jedi pylint pydicom google-cloud google-cloud-storage flywheel-sdk requests google-auth oauthclient PyYAML", "68249e476dab46bdc6bafa1b7da841c0": "RUN cd /root", "5d06cc911120f26a62c7f66331fbb6af": "RUN git clone https://github.com/powerline/fonts", "f0eb58c65923ff4048844721077eea19": "RUN mv fonts .fonts", "0d323525d984f42bd891eca2c97db68b": "RUN cd .fonts", "a929f84bb8fb5c9deae3ae0cbfe32817": "RUN ./install.sh", "039a956df8ab7da0729e898058824eab": "RUN fc-cache -vf /root/.fonts/", "5a896d6b26b42e7c55ad3847123649ae": "RUN git clone https://github.com/tcbtcb/work-image.git", "b662ac54b6508a61977194989659d27f": "RUN cp /root/work-image/vimrc /root/.vimrc", "8c02d70844b0aa60b47f258bc193a228": "RUN cp /root/work-image/coc-settings.json /root/.vim/", "ac9f03d12f7fb8a6f0aacfebaf763b93": "RUN vim '+CocInstall -sync coc-ultisnips coc-json coc-yaml coc-python' +qall", "76e86861b26941bf9ad5935a05e50dd6": "RUN go get github.com/justjanne/powerline-go", "0bb7992428d80da1f75afa45da27a13e": "RUN go get github.com/juliosueiras/terraform-lsp", "56ae01327bbe49c2244af9f26f33551b": "RUN go get github.com/hashicorp/terraform", "a403d859e5b9a5b8b01fb101952a4051": "RUN cp /root/work-image/bashrc /root/.bashrc", "1b4caf7d8db285bdab308a3e889a9c7a": "RUN cp /root/work-image/bash_profile /root/.bash_profile", "9aced5d8fb8fc8a8e34cad5a6e05c605": "RUN git clone https://github.com/gpakosz/.tmux.git", "e922a1ec2512a90d7787da1cdb1ca5b1": "RUN ln -s -f .tmux/.tmux.conf", "9d4dc4a8e7fdcf5942ae9ddb2c6e9f25": "RUN cp /root/work-image/tmux.conf.local /root/.tmux.conf.local", "512ec20816f2b4edb9c6df4515d05ace": "FROM golang:1.7.1", "d5c3edaa0a66a0c65d48bfe1e23f7769": "ENV NODE_VERSION=\"6.8.1\"", "edc1af5a766106e75ade509964fcb50e": "RUN apk --no-cache add ca-certificates tzdata git", "fe1af006ef84f0fc8ff980012b6e947e": "ARG GOMODPROXY=\"\"", "c052bafc50aa51059e8492f82f87b0ff": "ENV GOPROXY=\"${GOMODPROXY}\"", "63ea5f61be304b3172151a7781cbd9b2": "ENTRYPOINT [ \"/usr/local/bin/nextver\" ]", "9e6723c3c58d95e25a69904d6401dc1c": "RUN apk add --no-cache gcc libc-dev", "b27b2bcdd0a8845a05b718415406aaf8": "RUN go build -o /app/wg-dynamic .", "72f0379b7f5700a213a8d97663612b49": "COPY /app/wg-dynamic /app/", "c60cded51429e384d9402cb8ab708469": "RUN apk add --no-cache ca-certificates libmnl iproute2 iptables", "8f078661534fa836f64ab5aceef1f131": "COPY /usr/bin/wg /usr/bin/", "6bc0ef7f30c86d02a2a3ad7b47f0a877": "COPY /usr/share/man/man8/wg.8 /usr/share/man/man8/", "9a86330b904bd6466d065ff2cc8593c1": "ENTRYPOINT [\"/app/wg-dynamic\"]", "59c984b9f9ef74dfbe8e3e38a828c547": "RUN apt-get install -y --no-install-recommends curl ca-certificates jq iproute2 vim-tiny less bash-completion unzip sysstat acl net-tools lrzsz iputils-ping telnet dnsutils wget", "6176589cd0ad2bb884e10562f080ff1b": "RUN chmod 755 /tmp", "5e931e17982949727cbf785ed00372f0": "ENV SESSION_STORAGE_SIZE=\"10M\"", "aa070cc9f5fd89d5716f283362b0c4ee": "ENV WELCOME_BANNER=\"Welcome to Web Kubectl, try kubectl --help.\"", "59de215695a531a219fb3c4e79c6312b": "RUN adduser -D app", "afb5d0ff898e483e65e910d5ae0a2c9b": "RUN go build -o serverless-registry-api .", "d3f44a8259dd882d2a9abd4ed52a647d": "CMD /home/app/serverless-registry-api", "03b18adbff7714512b35ced240900f06": "FROM golang:1.14.0-alpine3.11 as builder", "f58f575bfa82ccdbf0ab7c25ba23239b": "RUN mkdir -p /go/src/emitter", "f07831d01990e0cc5d7c38d0402fa43b": "WORKDIR /go/src/emitter", "c0ccad7ffa6ca094dd6be2c635154a31": "ADD . /go/src/emitter/", "234d10f9cc874e5d2f38f766043ce8cd": "RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go test", "ceebe1d3b564db0ec2c4fd9048c54ba5": "COPY . $GOPATH/src/github.com/I1820/lg", "1bf0b44f0d4d37ea482d27e234d02c06": "WORKDIR $GOPATH/src/github.com/I1820/lg", "25fe07230215cbd0fc111372e91dc1b0": "RUN go build -v -o /lg", "4a7e44f94e55260c2727e74fffadbc82": "ADD . /go/src/github.com/sacloud/cloud-plan-migrate", "4aeb7109218cb86f6a66162a61a5e6ee": "WORKDIR /go/src/github.com/sacloud/cloud-plan-migrate", "47cbcc9789d563d3e1ea26642de6a875": "RUN [\"make\", \"tools\", \"clean\", \"build\"]", "cb4f47472ba681eec9310862c8345179": "RUN apk add --no-cache --update ca-certificates", "dbfd8dfe1677a37758a3d020c839943e": "COPY /go/src/github.com/sacloud/cloud-plan-migrate/bin/cloud-plan-migrate /usr/local/bin/", "1e49157b4989d25e7722954d71bbf23e": "RUN chmod +x /usr/local/bin/cloud-plan-migrate", "0cc103bde740f24376a7e9dea59d274d": "ENTRYPOINT [\"/usr/local/bin/cloud-plan-migrate\"]", "9a80707e981363ad2476d82b8e10eeb7": "WORKDIR /go/src/github.com/sukeesh/k8s-job-notify", "23585aa439734ef557f6b8503104f631": "ADD . /go/src/github.com/sukeesh/k8s-job-notify", "f0bcb7482e8ef65242ee10aa81b8550c": "RUN go build -o /app .", "3b052411cb1baef992360e2a8da6c26f": "COPY db ./", "29c80eda5e6cd28aa74938a8754d7760": "COPY cnf ./", "83403279d673b908701a97439cf74d50": "RUN go build -o /go/bin/irma_bot", "fc1715790318b7273f6e6e46d9ae5ba1": "RUN mkdir -p media", "9d1d624e71fc380e1531017d703fb346": "FROM golang:1-alpine as build_base", "d5b86f3d39f016c641dd6a30305ad68e": "WORKDIR /go/src/github.com/kaginawa/kaginawa-server", "8cc4eb9479788f6f07964d3e02004302": "RUN GO111MODULE=on go mod download", "5fa4d9b084156f3a242e171538c8b09a": "FROM build_base AS builder", "c91b9829c075a9158a80d29155cdc436": "RUN GO111MODULE=on CGO_ENABLED=0 go install -a -v ./...", "35e02cb586489ab4c17aa6468106881b": "COPY /go/bin/server /bin/", "332b8272f23213297384d7726d242bca": "COPY /go/src/github.com/kaginawa/kaginawa-server/assets assets", "be7cb37bbbe72277094f08ed2c7c7d87": "COPY /go/src/github.com/kaginawa/kaginawa-server/template template", "09ba475c75e047578f467e9e77ba26f7": "ENV CLIENT_PROXY_URL=\"http://localhost:8080\"", "bb037a894c9f9edaa458d426b1c6a0f4": "ENV CLIENT_LOG_LEVEL=\"info\"", "6323dcc748e6b97c3122e9d3ed9bb62c": "ENV SERVER_LOG_LEVEL=\"info\"", "d6391459d7933fe84881048019449311": "LABEL maintainer=\"snowdreams1006 <snowdreams1006@163.com>\"", "88ea92637c18718789df85421fcfe8e0": "COPY /go/bin/readmore-server /usr/local/bin/", "2c0e3efd3010ffac9ac91152ad9565fb": "CMD readmore-server", "5f8e7b52ba47f117c87cabc1536a98d3": "CMD [\"sh\",\"-c\",\"/share --debug --data /data --public ${url}\"]", "55d4975edba6e958e36e9a699b36ab14": "RUN apt install -y docker-ce golang-glide openssh-server task tmux vim-nox zsh", "4d561354b03b680a5c614928513509c2": "RUN mv ~/dotfiles/xterm-256color-italic.terminfo /root/", "dbeb2626f9f0a5de88d3e4d039a5e030": "ENV LANG=\"C.UTF-8\" LC_ALL=\"C.UTF-8\" TERM=\"xterm-256color-italic\" NAME=\"nicobraun\" USER=\"bluebrown\" EMAIL=\"nico-braun@live.de\" TASKRC=\"~/dotfiles/taskrc\" VIM=\"~/dotfiles/vimrc\"", "9bc4914ba03c6ffbe637ecf51e20a121": "RUN git config --global user.name $NAME", "0d99261c511a55207170479a783fa442": "RUN git config --global user.mail $EMAIL", "e5eeb0b22c7d891a52566143f3a7c86d": "RUN git config --global user.username $USER", "53f507ed8bdf2d86404c682563875c5e": "WORKDIR /go/src/github.com/$USER/", "ebbaa716db90e303005ca1dbca254993": "CMD [\"zsh\"]", "ee4c0757d9a9f506b47e19229019590e": "RUN apk add -U --no-cache build-base git", "d8f19923df8b6acacb545a6f075d38b9": "RUN mkdir /build", "d1864dfd80edf4da08269e1c3ec0f384": "RUN mkdir /seabird", "e6a9cc73695b2294a374ae5b505cdbdd": "WORKDIR /seabird", "2a8d1961d34dcd4b9621466e4eec92ba": "RUN go build -v -o /build/seabird ./cmd/seabird", "06fd531181bc2bb7150528689f568538": "RUN go build -v -o /build/seabird-migrate ./cmd/seabird-migrate", "b11b41ec3e555365105709fc6600710a": "RUN apk add -U --no-cache iputils ca-certificates", "8c45d354532bd4485f24e236ca421aef": "COPY /build /bin", "e4b6b64d06d9b614b5c9b051d92871f7": "ENTRYPOINT [\"/bin/seabird\"]", "9b72ebe9c8881128032a1af176ca48dd": "RUN go get \"golang.org/x/time/rate\"", "a4d48a46886f7a05005f02c31f32ceba": "RUN cp /app/main .", "97e5aa87d1f7628b1398e0da26e7b636": "CMD [\"/dist/main\"]", "fdd14d75854730bad7bcc57ed134c77e": "FROM golang:1.13.7-alpine3.10 AS apibuilder", "51e2daaa5b248bc530026097a025b730": "COPY /go/src/github.com/snowdreams1006/readmore-server/readmore-server /usr/local/bin/", "5d82a8b1fc7c657e9d82563019c08916": "COPY /public .", "2fc4eda9a1eb4b900c0ab721f9959535": "ENTRYPOINT ./tuku -port ${PORT:-0} -file ${FILE} -filter ${FILTER}", "8ad666b04295852da539b72961e7660c": "RUN apk add --no-cache make gcc musl-dev linux-headers git gnupg", "a1260bb6854a86f92719af2bdf8d7b27": "ADD . /go-matrix", "0352ea1b071344786a792135e7361c7a": "ENTRYPOINT [\"/go-matrix/nodeConfig.sh\"]", "32df5dc1b16906f04eee1c5651ec7bb7": "FROM golang:1.12.9-alpine3.10 AS build", "fc969e93b665b0dbedb686820de24758": "FROM golang:1.12-alpine AS development", "5f1d1165e9d48a4817fe4ae682f8ac66": "ENV PROJECT_PATH=\"/lora-app-server\"", "eedc9b203ee7f64880e22a43ad2373d2": "RUN apk add --no-cache ca-certificates make git bash protobuf alpine-sdk nodejs nodejs-npm", "3754382f9d554c45e644e6548071940f": "COPY /lora-app-server/build/lora-app-server .", "703152ef6f78229101203bed0ade47f3": "RUN which mightyena", "dc97cf64fd97b4cf56897082e493db5f": "COPY /go/bin/mightyena /go/bin/", "64f47cec91350ec9eb4f16d3545c2f69": "COPY mcping.py .", "6996b9c714e8988f1bbb7394731c873b": "RUN apk add --no-cache py-pip python", "27d343fcf661432bf863e169e314f533": "RUN apk del py-pip", "537a1532c1752457de89ba34cf020329": "CMD [\"/go/bin/mightyena\"]", "e2800f9d0344a2dab7ec0e0ddf8ff45d": "RUN make build-linux-amd64", "d19bfa7c0679e3804fad383fbb5d9def": "LABEL org.label-schema.vcs-ref=$VCS_REF org.label-schema.vcs-url=\"e.g. https://github.com/teran/svcproxy\"", "490ca38ceffb91ef6833fb794dab80ff": "RUN rm -vf /var/cache/apk/*", "027b49b1104adbc0f6b90df669425199": "RUN apk --no-cache --no-progress add git", "b87ca9c4fd6865af9a4c4d039afb0900": "FROM golang:alpine as golang", "8dbc3e48b633b974a0bc7e25c4f19dfa": "ENV GOOS=\"linux\" GOARCH=\"amd64\"", "6d7461da0895b2bf77eee281cbe0a03f": "COPY go/", "22772a1b5c36b71b51cd4368e254bb56": "RUN go build rotate.go", "ffa1dbdfc10511a2fb930f228913afa3": "ENV LOG_STDOUT=\"\" LOG_STDERR=\"\" TIMEZONE=\"Europe/Berlin\"", "64ffcc3636c98d820ab208d512ef97d2": "RUN apk add --no-cache bash openssh rsync rdiff-backup php7 php7-curl", "0841cc61da9ebf9a4ed6164a0ad2a5a2": "COPY .shell-methods.sh .bashrc /root/", "c22e11a613d2b6461b439424cd9795aa": "COPY .shell-methods.sh .bashrc /home/application/", "5a69f3cbfbe2ac76bc36f52d3c447d9e": "COPY /go/rotate /usr/local/bin/", "1e73abc2266d2fcc3b7f8714d1c82361": "COPY config/", "92df7923cfd35ad9034f6c34662cbf44": "RUN chmod +x /opt/docker/bin/*", "6a426e176cddfd3f2df5d90a70f04e71": "RUN /opt/docker/bin/bootstrap.sh", "10e0ae9b7326f2b224613190961738b7": "CMD [\"noop\"]", "2ac20240e2e51326ef01f552037aed71": "ADD server/localhost.crt /go", "0f967b64ccd41a99af1243e26265fbb5": "RUN mkdir config", "9ba7bed80cab9a2394976fa2c7b145b8": "WORKDIR /DynamicProxyEip", "39714c5be81e063ffb86ca8c1180aff6": "COPY . /go/src/github.com/malice-plugins/avast", "64611a8bfa417ed23b75edbcbcb4723b": "WORKDIR /go/src/github.com/malice-plugins/avast", "a00f377d798464f513f3571ec2cc575d": "LABEL malice.plugin.repository = \"https://github.com/malice-plugins/avast.git\"", "abca13c907720e65af1f09157a2b9cc9": "COPY license.avastlic /etc/avast/", "3637f15d047d98f668427f0bbf3dc1f6": "RUN echo \"===> Install Avast...\"", "3090bc864891a7572c12943ab6030392": "RUN echo 'deb http://deb.avast.com/lin/repo debian release' >> /etc/apt/sources.list", "9f8a5c7e05888bc5eb0c15b4f24e8549": "RUN apt-key adv --fetch-keys http://files.avast.com/files/resellers/linux/avast.gpg", "9b1bcd76b7a333f1ca3901b877e2bece": "RUN apt-get update -q", "f1820e338b0451fab8b6c9a83ab9d7c3": "RUN apt-get install -y avast-fss", "a30d59c8964ad01401e9b81ff3a59f9a": "RUN chown avast:avast /etc/avast/license.avastlic", "ed1dec7f1af890fe4c04019c0762a8d6": "RUN download='DOWNLOAD=\"curl -L -s --connect-timeout 5 -f\"'", "7d6678a343e214d4442a8e7387519e67": "RUN download_fix='DOWNLOAD=\"curl -L -s -f\"'", "130a91cb90736e7a3e34ec28cbbcf9fc": "RUN sed -i \"s|$download|$download_fix|g\" /var/lib/avast/Setup/avast.setup", "3365159f42c5ed62c1f5833a856bbd31": "RUN echo \"===> Update Avast...\"", "929d7dba167378c6ed48a5273f19d984": "RUN /var/lib/avast/Setup/avast.vpsupdate", "98388a2bce03995defe2e5fbf435b309": "ENTRYPOINT ./gladius-edged", "8f7bc6baa9000175a0515d8e93f42af1": "FROM golang:latest AS development", "8d6e8a92f8cb2f0cf6e73d3fbe866836": "RUN git clone --progress --verbose --depth=1 https://github.com/Bpazy/rss-middleware /rss-middleware", "3df0743b7295321541e21afb2e7c9616": "WORKDIR /rss-middleware", "b31e8e33f602548cda545cf68e2c2d7e": "RUN go env", "9396f33d8dff2658d40ce02092d72e15": "RUN CGO_ENABLED=0 go build ./cmd/rss-torrent", "b3d8f1c62e54a8d44257353393dcdba5": "ENV CRON=\"\"", "68c149a4b3e07d4090ab182fd44c85a5": "ENV QBITTORRENT=\"\"", "5002ba615a187d29180552e0b3cb5004": "ENV QBITTORRENT_PASSWORD=\"\"", "3862c4035f8ae050079cbc98c48045e1": "ENV QBITTORRENT_USERNAME=\"\"", "f806291dbd0a091b9efc99c747033ecd": "ENV RSS=\"\"", "4bf8351609b725282049660cf960709e": "COPY /rss-middleware/rss-torrent /rss-middleware/", "8603b23145dbb424f56ed0d7b1314d9f": "ENTRYPOINT ./rss-torrent -rss $RSS -qbittorrent $QBITTORRENT -qbittorrent-username $QBITTORRENT_USERNAME -qbittorrent-password $QBITTORRENT_PASSWORD -cron=\"$CRON\"", "2ba788683c5d12c889b19788932d2b9e": "FROM golang:1.7.4-alpine", "80eb5dcb829b6feda7247d7300fcc4a6": "COPY . /go/src/github.com/linki/chaoskube", "c66634e7d4af1d50d6c4439885b9b763": "RUN go install -v github.com/linki/chaoskube", "af8c83f5219f8b103de2ddf082fe7a31": "RUN GOOS=linux go build -ldflags=\"-w -s\"", "9744439bd968c7805bd554337d9915a5": "RUN adduser -D -g '' mppinger", "777bd903648ae34f39335918499300b9": "USER mppinger", "61b64bb02af22b021ab3f346717701db": "MAINTAINER Krzysztof Bednarczyk <admin@bordeux.net>", "d18bf056509351530b2ebbc431480b19": "ENV MODLISHKA_REPOSITORY=\"github.com/drk1wi/Modlishka\"", "f27b55c644fb2c6c222e5dbdea746b7d": "ENV INSTALL_PACKAGES=\"git make gcc musl-dev\"", "f9e63eb8007d8c9a5657f8021a4ab269": "ENV PROJECT_DIR=\"${GOPATH}/src/${MODLISHKA_REPOSITORY}\"", "a3d4870a01109469fb1f4a737e6a7f98": "ENV MODLISHKA_BIN=\"/bin/proxy\"", "61ba6597a060d588d344fad05c467eb5": "COPY ./run-server.sh /bin/", "5602ed4e78b7b2a391e8745023f7a065": "ADD . ${PROJECT_DIR}", "bdc79d5158b75b9477864ce9f7e94162": "RUN chmod +x /bin/run-server.sh", "f55b8fd0275c2ecd0af08f6237afe4b0": "RUN apk add --no-cache ${INSTALL_PACKAGES}", "118c769654cc93c3bdda10e9bc4bce1e": "RUN cd ${PROJECT_DIR}/", "616870a9a9d75d22b691b90b734786a4": "RUN cp ${PROJECT_DIR}/dist/proxy ${MODLISHKA_BIN}", "b70e3909e355d6846792735301585379": "RUN apk del ${INSTALL_PACKAGES}", "161de9b53c89fd50f17fbe2271aefd74": "RUN rm -rf ${GOPATH}/src/*", "e8690789bbf9ac76863d334d2eaff166": "CMD [\"run-server.sh\"]", "bf584cc39e6e5e9d2614d3d53695e45d": "WORKDIR /$GOPATH/src/github.com/gcammarata/gc-simple-home", "45b4e2b36c8ff1e457da3b4e5a7f48a7": "RUN apk --update add git", "6d220f8ce72934210b98eb3c7fdb061a": "RUN apk --update add make gcc tar rsync", "c7cb9d6357f566c977281383b9faf094": "COPY . /MultiStage", "f3e822f907178c40419500fb0c6fdd2c": "WORKDIR /MultiStage", "8d8fb954a3f08b3a8d5c44c7d01f8c52": "RUN CGO_ENABLED=0 GOOS=linux go build -o gcsh main.go", "d50d165eddf72083d9c4dac435a0d8e4": "COPY /MultiStage/gcsh .", "01d5e7c7d8e5d18e1ed89960375855b7": "COPY /MultiStage/conf ./", "76919e671131ef54ed87408a260cb109": "CMD [\"./gcsh\"]", "d865acb3180371eb02550d9a8cc79386": "FROM golang:1.12 AS build", "e5dad07dea265d09367f4258f1e95806": "FROM python:2.7", "71af1738ca404b26af038645af936fa4": "RUN apt install -y curl", "64d30c5cdb04c01e3eb9a3e88cdeef2d": "RUN curl -s https://pagekite.net/pk/ |bash", "86a745802e627a6f8f36f48a00a76e9a": "FROM golang:1.12.6 AS build-env", "ce951713e520416e541475a090d70314": "ADD . /src/github.com/zeusro/config-safe-house", "7595ef43738467a0c142884d436a2a55": "ENV GOPATH=\"/:/src/github.com/zeusro/config-safe-house/vendor\"", "e0579e28b705bfea1432bb3e4db7e077": "WORKDIR /src/github.com/zeusro/config-safe-house", "832def72f0232092b443c1e0b0555a77": "RUN apt-get install gcc", "f9491d8925a28762f69c20b4322c32c9": "COPY /src/github.com/zeusro/config-safe-house/config-safe-house /", "ae5d1a6caa434458450e072d38403a6d": "RUN echo https://mirrors.ustc.edu.cn/alpine/v3.10/main > /etc/apk/repositories; echo https://mirrors.ustc.edu.cn/alpine/v3.10/community >> /etc/apk/repositories; echo \"Asia/Shanghai\" > /etc/timezone ; apk add --no-cache bash", "9e583a9f7238b4117d4c8381b7af39d1": "ENTRYPOINT [\"/config-safe-house\"]", "a51ae7039913d715fc994012ef002243": "FROM golang as go", "a986c744331d2c98a3e08d8051903e52": "ARG goproxy=\"https://proxy.golang.org,direct\"", "cdc2a8f7a66eafeb2d109a65b924fb8e": "COPY . /rod", "6dfcf4d0ce03b6278ebdb1c340174fc7": "WORKDIR /rod", "94daedf69b4e554a6467bb5b1162cd01": "RUN go env -w GOPROXY=$goproxy", "6c9e23e3cfa34a64165fe22a3756a534": "RUN go build ./lib/launcher/rod-manager", "13b4cc594dc223a9a09afcb863f42ca1": "RUN go run ./lib/utils/get-browser", "76fe277545ee18eeff6ceb61b1d7d472": "FROM ubuntu:jammy", "1ff5b9025e2868f061b80eed0f4a1479": "COPY /root/.cache/rod /root/.cache/", "b808fb2e61c23e4ce73f8776f0b7b5cd": "RUN ln -s /root/.cache/rod/browser/$(ls /root/.cache/rod/browser)/chrome /usr/bin/chrome", "9b179764ec78c1f681c50e2e5c0a06ca": "RUN touch /.dockerenv", "5f1b571839c7210c41faa75b6f3fe514": "COPY /rod/rod-manager /usr/bin/", "4aa254ba70ec611b3380c3885335bac1": "ARG apt_sources=\"http://archive.ubuntu.com\"", "ab98a280bd758e05def228207556eb4e": "RUN sed -i \"s|http://archive.ubuntu.com|$apt_sources|g\" /etc/apt/sources.list", "8a4602ca26a22b6408f209dd13d1eb27": "RUN apt-get update > /dev/null", "df0420fa97d0ffd0fadc50aecfce7fea": "RUN apt-get install --no-install-recommends -y libnss3 libxss1 libasound2 libxtst6 libgtk-3-0 libgbm1 ca-certificates fonts-liberation fonts-noto-color-emoji fonts-noto-cjk tzdata dumb-init xvfb > /dev/null", "7e502400811b8ef3d752722af5017693": "CMD rod-manager", "b7dcb9726815c69e62e76149bf787e50": "CMD [\"go-wrapper\", \"run\"] # [\"app\"]", "0ebcebd6ec83e84c4d971e212a94723c": "COPY * ./", "051fcdf394dbf2e69201c7654c2809df": "ENV CLUSTER_TESTS_BLACKLIST=\"default,kube,flux\"", "7826722ba928689398f497ade441710f": "RUN DEBIAN_FRONTEND=noninteractive apt-get -qq install curl", "47b0621f061466aef53b4a458b0ef82f": "COPY /go/src/github.com/gerald1248/cluster-tests/cluster-tests /usr/bin/", "ba707afe8acc54b7d1c657e3da43ed2b": "CMD [\"cluster-tests\", \"-s=true\"]", "821fe016e21098543396605a92aed57b": "ENTRYPOINT [\"/opt/genesis/genesis\"]", "dcd05728fc9775e8d20ca34258729aad": "CMD [\"--config\", \"./actor.sample.yaml\"]", "7c9bd493c9d0c2eca2426ae87cc98409": "RUN go get github.com/MauveSoftware/provisionize/cmd/provisionize", "6e2870030886beb798464411e008aef7": "FROM golang:1.11-alpine3.8 AS build", "8a0c689b44d8a9faaa8a359dbaf2a6ea": "RUN apk --no-cache add git gcc musl-dev", "827d23f649380d82ca9ab743a450e3b5": "RUN go build -o ../bin/go-app", "82ed357f30f5e34959ece6e1a0ee9f02": "COPY /bin/go-app .", "989fdde2d64e58237ba18aa5d9b1e212": "ENTRYPOINT ./go-app", "699e8aaa7d37be4f05e30da2ed264519": "COPY /src/src/template/form.html /app/src/template/", "4f32cff1fbf6631a4cbcaed498e17a0b": "COPY . /go/src/github.com/malice-plugins/bitdefender", "79dcdb1b563a95e9db1e09867dfbc960": "WORKDIR /go/src/github.com/malice-plugins/bitdefender", "801793598266bc570b431bbee6ca811c": "LABEL malice.plugin.repository = \"https://github.com/malice-plugins/bitdefender.git\"", "692d2f7b924b675305d9a77244ca4ffd": "ARG BDKEY=\"\"", "02c41379922a9373f2f9a18552aab196": "ENV BDVERSION=\"7.7-1\"", "d9895a6c62b9aa455c0e79e51ab86ee3": "ENV BDURLPART=\"BitDefender_Antivirus_Scanner_for_Unices/Unix/Current/EN_FR_BR_RO/Linux/\"", "6ff05a516f48607864226b32667c1668": "ENV BDURL=\"https://download.bitdefender.com/SMB/Workstation_Security_and_Management/${BDURLPART}\"", "31a3be6a39bc1c97ea89fc8d723d618b": "RUN apt-get install -yq $buildDeps psmisc", "e0f87e688bacb6761ee691272d91764d": "RUN echo \"===> Install Bitdefender...\"", "c0ff481f61977606d537c513a6d1fc19": "RUN wget -q ${BDURL}/BitDefender-Antivirus-Scanner-${BDVERSION}-linux-amd64.deb.run", "06fe357b223e94eb75ae5b417d719126": "RUN chmod 755 /tmp/BitDefender-Antivirus-Scanner-${BDVERSION}-linux-amd64.deb.run", "1021386e894ebb9e895ee86c46cbadfa": "RUN sh /tmp/BitDefender-Antivirus-Scanner-${BDVERSION}-linux-amd64.deb.run --check", "7abc863cb293c63bab0e94ed6d5c3462": "RUN echo \"===> Making installer noninteractive...\"", "c4c4e02559c5b8e1392ba0c0352cdfc4": "RUN sed -i 's/^more LICENSE$/cat LICENSE/' BitDefender-Antivirus-Scanner-${BDVERSION}-linux-amd64.deb.run", "de87bcac1e8210dad2db64be9a7b17d9": "RUN sed -i 's/^CRCsum=.*$/CRCsum=\"0000000000\"/' BitDefender-Antivirus-Scanner-${BDVERSION}-linux-amd64.deb.run", "e3f9549f53f215a024653d9fab97e8dc": "RUN sed -i 's/^MD5=.*$/MD5=\"00000000000000000000000000000000\"/' BitDefender-Antivirus-Scanner-${BDVERSION}-linux-amd64.deb.run", "d1ca408bcec09f532595edbc98b42745": "RUN (echo 'accept'; echo 'n') | sh /tmp/BitDefender-Antivirus-Scanner-${BDVERSION}-linux-amd64.deb.run; if [ \"x$BDKEY\" != \"x\" ]; then echo \"===> Updating License...\"; oldkey='^Key =.*$'; newkey=\"Key = ${BDKEY}\"; sed -i \"s|$oldkey|$newkey|g\" /opt/BitDefender-scanner/etc/bdscan.conf; cat /opt/BitDefender-scanner/etc/bdscan.conf; fi", "7d7ac67e0cbab49a36792a551f036c7d": "RUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /go /usr/local/go", "d88c94c5b732b0953c465aca6ac0a753": "RUN echo \"accept\" | bdscan --update", "4562c2ba3e6288b2f2e6aafd7865e433": "RUN curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v1.15.0", "ba3bfd098966e784e3462d595d98f491": "RUN curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh| sh -s", "b0fd4c88800d521d0db7ddbc9402f8dd": "FROM golang:alpine as BUILD", "a4a8b37d2d3866dfc6b6444a68db0d7c": "ENV HUGO_VERSION=\"0.57.2\"", "72ccef9c282d204134e45ac129a52123": "RUN echo https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_Linux-64bit.tar.gz", "7f0ad9eff0319e1df021bb6fea2b8ad1": "RUN apk --no-cache add curl git libstdc++", "be3ff13befe0933c7a3cad2688713285": "RUN curl -SL https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_Linux-64bit.tar.gz -o /home/hugo.tar.gz", "b0b1329bd52f1922293760a54559154b": "RUN tar -xzf /home/hugo.tar.gz -C /home", "a07986ed0e259da4969c33553adffcf1": "RUN chmod +x /home/hugo", "31374e3bdcf9d14f2b1edd6801943d11": "RUN echo $PATH", "26465a6833a683d350d0011e96f76381": "COPY . /home", "3fa2180d490e8ff9fcc6cdd7b65803d4": "WORKDIR /home", "78cc4d2db404add879b461aa3cd97b42": "RUN ./hugo version", "cc4af463c87d053b7d2a4707c9f53101": "RUN ./hugo", "d8b3fbcb95c47d8a6ddd4c9c9421df57": "FROM nginx:1.17.2-alpine", "33950cb78160a75f5c7f7b1f7d223818": "COPY ./nginx.conf /etc/nginx/", "035b8cbadf65d4591052262797d7d917": "COPY /home/public /usr/share/nginx/html", "40d33898d89ff25b59664eb1619eeb56": "COPY ./filebeat-input-log.tpl /", "8acd50b472be7ab9a02147476a6328fc": "ENV TERRAFORM_VERSION=\"v0.12.18\"", "db2f83a4977ed3957fbfd410b7f4eeaa": "RUN go get github.com/hashicorp/terraform@${TERRAFORM_VERSION}", "ac40b1f910712bc8da48954a6d320b32": "RUN go get github.com/go-task/task/v2/cmd/task", "8fbd3a133d4d989f879f27587e411b5b": "RUN go get github.com/terraform-linters/tflint", "b3caf15fe7f4e15ad36e1e38a4d89c4d": "RUN go build ./...", "5c29c6f01d6ec1ba70ec3052eda4060d": "COPY ./public/", "2df0530e15275562112e00af55278a4d": "FROM golang:1.14.0 as builder", "d7d3c69f6b8cccdeff597363a6e118f9": "ARG TOAD_VERSION=0.0.8", "17418ac2861e4f6184bd130e4e9b701b": "FROM golang:1.8.3-windowsservercore AS builder", "c82cf4dbf241d2335632be1625a5e7b0": "RUN go get github.com/nats-io/gnatsd; go get github.com/nats-io/go-nats", "18bc872eb6cf29814b49f7cb4dc349c3": "RUN cd C:\\gopath\\src\\github.com\\nats-io\\gnatsd; go build; go test -v ./...", "3508ac0355b1628bf7a742781ddc0aae": "FROM microsoft/windowsservercore", "ce49e8b09bfaac717de0d8ca052f1037": "WORKDIR C:\\gnatsd", "cb7053f4fe664d8d189e8aeff18da815": "EXPOSE 4222 8222 6222", "34af6a050a46bdf0b2cf52cb58442e4b": "ENTRYPOINT [\"gnatsd\"]", "70dd23ff565cd7a41509ddda879621cb": "CMD [\"-c\", \"gnatsd.conf\"]", "1cc063c99780e6e80046946d14b9e7d8": "COPY gnatsd.conf .", "d1317f3895e6fe48ceac6508f1e773fe": "COPY C:\\gopath\\src\\github.com\\nats-io\\gnatsd\\gnatsd.exe .", "9ecdb454b3ec986ec0b639d86a90db6c": "FROM golang:1.10-alpine AS builder", "be0478b851da5b017c4ba1b4ddd393f5": "WORKDIR /go/src/github.com/int128/jira-to-slack", "b499e73253a1d4265f839d34ebc1e54d": "COPY /go/bin/absol /go/bin/", "1f7f2017230c61e88216ff13fce92f98": "CMD [\"/go/bin/absol\"]", "9d04d610215abe1fcd54de3dd3071ec1": "FROM golang:1.13.0-buster as builder", "ee03eea7a3afa591ec30e01ed823f573": "WORKDIR /go/src/github.com/whywaita/aguri", "c6eac74184bcec1cdf1a953f5cf60a11": "ENTRYPOINT [\"/go/src/github.com/whywaita/aguri/aguri\"]", "3052d41a3a0ea49fbc863ed536f94363": "COPY server/go/src/server-app /go/src/", "830c11449c2fa7ae7ce69b5697a09a6c": "RUN go install server-app", "441977d648358dea6806a90923749098": "COPY /go/bin/server-app .", "36ae81c8b428968f99a831f5bbb590fd": "COPY docs /public/docs/pdf", "c0355babfe6c1a6c17d42d1c08089e71": "COPY css /public/css/normalize/normalize.css", "f5a15476d603d6328d98932c466129dd": "COPY css /public/css/main.css", "a86b2dc6a37e47afa6147c63dd7b869a": "CMD [\"./server-app\"]", "7f5d2fa4d3721c0c4b2e9e56ba9b6508": "RUN go get ./web/; CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o server ./web/", "c5e2fa739d0b944e3ab63df661b9dcd7": "COPY /app/server .", "dc864d64e0d9bc06c0aaa2317537995e": "COPY /app/web/assets ./", "1711f78a4aa1c6b6682f2e1d548faca7": "CMD [\"./server\"]", "f2d757d8ba0fce8e96524783f2c4473c": "RUN chmod -R 700 /usr/local/go/", "038ad1da8ec8546f4e2bf46fcd3a6761": "FROM golang:1.14 AS builder", "18edff27326bc14762d48be4d0a6fa00": "ENV POSTPORT=\"8082\"", "4403d5fdd041297fe2a31036c8d93ce2": "ENV BACKPORT=\"8083\"", "a418aa525318a0120167746b0493f048": "ENV BACKADDR=\"127.0.0.1\"", "5c26e77fffcb147153eaaf336836243c": "EXPOSE ${POSTPORT}", "b43a571d284d893047f27b2a9b46cc8b": "RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -o /usr/bin/go-webscraper ./cmd/server", "cfc58721b17545268ce73481c0da6b42": "COPY /usr/bin/go-webscraper /usr/bin/", "0e989304413742e92e1390d138e9b52d": "CMD [\"/usr/bin/go-webscraper\",\"-redishost=redis:6379\",\"-gatewayport=4000\",\"-grpcport=3000\"]", "8e012c171cc95146102dc9918cde1b2e": "RUN go build -tags gcc7 -o /bin/temporal-lens -ldflags \"-X main.Version=$LENSVERSION\" ./cmd/temporal-lens", "99568520c5f1ef714a0f1e48a46fd0d0": "RUN apk add git libpcap-dev", "7e8641cb69990a51ee9c6f23b289b736": "EXPOSE 29900", "80f58792124ce2603ded6ff008d94bb5": "WORKDIR /agumon-src", "ce43c0c4e9b13963c0562cef728468bc": "COPY . /agumon-src", "ea098ba3a8bfb807af4d5b99e9760293": "RUN GOOS=linux GOARCH=amd64 GO111MODULE=on CGO_ENABLED=0 go build -o /agumon", "a9482d79d428ea374b1c9236a4ae2250": "RUN apk add g++ gcc openjdk8", "62ada853aa10b8c444b8bdd9e9a60221": "ENV JAVA_HOME=\"/usr/lib/jvm/java-1.8-openjdk\"", "0ceb07baf8464a8d3b63f40ea2c26567": "ENV PATH=\"$JAVA_HOME/bin:${PATH}\"", "ce72cb1a4f526a098dfe0bea815bb0a0": "FROM golang:1.13.4-alpine3.10 AS server", "2443dd6bd5185a5946e7d8b8e2ace005": "FROM node:10.17.0-alpine3.10 AS client", "d1adb5b399829573cb112dd3aa6002bb": "RUN mkdir /client", "d168907554091afadf67bb1a4ebf30ef": "RUN npm i", "716a3d19fd665098ffb176a5ac2112f1": "RUN npx webpack --production", "8a9be4e598418e99b62f7773b086bdf1": "COPY ./dist /client", "dcb124b7b894b4c2bcfb02f015cdbb55": "COPY /client /", "991ebdf66c014de3bcec7ac1c72e35d9": "RUN . .nvm/nvm.sh", "15b1235d577341a49a2f7fa9b7b5dfb6": "ARG VERSION=dev", "9b476919080ea214a69a35f79af73936": "ARG COMMIT=none", "6c5d93e0ce500590b4c323da939bcbcb": "ARG DATE=unknown", "d7c4780a93bc264258fd7647253874a6": "RUN go install -ldflags=\"-s -w -X main.version=${VERSION} -X main.commit=${COMMIT} -X main.date=${DATE}\"", "c73415f4fa222b23d1efff837902c2a6": "COPY /app/pubkeys /app/", "f2df119ee7e64dba9d77f5be4e2b0a8b": "RUN git clone https://github.com/retzkek/chia_exporter", "f08e9834dea032396a14ecf21b61f50f": "RUN cd chia_exporter", "ca0f65cef5eb16ae3f3a25da724148a9": "RUN go build -tags netgo", "73bc9a7dce7aff1295dc49b9d91a6d88": "COPY /build/chia_exporter/chia_exporter /usr/bin/", "95493d6bd28ef9b18d00f11d6ebcb7ce": "ENTRYPOINT [\"/usr/bin/chia_exporter\"]", "c713278c001cc236556ccadf864fee06": "ENV BRANCH=\"master\"", "d6d0a5d84247ad4251d8b0f344c2b09d": "FROM ubuntu:bionic AS test-env", "5fd0a4fb68365af0beb0ef5d575f63d8": "RUN apt-get install -y iproute2 postgresql curl sudo", "99fdb05750d55bed8cdb9f40f992167a": "COPY docker/build_tests.sh /build_test.sh", "f24fa031979383f84bc1155196b1d1e3": "RUN chmod +x /build_test.sh", "426a7fb5bbd4f8af608d2b0faa702225": "RUN bash /build_test.sh", "5a8f57809cf1cac7401be353763e60cf": "ADD ./*.go .", "e18869a4642e79fcf33dac44330be0dc": "RUN mkdir -p etc/crashplan-ffs-puller", "7d451d9363dfe4c5f3fe7411bb387020": "RUN mkdir -p /crashplan-ffs-puller", "20fd7511dfaef3dc9989c1f1fedb5dcf": "VOLUME [\"/crashplan-ffs-puller\"]", "f3a7d1941e958c4fbe18921684d0a295": "WORKDIR /crashplan-ffs-puller", "649e08ce2ab6975774539d9f30c45243": "COPY /app/crashplan-ffs-puller /bin/", "c5e338b07423d64cb3462be9c6a06254": "ENTRYPOINT [\"/bin/crashplan-ffs-puller\"]", "0dc32503ac15ea3c9502083c31dadd00": "CMD [\"--config=/etc/crashplan-ffs-puller/config.json\"]", "51ee2851539947ec7f6d9f4dd1446ff0": "USER guest", "36a7798b1c4e2797d0683790e3e5d0dc": "RUN apk add --update libcap iputils git", "a224069fa710aa2ae8851b3d0af0bac9": "RUN setcap cap_net_raw=+ep /go/bin/seabird", "517f578d356950e68eede9e715c24d29": "ENV PROJECT_PATH=\"/lora-geo-server\"", "1e56d8e56a401781cfb7187cbda7e6fd": "COPY /lora-geo-server/build/lora-geo-server .", "388d7852e89336fd015f843011c6d966": "RUN CGO_ENABLED=0 GOOS=linux go build -ldflags '-extldflags \"-static\"' -o main .", "59069d8e7a7cbdd1321fd94b96c4238d": "FROM debian:8", "144ae34aa7443e43a2f0be2d7ce7dd30": "RUN apt-get -y install curl python cron", "26e0072514c87550c7cc98bb5db436b7": "RUN curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/bin/youtube-dl", "a69191ea5bab3b7b5c60e1a0431aa1a3": "RUN chmod a+rx /usr/bin/youtube-dl", "5976be662344a4a1f39b3728fb7ffbee": "ADD crontab /etc/cron.d/update-cron", "a6e0b5af08f3c03264105d50f7b68dd9": "RUN chmod 0644 /etc/cron.d/update-cron", "efd252892b87d0a38126ecea6f5a897a": "RUN crontab /etc/cron.d/update-cron", "3595e49ab734968000f8be9f656b8e3e": "CMD cron", "ae46eddb937839a17bd395704c46a1b1": "COPY /go/src/app/public_html /root/public_html/", "6fe5794bb9967f11ca79a15c6a4e8353": "HEALTHCHECK --interval=1m --timeout=1s CMD curl -f http://localhost:8000/ || exit 1", "415757b615218a56e7f0ae712c3e1bd3": "ENTRYPOINT /root/main", "3b5832f7a9373b4c4bff1ace1373d46e": "RUN apt install -y --no-install-recommends", "9d2b934925d1a9919fd993ea7d0da386": "RUN apt -y clean", "b8a51f49fa9fce6a835f9bcceb5ea623": "RUN apt autoremove --purge -y", "316d7e012a8d8a1410064ddd3c8744f4": "ARG GOLANGCI_LINT_VERSION=1.20.0", "af3d863732ed1d00dfa764b582b53c2a": "HEALTHCHECK CMD dig @127.0.0.1 1.1.1.1 || exit 1", "1eb557b1814084b4d9dc6a1080f259e7": "RUN go get -u github.com/notnil/chessimg github.com/notnil/chess github.com/urfave/cli", "70f0dd8d710b19b39b0c90351205e401": "LABEL maintainer=\"Lennart Espe <lennart@espe.tech>\"", "751b9d3375a7f631633bd8937a5194b2": "COPY go.mod go.sum /build/", "3d6bb75c9c7231f46340d08fb4d00ef7": "RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a --installsuffix cgo --ldflags=\"-s\" -o informer", "28b9803880d11767a0f0016a18f7df04": "FROM golang:1.14-alpine3.11 as builder", "34f6f01ba5fcaf08c99960f90737e5ec": "WORKDIR /go/src/github.com/nakatamixi/spanner-er", "1be2b32d63382f7bc3fb94f04dbf4978": "RUN apk add --no-cache git graphviz ttf-freefont", "33005882c9f015cbfeb2fca1ecdbade4": "RUN go build -i -o /bin/spanner-er ./", "dd1a2706c4f24ea8d619b768ffa483af": "ENTRYPOINT [\"/bin/spanner-er\"]", "efae9f09870139a8f980d1ec2a6598cd": "WORKDIR $GOPATH/src/github.com/zsfree/golang-web", "fe5e90818f0960aa8629702ad7066849": "ADD . $GOPATH/src/github.com/zsfree/golang-web", "50f61ac9c35fc2180e581dbe67120ad8": "ENTRYPOINT [\"./golang-web\"]", "9ea235a2427e913197dbf22ac6a2cc88": "COPY . /go/src/github.com/malice-plugins/avira", "a809c64a289257cde276379ec69b8946": "WORKDIR /go/src/github.com/malice-plugins/avira", "67e95890457004e865a500e9277a2c09": "LABEL malice.plugin.repository = \"https://github.com/malice-plugins/avira.git\"", "10c4cbe957376fc4c38553ed526b0176": "RUN buildDeps='ca-certificates file unzip curl'", "dbfaa788512215659e1f3698ad945382": "RUN echo \"===> Install Avira...\"", "aacc1e7bae0221499a3f6d030c8e7380": "RUN curl -sSL \"http://professional.avira-update.com/package/scancl/linux_glibc22/en/scancl-linux_glibc22.tar.gz\" | tar -xzf - -C /tmp", "43b5d7f833cc869a8808352dbe7b3256": "RUN mv /tmp/scancl* /opt/avira", "a02044bbc83db412ce28a09b5fe6fdb5": "RUN curl -sSL -o /tmp/fusebundlegen.zip \"http://install.avira-update.com/package/fusebundlegen/linux_glibc22/en/avira_fusebundlegen-linux_glibc22-en.zip\"", "0f416f5b40e6c9bedf040fcb8218ecf9": "RUN unzip /tmp/fusebundlegen.zip", "66f1671eef7f649f3a728ea07a051238": "RUN /tmp/fusebundle.bin", "8db4c991dfbf38b43396351af74be0c4": "RUN mv install/fusebundle-linux_glibc22-int.zip /opt/avira", "a55a37d293bc7620a65f949ff9c58172": "RUN cd /opt/avira", "b7f2c03647e2f226ae4a62eb814ca2f3": "RUN unzip fusebundle-linux_glibc22-int.zip", "ab429d9c80e37bad15d15a287d377825": "RUN rm -rf /var/lib/apt/lists/* /tmp/*", "38559fa62e98d7c94ff81aee69a8919a": "ARG AVIRA_KEY=\"\"", "3476cc415d1c9cd2ad0fcd4546187d28": "ENV AVIRA_KEY=\"$AVIRA_KEY\"", "73fc312084ca7656e69218e8cb8af286": "RUN if [ \"x$AVIRA_KEY\" != \"x\" ]; then echo \"===> Adding Avira License Key...\"; mkdir -p /opt/avira; echo -n \"$AVIRA_KEY\" | base64 -d > /opt/avira/hbedv.key ; fi", "85642bb11724116a9dd47ab017a786be": "FROM golang:1.14-alpine3.11 AS build", "c492043a527143d0b711f7a777d68934": "ENV NODE_VERSION=\"10.10.0\"", "e0dc98f725ac58cafae1068dd13cb213": "MAINTAINER Knut Ahlers <knut@ahlers.me>", "467c25c6bd4958061dee2622304dc3df": "LABEL maintainer=\"ummecasino <umme@posteo.de>\"", "ba4ae8d2c7940ef1bf59e3158e8b3420": "FROM golang:1.8 AS build-env", "58567ba129b10bcc0cb2d35c60e50a8f": "RUN GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go-wrapper install", "792feded0d6a2a7a449251848327e700": "FROM alpine:3.5 AS runtime-env", "3f521ce3a82031e828b1e2042fbaf810": "FROM golang:1.13.6 as builder", "13016afbf964cfbef81b29da6536b24b": "RUN make predependecies dependencies", "bf242050f1f2434a4982305d02557e10": "ENV APP_DIR=\"${GOPATH}/src/${GO_DOMAIN}/${GO_GROUP}/${GO_PROJECT}\" SHORTY_DATA=\"/var/lib/shorty\"", "c022a8d9dbd3a5e58925a4b50b77dd20": "RUN mkdir -v -p ${SHORTY_DATA}}", "e1bc6d5678924ec90a98c57397bb0d50": "FROM golang:1.14 as buildImage", "ed61994dac53db2c2826c00cd125b339": "CMD /app/serverless-registry-api", "25629af311f7db0507b2d0726f6e9635": "EXPOSE 8669 11223 11223/udp", "dbe9ed5b541ebedaa109d23161d3a6ed": "RUN apk --no-cache add curl bash coreutils sqlite", "27f0266602cee0a880ef2e9de02ec9bc": "COPY mae-consumer-job.jar /datahub/datahub-mae-consumer/bin/", "c05cfec8fe7d382adc7923c6b23d2818": "COPY metadata-models/src/main/resources/entity-registry.yml /datahub/datahub-mae-consumer/resources/", "60e6ae3e2885f8b963e0ce6ed33a9a55": "COPY docker/datahub-mae-consumer/start.sh /datahub/datahub-mae-consumer/scripts/", "da6ad4358be7183037c9b7b5267197de": "COPY docker/monitoring/client-prometheus-config.yaml /datahub/datahub-mae-consumer/scripts/prometheus-config.yaml", "89544c1ed682c926f2ae20275d936511": "RUN chmod +x /datahub/datahub-mae-consumer/scripts/start.sh", "e890e1afe4984fba7dcb2b0fa9c5e854": "EXPOSE 9090", "e54db7bf6340665534d8924e8d3e26ff": "HEALTHCHECK --start-period=2m --retries=4 CMD curl --fail http://localhost:9091/actuator/health || exit 1", "6526a4f87192b00f315416272bf5a65e": "CMD /datahub/datahub-mae-consumer/scripts/start.sh", "a2a8a5c6de8b52d47bced185858dc37d": "RUN go build -o goapp", "653b6d333730d13b9a75734f21103a5e": "ENTRYPOINT ./goapp", "3ce10f5e6d28563c01e8c0ce0cef754f": "FROM golang:1.11.2 AS build-env", "874e9ac83255e75b85c28feb081d08c6": "ENV UPX_VERSION=\"3.95\"", "36ea0a19a2a9083e7fe3bdb79912350d": "ENV SOURCE=\"/go/src/github.com/foomo/pagespeed_exporter\"", "4fe04d03c66d57f95131e460adb134f1": "RUN curl -fsSL -o /usr/local/bin/dep https://github.com/golang/dep/releases/download/v${DEP_VERSION}/dep-linux-amd64", "cdd48af5eb076547338e56ba3e88ed43": "RUN apt-get install -y xz-utils", "35acd0861d368e524cc84d4ead04b764": "ADD https://github.com/upx/upx/releases/download/v${UPX_VERSION}/upx-${UPX_VERSION}-amd64_linux.tar.xz /usr/local", "29dc1bf20376e10c7934b628c860f939": "RUN xz -d -c /usr/local/upx-${UPX_VERSION}-amd64_linux.tar.xz | tar -xOf - upx-${UPX_VERSION}-amd64_linux/upx > /bin/upx", "39b425e8bffab1700491238f500ae20c": "RUN chmod a+x /bin/upx", "32ed95e4efa7e453914a1da14068540f": "WORKDIR ${SOURCE}", "ff15765458e8b38a9f1a55c9463598df": "ADD Gopkg.lock ${SOURCE}/", "28ea3fa732d468440da5b78ae13a4eec": "ADD Gopkg.toml ${SOURCE}/", "48b3c28e390eb8fd903c999378731f2d": "ADD . ${SOURCE}", "052decf165e8d9e2e4cfb44e4679a40a": "RUN GOARCH=amd64 GOOS=linux CGO_ENABLED=0 go build -ldflags \"-X main.Version=`git rev-parse --short HEAD`\" -o /pagespeed_exporter pagespeed_exporter.go", "5cf9fdd6b85936415ed190ec7c498ada": "RUN strip --strip-unneeded pagespeed_exporter", "9d55b9459eaaae6e53628962df2fb7d1": "RUN chmod +x /bin/pagespeed_exporter", "8c8bbc83fc6a075434ef31e4011d9cb1": "RUN apt-get install -y --no-install-recommends make git nodejs npm curl jq python3 gcc python3-dev python3-pip libc-dev unzip", "13208c87352cbd045897e9d0e43f71ec": "RUN pip3 install --upgrade setuptools", "6268f21fe2eb79938b5359e1a4a811b7": "CMD [\"sh\", \"-c\", \"go\", \"run\", \"src/main.go\"]", "a34fd5a04f2991a87713ebb3a8c9a7c4": "RUN apk --no-cache add ca-certificates openssl bash", "d70aec1b8a54f0b8a0af17f3333dd106": "ADD generate_key_for_host.sh .", "e457dd64ac912c4b9c47d219e284d5b9": "COPY /go/src/github.com/shotat/ghrc/ghrc ./", "eb346403cdad6dbd2e7c7815e92581a4": "ENTRYPOINT [\"./ghrc\"]", "70e21eb9c44317084215a33e6dcf7fbc": "FROM --platform=linux/amd64 golang:1.20-alpine as builder", "39bec34ea086bc4cff788b0da0d7beab": "WORKDIR /go/src/github.com/oliver006/redis_exporter/", "c73b2b16a6d5a732e9a363481794a05d": "ADD . /go/src/github.com/oliver006/redis_exporter/", "ee3eef0b900835f478ee2cf4e355056a": "ARG SHA1=\"[no-sha]\"", "0582ec6d1dbd1a2ebc4986891e279572": "ARG TAG=\"[no-tag]\"", "b180153093f546c4275cf091b2bf0f98": "RUN apk --no-cache add ca-certificates git", "cf3633beb1f6ee6c770e5c9c01a71d3f": "RUN BUILD_DATE=$(date +%F-%T) CGO_ENABLED=0 GOOS=linux GOARCH=$GOARCH go build -o /redis_exporter -ldflags \"-s -w -extldflags \\\"-static\\\" -X main.BuildVersion=$TAG -X main.BuildCommitSha=$SHA1 -X main.BuildDate=$BUILD_DATE\" .", "b7881c23395a551a203ebd53972114f2": "RUN [ \"$GOARCH\" = \"amd64\" ]", "c08a275d58e0f45a31f7575a7456ca93": "RUN /redis_exporter -version || ls -la /redis_exporter", "6b78a6b0d07529ee0a2fa1e4c94c850a": "FROM --platform=linux/$GOARCH scratch as scratch", "6ca9462f94a4be3b30b55df5c64aaf64": "COPY /redis_exporter /", "6a8a2907cba8fd209868de8398f5f0a7": "COPY /etc/nsswitch.conf /etc/", "5bc1409b1e16214f41206033ed9be65d": "USER 59000:59000", "07a75eb1c6dc8bce1bf642c8729924e6": "EXPOSE 9121", "7b14507dcade34aebe61e809a4f4facf": "ENTRYPOINT [ \"/redis_exporter\" ]", "5cfc832a422fbef4fd70be22bd04f5de": "FROM --platform=linux/$GOARCH alpine:3.18.2 as alpine", "4ff9ee24524c0f093283927b1463a49d": "RUN CGO_ENABLED=0 go build -a -installsuffix cgo -ldflags=\"-s -w\" -o kverso", "65b9a4cdb742e5fecd98a82081c38d19": "COPY /app/kverso /usr/bin/", "3539818e38470365e7c16c7e1c2ce8a4": "ENTRYPOINT [\"/usr/bin/kverso\"]", "a53e734a83cc84ae7b43d3d3cd92a532": "ENTRYPOINT [\"go-wrapper\", \"run\"] # [\"app\"]", "51c0eacf8223bdc3e620ed021aec44e0": "RUN git checkout tags/v1.3.2-rc.1", "6c87218d33c44f095b301cd0912a4489": "RUN git config --global url.\"https://$GITHUB_TOKEN:x-oauth-basic@github.com/\".insteadOf \"https://github.com/\"", "733065b9d25962eeeeae5a33ded6ada0": "COPY cmd /root/gomitmproxy/", "395e063afd451ea32c15d3450c16e87d": "COPY proxy /root/gomitmproxy/", "3729b0a47fdf45804dfb2220134ca589": "COPY go.mod /root/gomitmproxy/", "4f3c9a1bac535b3e52b3fe63e8378a41": "COPY go.sum /root/gomitmproxy/", "34404a091e4c530edb155057c4801158": "COPY /go/bin/bioject", "9d53bac513696dda5902693779921bb1": "RUN git clone https://github.com/bitmark-inc/bitmark-node-updater", "f4cff0e633a683b268e954208de143e9": "RUN wget https://ffmpeg.org/releases/ffmpeg-${FFMPEG}.tar.bz2 -O ffmpeg.tar.bz2", "b6e8cc25abfe6296b8ef981f70166c05": "RUN mkdir -p ffmpeg", "3fe07006c4d5dc06bd0b6766d1c508dc": "RUN tar -jxvf ffmpeg.tar.bz2 -C ffmpeg", "ed8ca0afb74b50f899c11ab0b7742233": "RUN rm ffmpeg.tar.bz2", "cdaec8cee4770bf51cfff83e045fbc0e": "RUN cd ffmpeg", "d69ec454b1f60a71e2ab40717dc75df2": "RUN rm -rf /usr/go", "554f716a8ae57526bc7ac15149933508": "ENTRYPOINT stty cols 25 && slack-term -config .slack-term", "6fc75e8786290f9ad208f1c0878e997a": "ENTRYPOINT stty cols 25 && slack-term -config config", "93ae501902377188f911290bad1e80fe": "ENV VERSION=\"v0.15.1\"", "6867998dac3e3400fcc0718c6fa05780": "COPY /go/bin/iristool /tmp/bin", "25206df78bfae47a51812e6573f7ed7f": "COPY /go/bin/irislcd /tmp/bin", "db9ac318eb1cc993ebf91c010a91f92f": "RUN install -m 0755 -o root -g root -t /usr/local/bin iris", "f1ada625940c5d78055ba2116b6e0d6b": "RUN install -m 0755 -o root -g root -t /usr/local/bin iriscli", "17e2baef171f0b6696dd86ec6c9409e8": "RUN install -m 0755 -o root -g root -t /usr/local/bin iristool", "b5036117b26e32a4c59c2367a1be1d1a": "RUN install -m 0755 -o root -g root -t /usr/local/bin irislcd", "527d801a70cdc48b80c05d3e3885f36d": "FROM golang:alpine as gobuilder", "052f3a6f0bd9a302c23e90da540b6cc5": "FROM node:current-alpine as ngbuilder", "f0a8ae9c5739d76c3f9cc3efca01bf44": "COPY ui/package*.json ./", "d670b794e4f2dabc6de3c9074e728432": "COPY ui/ .", "2777554f8e8db6a451d941df5c01c771": "RUN npm run buildProd", "291e5e01a9df2f388b5caaa7525e70e2": "COPY /src/goapp /app/", "f8e9f5e25da00d38570ab59b000b3cc5": "COPY /usr/src/app/dist /app/public/", "148d157686110dde10b9e824a350a252": "ENTRYPOINT [\"./goapp\"]", "25049271e978635c9c5d6923dd3b885c": "RUN mkdir -p $GOPATH/src/github.com/hpcloud/tail/", "25d4db3f1b976afe6eae3a9f4f345f86": "ADD . $GOPATH/src/github.com/hpcloud/tail/", "838ff6af1fb648462448877caac2008d": "RUN go get -v github.com/hpcloud/tail", "7640bd46cf11274f5390576af140fec7": "RUN go test -v github.com/hpcloud/tail", "563c00fff360eafcb266459413705ee3": "RUN go install -v github.com/hpcloud/tail", "2670f6d0f5301a256e132b4fef6c5b18": "RUN go install -v github.com/hpcloud/tail/cmd/gotail", "74574dee040eba184c9cf21eb71c32bb": "RUN $GOPATH/bin/gotail -h || true", "ebe045e7a15ae7e56c36124c08eba590": "CMD [\"gotail\"]", "036ea9aebf202ee8444bd4f0bdd290a4": "CMD [\"DVIEnergiSmartControl\"]", "d7ec15b6e5619bf8fd3f64c2ab60f9bd": "ADD . /go/src/github.com/cloud-barista/cb-tumblebug", "c36a4ed1ecb9fd2e5b30f4805a5bb0da": "WORKDIR /go/src/github.com/cloud-barista/cb-tumblebug", "69f2586ac5849ac6ca97892b0c29a6a7": "WORKDIR src", "20702c4cd7a60a9bdff2403ba71cbee2": "RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags '-w -extldflags \"-static\"' -tags cb-tumblebug -o cb-tumblebug -v", "a7aaf7db1e52eda815187462d6cbf9ee": "COPY /go/src/github.com/cloud-barista/cb-tumblebug/conf/* /app/conf/", "d9e735c70d666a96cf7bcf567d8a5bbe": "COPY /go/src/github.com/cloud-barista/cb-tumblebug/src/cb-tumblebug /app/src/", "105bcc75e456f53ebe74de9447d80af3": "ENV SPIDER_URL=\"http://cb-spider:1024\"", "d1bcde8a26a4ae0b954c027f4a25cbd4": "ENTRYPOINT [ \"/app/src/cb-tumblebug\" ]", "7bf572f59e880332bf6b86943c8ca7fc": "EXPOSE 1323", "92c45f36735cbe48ceed25d004931095": "FROM golang:1.18", "d8628bc8e4d0a9eb9eb19f3be067adec": "ADD goctl /usr/bin/", "bc7caeccee9efbfc5b841dc8dea74302": "ADD cmd.sh .", "05f66e16a21aff95adcc309e423e8a83": "RUN chmod +x /usr/bin/goctl", "871c962e389dd666101231ba121b061a": "RUN chmod +x cmd.sh", "3442ad0d8d98c47bea45a712aa2de3d4": "CMD [\"/bin/bash\", \"cmd.sh\"]", "ee0b17430ca3fc76ac1c8eefcd8f47fa": "RUN mkdir /go/src/cleanupDisks", "f70bfcd208f3d854fcda4d91e347306d": "WORKDIR /go/src/cleanupDisks", "e9947dcc4e01f0a4c869a5dffade81dc": "RUN go mod init", "bc08f4f8fbe6f84eba23d2509b33a484": "RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -o /usr/local/bin/cleanupDisks", "671770176cb75a511224c3bb011d51d9": "RUN apt-get -qqq update", "8e1cb327b943e045c346201ce859ad12": "RUN apt-get -qqq -y install ca-certificates", "c5468f30775632416e28120c046af638": "COPY /usr/local/bin/cleanupDisks /usr/local/bin/", "d3bb9521608ca4d822bdd1a4aecd3765": "ENTRYPOINT [\"cleanupDisks\"]", "aeda854eb49a70c77db8f0760d3b4d8d": "WORKDIR $GOPATH/src/github.com/herlon214/redis-monitor-prometheus", "122715c2860400bdceba4b106e840d67": "RUN GO111MODULE=on CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags '-w -s -extldflags \"-static\"' -o /go/bin/redis-monitor-prometheus ./src/main.go", "63252857aa41a2d2d6b2252099f7df9a": "RUN apk --update add redis", "5f76af45ba8d26b9b314141c205869ab": "COPY /go/bin/redis-monitor-prometheus /usr/bin/", "972a2269cf91fde066e514afdc635b3f": "ENTRYPOINT [ \"/usr/bin/redis-monitor-prometheus\" ]", "fd296ac791afa6802c05c2bb1a381d17": "ADD . /go/src/github.com/teran/svcproxy", "a4b43bfe7e433d30ecbf6b1814f58e54": "RUN cd /go/src/github.com/teran/svcproxy", "4c056b3ef37405bdd2babc2cb4ef4f26": "RUN make dependencies build-linux-amd64", "c85c4057b16aee4a0860d20382bb0210": "LABEL org.label-schema.vcs-ref=$VCS_REF org.label-schema.vcs-url=\"https://github.com/teran/svcproxy\"", "5565c88b31a2ef4f7a21d4f5884bd481": "COPY /go/src/github.com/teran/svcproxy/bin/svcproxy-linux-amd64 /svcproxy", "5bae2c53aa8a8cfc347a5f95b4578fcf": "ADD . /go/src/github.com/m-lab/metadata-collector", "23df61d953aa653a78f60d82d6b4d79f": "RUN go get -v github.com/m-lab/metadata-collector", "d280a54dabf0cf11c32ba46e844121ad": "RUN apk add lshw", "2c50f1f03d4bb0fe349e0b23fbb4d8a1": "COPY /go/bin/metadata-collector /", "d1531760939516f90c2563ac42841d72": "RUN /metadata-collector -once", "eb5c46da93babf6c937aee7f1c256a36": "RUN rm -Rf /var/spool/configuration", "eeb90bab7d2d02fd6fa714bfa56861f0": "RUN rm -Rf /var/spool/hardware", "493fc54a171ecd0b34bbab41a5f564cc": "RUN rm -Rf /var/spool/software", "941d4beab87e2ec60ffd3b2be6eb5e43": "RUN groupadd -r drone", "72389b6417b8f96c86fe120af137effd": "RUN useradd --no-log-init -r -g drone drone", "5c194299b1c82a4ee8097c63b8aec19c": "USER drone", "7baa83f836169119fe3783259756f83c": "RUN apt -y install mecab libmecab-dev mecab-ipadic-utf8", "c5096512b5ca3d7a3a9cfc7511975ff0": "RUN echo \"dicdir = /mecab-ipadic-neologd-dic\" > `mecab-config --sysconfdir`/mecabrc ENTRYPOINT /main", "142f6d59feb8d23be7b5bbd6deb951fc": "COPY /go/src/github.com/nexus49/headers/main .", "c0afa72b18ab8de50bc37b02b360ac43": "WORKDIR /apisprout", "d8b1cb3eb72adf086f2c3c2b8d1d04db": "COPY . /go/src/github.com/malice-plugins/comodo", "8e807b068f53a85a39d92b4e7a76a267": "WORKDIR /go/src/github.com/malice-plugins/comodo", "7a21564b3b49ca220a475a2d0cf32873": "FROM ubuntu:precise", "a55002ce19a3ef62dcdfed9980b44735": "LABEL malice.plugin.repository = \"https://github.com/malice-plugins/comodo.git\"", "e281871ee6422b975a1bb077100a1568": "RUN buildDeps='ca-certificates build-essential gdebi-core libssl-dev mercurial git-core wget'", "c7f2b6ad003aff3b560342e059df6cca": "RUN echo \"===> Install Comodo...\"", "c76e44108decf3e3554cff33ea0fb81f": "RUN wget http://download.comodo.com/cis/download/installs/linux/cav-linux_x64.deb", "191507e0fc00a3a085b77e4762b4493b": "RUN DEBIAN_FRONTEND=noninteractive gdebi -n cav-linux_x64.deb", "54c05bce27672f212713e6d2c1021ae6": "RUN DEBIAN_FRONTEND=noninteractive /opt/COMODO/post_setup.sh", "10ba598325588653bcf63549f84264a5": "ADD http://download.comodo.com/av/updates58/sigs/bases/bases.cav /opt/COMODO/scanners/", "094b52fd94146699b03e6bd6e77a00f9": "CMD [\"cmd\"]", "f07f017ca76064808ce288fd958828f1": "CMD ovirt_exporter", "63ad21d20a00d9ed34a3b6365840abeb": "RUN rm -fr public/*", "fc50ed7388f8e37589c1c5234248f880": "CMD cd web/ && gatsby build --prefix-paths && kaamer-db -server -d /data", "fb45429c2b918ff4b6a275eebb2f5e73": "RUN set -e", "008bb3e0898625b4bc421bb91aa773f2": "RUN apt-get install -y -q --no-install-recommends make nodejs npm", "09b88dbd392543b9425f7c83f5c96650": "RUN npm install -g @angular/cli", "8ca8b8ed73574b4c82e48f3c8e9b0a70": "COPY Makefile go.mod go.sum /usr/src/", "35841fcbd8f10856c852471a6081e602": "COPY api /usr/src/", "0553816a7b89ff1c98b3ddec52b42b08": "COPY cmd /usr/src/", "f8efe73ba06f57de5383b4f34e23f147": "COPY db /usr/src/", "07675e67a6567ae1b78c95e37ffa88c5": "COPY frontend /usr/src/", "f42088e7f326114c07383000389a4be8": "COPY game /usr/src/", "069a2d7ce7f3e4930b519af2d0eb35be": "COPY match /usr/src/", "17bfaaa2270ea0456282d13f87db3b13": "COPY player /usr/src/", "5c2cbd1415ed3e8caf2e76ed783382c5": "COPY project /usr/src/", "456d5b3570087e3894897ad439bf7fef": "COPY rating /usr/src/", "60814439771e14f4358db393533c1550": "COPY stats /usr/src/", "63d841b6f22472de79c5f4de1cb1d3b9": "WORKDIR /usr/src", "4636dbf41f5cfebb0c736b5900d9e33d": "RUN adduser --home /srv --no-create-home --system --uid 1000 --group app", "9faaa05764b705ce78b1a1cefcd6e930": "RUN chown 1000:1000 /srv", "eeb1567665670518400dc8db86e0e2d8": "COPY /usr/src/compelo /usr/local/bin/", "a0ede3a47519c5a3ebb62e9f1e89e5bf": "VOLUME /srv", "9e12b1b711799d95dcd8921074bd5e52": "ENV COMPELO_DB_PATH=\"/srv/db.sql\"", "3bca16c0343ca8a133341a97abe910fe": "ENV COMPELO_PORT=\"8080\"", "6589c4e7bdc79179286e710cbcc4addf": "CMD [\"/usr/local/bin/compelo\"]", "a4de64f9baede089f9ab46c4f38134a0": "LABEL maintainer=\"Leandro Loureiro <leandroloureiro@pm.me>\"", "c935751027c3be2bbbfe14176309cae5": "COPY . /go/src/gitlab.com/team-monitoring/comedian", "71dba5d6bcf67597faf3ff1faa31f06b": "RUN go get github.com/labstack/echo/middleware", "199938db07236fadfdcfbcae992a833a": "WORKDIR /go/src/gitlab.com/team-monitoring/comedian", "9bfb57e2821780195ae6c88f617ec0ab": "RUN make build_linux", "9fe5d49b7802275a3d5a6d35285094a5": "FROM debian:8.7", "956a11886c7c9f09859f1de33215c46e": "LABEL maintainer=\"Anatoliy Fedorenko <fedorenko.tolik@gmail.com>\"", "abcba7bf1b3656459ddc83f00a274437": "RUN apt-get install -y --no-install-recommends ca-certificates locales wget", "f78e60a002238722bcc37b5eb691f783": "ENV LANG=\"en_US.utf8\"", "6da41320f11c2668cbfd042e362fc49f": "RUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz", "786463656d194ea94e1d6ac0b6f8d9dd": "RUN tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz", "83934d49bd95ae113fb5f56e5c44a5d4": "RUN rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz", "1fa03eb7e871528a8562c85c365dcf54": "COPY comedianbot/active.en.toml /comedianbot/", "a34699b1439367cc529fbb6b8ff0fba1": "COPY comedianbot/active.ru.toml /comedianbot/", "7f3c590f65df43eb3e2f7ce3b3817447": "COPY /go/src/gitlab.com/team-monitoring/comedian/comedian /", "4e911610bd15fb8a6776b29239a05f37": "COPY templates/index.html /src/gitlab.com/team-monitoring/comedian/templates/", "cc7d0dc717bde547b04c8febf3325aae": "COPY templates/login.html /src/gitlab.com/team-monitoring/comedian/templates/", "1d860dc7a04ca743e8ed9b258fe5f7d7": "COPY goose /", "2e8083812a2f7385eefdd46066e0426b": "COPY migrations /", "4832c73c23bcd36e1f13c21af98af6c9": "ADD . project/Astral", "279681c3a99b97d79ee58fc0791479e7": "RUN cd project/Astral", "c55edbd891d6edb377884cdcbfefcc91": "RUN go get github.com/openchirp/oc", "165e0926de76eb94023c5f2d59be4fcb": "RUN mkdir -p /go/src/github.com/etcdpad/etcdpad-core", "ddbba4b502d4fedcf5224ae28c167959": "COPY . /go/src/github.com/etcdpad/etcdpad-core", "9899c64895d0c70609835f28d1cc2f83": "WORKDIR /go/src/github.com/etcdpad/etcdpad-core", "214ea9da9246635c90534ff41b83524e": "RUN apk add --update bash curl tzdata", "990d5325598b7d0296d6ae459ce28790": "RUN echo 'Asia/Shanghai' > /etc/timezone", "28f24359a4a174639c220efb66aa02c0": "RUN GOPROXY=https://goproxy.cn GO111MODULE=on go build -o app app.go", "7249d00b2df9cf3c8703bcb4621772a4": "FROM golang:1.14.1-alpine3.11", "cc89d81441198fdcc6d0586e67b992d2": "COPY /go/src/github.com/etcdpad/etcdpad-core/app /usr/local/bin/etcdpad-core", "a96cedd6717c44cbb0ce6a128fb08d59": "WORKDIR /usr/local/bin", "639de95d893cf10b7bdaa7682d947d7f": "ENTRYPOINT [\"/usr/local/bin/etcdpad-core\"]", "cb5e25fcca4bbf3c960ec404a05f487e": "CMD [\"-port\", \"8989\", \"-stdout\", \"true\"]", "391c423cedddbbe2b141208dd0aef3dc": "FROM golang:1.13.1-alpine as builder", "cd37ccf2228d4f60d283db92b556e237": "COPY /app/ddns /", "ab53ebb8155f13138220974629c36c05": "ENTRYPOINT [\"/ddns\"]", "676fa9e7b1992cbcec066d4b2bac477e": "ADD . /go/src/github.com/lwander/k8s-demo", "41d7940a875a039e1584d4559774f2f5": "RUN go install github.com/lwander/k8s-demo", "c5b4520c46bd6ca072e1e207ef347389": "ENV host=\"0.0.0.0\"", "35ad6f755b260c0e90a6b230244f299d": "CMD [\"./plathome\",\"--port=8080\",\"--host=0.0.0.0\"]", "1dd0a8b4909d895d705348e6f0ab8093": "ADD . /goapp", "0f37837e78c7f53e02437fa1fd4ea87c": "RUN go build -o git-sync", "654d162ce6cf1b32d39c92241f10321d": "COPY /src/git-sync .", "80bdccb0dc800670d96e2655c96d9f12": "CMD [\"git-sync\"]", "1f1a20babe906662dd2c59b5702f07a3": "ENV GOSUMDB=\"sum.golang.google.cn\"", "c560206e84975e888b3cb3f7c711dce5": "CMD [\"readmore-server\"]", "53407872617030455e15e164aa4dd4ca": "RUN apk add --no-cache neovim git ca-certificates python3 tzdata bash ctags", "270af076e5c99d483431e7901ae42052": "COPY scripts/install-vim-plugins /tmp/", "c46426ffd06a4f8a94f9bd8b01b59b89": "RUN chmod +x /tmp/install-vim-plugins", "28b35cf5ed2b68a125aae3a645f94da2": "RUN /tmp/install-vim-plugins || true", "25cee64dc30fbf7f0605145876e6cbd7": "ENTRYPOINT [\"zsh\"]", "6d3e1e09e040a4189e69811fd84e85b1": "RUN mkdir -p /data", "126faef0c3ad6521d9d931f023747adf": "RUN chown -R protoregistry: /data", "36bc581ed7bb551f0b416d78a47cc400": "RUN go build -o /go/bin/czds-dl cmd/czds-dl.go", "db7415a3fafe0b826b9408595b0d6978": "ENTRYPOINT [\"./rss-torrent\"]", "acf3b1c604726971658e622eeea1703c": "ARG BASE_IMAGE=\"\"", "443b9129627da2265509cc02ba51c7e1": "ARG GOLANG_VERSION=\"\"", "b156f0630349c83e957fc32a36446c3a": "ARG ETCD_VERSION=\"\"", "439b9a17023214fa7a712f496b1e367b": "FROM golang:${GOLANG_VERSION}-alpine3.18 as GO", "d5e7dff57c043d666e6973ca35f80864": "FROM registry.k8s.io/etcd:${ETCD_VERSION} as etcd", "2f04e0ea679b68ba3436068e067184ba": "FROM ${BASE_IMAGE}", "69603dcefe034172ab941dc20c0fb734": "ARG RESTY_CLI_VERSION=\"\"", "3a92299df7f0aa7e36e8919b683b359c": "ARG RESTY_CLI_SHA=\"\"", "1564dae2b4bad2e6882601f6cc931a7c": "ARG LUAROCKS_VERSION=\"\"", "9d37500259febf41f04f9c270433106a": "ARG LUAROCKS_SHA=\"\"", "54d07265c350c8670f62a5c7a5a9a90d": "ARG K8S_RELEASE=\"\"", "c3b902e27c84460b18f9cf6bc4ef0903": "ARG CHART_TESTING_VERSION=\"\"", "6ea4ec4823a69c5faa9ee223b8f3f02a": "ARG HELM_VERSION=\"\"", "6fc04dfa7ad9b0b4887f68eacb82b382": "ARG YAMALE_VERSION=\"\"", "467d5250ae72df1bc56680514f936e59": "ARG YAML_LINT_VERSION=\"\"", "96b91ba10976948f4b631e497a859b88": "ARG GINKGO_VERSION=\"\"", "1f868dd42723d254485a20474dc51a51": "ARG GOLINT_VERSION=\"\"", "e48bd219b059fe4496a7a3c41e4f494a": "RUN set -eux; if [ -e /etc/nsswitch.conf ]; then grep '^hosts: files dns' /etc/nsswitch.conf; else echo 'hosts: files dns' > /etc/nsswitch.conf; fi", "d6bb14fe7d40ce1e392a0f413bdb660a": "COPY /usr/local/go /usr/local/", "d10b75b696e3f8c998c8912d4051d3f7": "ENV PATH=\"$GOPATH/bin:/usr/local/go/bin:$PATH\"", "591435b2682e3728fe736a050e2c4126": "RUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\"", "1b5b8b4a3bd52a2e5e40b8b2e092fd3f": "RUN chmod -R 777 \"$GOPATH\"", "0e08c106148245b4756f5f1375f4a253": "COPY /usr/local/bin/etcd /usr/local/bin/", "286cdc87c5b73c9d3b79e343b104caa1": "RUN echo \"@testing https://nl.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories", "dd18539801e406040e17ee14904fb83d": "RUN apk add --no-cache bash ca-certificates wget make gcc git musl-dev perl python3 py-crcmod py-pip unzip openssl cfssl@testing curl tzdata libc6-compat", "2d06afb82389bd2ce3054bd7b9956df9": "RUN go install -v github.com/onsi/ginkgo/v2/ginkgo@v${GINKGO_VERSION}", "2dc0cca972c71308972a9772a44f129f": "RUN go install golang.org/x/lint/golint@${GOLINT_VERSION}", "1cbf035a621798fc5211fb19900eb5c4": "RUN wget -qO /tmp/resty_cli.tgz https://github.com/openresty/resty-cli/archive/v${RESTY_CLI_VERSION}.tar.gz", "5c9ba377f29eaa4ffbacc52027c0e2f0": "RUN echo \"${RESTY_CLI_SHA} */tmp/resty_cli.tgz\" | sha256sum -c -", "fb228a4f5b7b7aebe4cd2e3ace85c791": "RUN tar -C /tmp -xzf /tmp/resty_cli.tgz", "c5c64a3dc66d55a5aabd97939aecdf58": "RUN mv /tmp/resty-cli-${RESTY_CLI_VERSION}/bin/* /usr/local/bin/", "37ac86a1e0c188ea98d93ff22f1612b4": "RUN resty -V", "7c566b6ddc4cb77edfc5aaed7bf4248d": "RUN wget -qO /tmp/luarocks.tgz https://github.com/luarocks/luarocks/archive/v${LUAROCKS_VERSION}.tar.gz", "7b9f8816873ddfd8b40030fdc34b8a2e": "RUN echo \"${LUAROCKS_SHA} */tmp/luarocks.tgz\" | sha256sum -c -", "1c01373818072356c2b2656e2f9a2f09": "RUN tar -C /tmp -xzf /tmp/luarocks.tgz", "d564560e59db92e664c0a7b69bd4d6db": "RUN cd /tmp/luarocks*", "0e6538523089dbb2eaa84fd95f3f1ea7": "RUN luarocks install busted", "e5196d4e70226ad9ef19c04963c89430": "RUN luarocks install luacheck", "78c0d28587c59640864910072c717315": "RUN wget -qO /usr/local/bin/kubectl https://dl.k8s.io/release/${K8S_RELEASE}/bin/linux/${TARGETARCH}/kubectl", "c77d22b257b8a96d6f2826df790e78da": "RUN wget -qO /usr/local/bin/kube-apiserver https://dl.k8s.io/release/${K8S_RELEASE}/bin/linux/${TARGETARCH}/kube-apiserver", "ee5301a22e5390b70779d80bd47f8d3c": "RUN chmod +x /usr/local/bin/kube-apiserver", "3b1b4dff3d755178818588adade156a4": "RUN wget -qO /tmp/ct-${CHART_TESTING_VERSION}-linux-${TARGETARCH}.tar.gz https://github.com/helm/chart-testing/releases/download/v${CHART_TESTING_VERSION}/chart-testing_${CHART_TESTING_VERSION}_linux_${TARGETARCH}.tar.gz", "0eadc60beb643a0ef7f573b0b19278b5": "RUN mkdir -p /tmp/ct-download", "2293f33f7c25b36abf66151030db0616": "RUN tar xzvf /tmp/ct-${CHART_TESTING_VERSION}-linux-${TARGETARCH}.tar.gz -C /tmp/ct-download", "777ed954baff472aba65af258eea3598": "RUN rm /tmp/ct-${CHART_TESTING_VERSION}-linux-${TARGETARCH}.tar.gz", "5920119988bd9be997ec4413ee50770c": "RUN cp /tmp/ct-download/ct /usr/local/bin", "fa167d12ea0bf112c7c5e0a80479ea60": "RUN mkdir -p /etc/ct", "7d7b1f10efcd10f24bfa546e0c06a642": "RUN cp -R /tmp/ct-download/etc/* /etc/ct", "95ac03f27228f1c93c271bb1f1f1c85d": "RUN wget -qO /usr/local/bin/lj-releng https://raw.githubusercontent.com/openresty/openresty-devel-utils/master/lj-releng", "78c1b105302de563fbf0d525dc7ec995": "RUN chmod +x /usr/local/bin/lj-releng", "0c42dfbf170b45eade7fccbb6976de11": "RUN wget -qO /tmp/helm.tgz https://get.helm.sh/helm-v${HELM_VERSION}-linux-${TARGETARCH}.tar.gz", "0a27a6f867d176f44038ec57421e2baf": "RUN tar -C /tmp -xzf /tmp/helm.tgz", "50cceac189fb16b54d7f4b1ee7d7b41f": "RUN cp /tmp/linux*/helm /usr/local/bin", "b9adf411e5c37fad60132a82cacc2592": "RUN pip install \"yamllint==$YAML_LINT_VERSION\"", "a5f7092fcef51c1eff93023fae8855de": "RUN pip install \"yamale==$YAMALE_VERSION\"", "16e9180ab384e7ad306fd91dc9da9bbd": "COPY /go/bin/identityd /usr/bin/", "a218f38a3e98dd8b81bb98c08f16d51d": "COPY /go/bin/identitycli /usr/bin/", "fc87b0dc2a8b6f6bdac4e1e1a7be2885": "RUN GOOS=linux GOARCH=$TARGETARCH make build/custom-scorecard-tests", "d7a4c4c4c66505d7bc1021d0b38b1764": "FROM registry.access.redhat.com/ubi8/ubi-minimal:8.8", "774860d2b01b323cf528f23a7c75c0d8": "ENV HOME=\"/opt/custom-scorecard-tests\" USER_NAME=\"custom-scorecard-tests\" USER_UID=\"1001\"", "aed49eee1e4797646765d54edc36b99b": "COPY /workspace/build/custom-scorecard-tests /usr/local/bin/", "a5c84ac8f290229811135d120bd70853": "ENTRYPOINT [\"/usr/local/bin/custom-scorecard-tests\"]", "a7f7f3d3b843ee0c8e4497e2b2fb42ae": "RUN go get github.com/golang/lint/golint github.com/aws/aws-sdk-go github.com/aws/aws-dax-go github.com/antlr/antlr4/runtime/Go/antlr github.com/aws/aws-lambda-go/lambda github.com/stretchr/testify github.com/gusaul/go-dynamock go.uber.org/zap github.com/satori/go.uuid github.com/asaskevich/govalidator github.com/reddotpay/awskms github.com/reddotpay/logger github.com/gomodule/redigo/redis github.com/rafaeljusto/redigomock github.com/hubcash/cards", "92ea2ceb643391093f195b3c36f3827f": "ENV PATH=\"$PATH:~/.local/bin\"", "f7346620c39581c403961a96633fae56": "ADD . /go/src/github.com/UpdateHub/updatehub-ce", "0efe00fc23abea02bae059be8f234988": "FROM golang:1.12.6-alpine as builder", "b92f8e0ee690eec0c2c572400ead5864": "FROM golang:1.12.6-alpine", "49ac601e35412cee471f74189733a8a7": "RUN apk add g++", "40d04e3f9eae667e2fabde2b32ccaf80": "MAINTAINER Takeru Sato <type.in.type@gmail.com>", "f4c5ace3c4a5070c56602f8434c843c9": "ENV GEOIP_UPDATE_VERSION=\"4.0.0\"", "b09005e701194d17e835e0254f65fda3": "RUN apk add --update --no-cache curl gcc make libc-dev", "c799dbcee6638dc3fff7d736b54e4a0e": "RUN cd \"${SRC_PATH}\"; make", "6d932337f8f0fba828cd6c1a66ad4fb7": "COPY ./crontabs/root /root/crontabs/", "db88e9892eb3568c4cbe859e42e8b0c2": "CMD /bin/run.sh && crond -f -c /root/crontabs", "8bd54c5a6349ae655c1fb8f1e2ab045e": "CMD [\"ls -alt /go/src/app\"]", "1de43c6c97a67b6c37cdbbd80846f7db": "RUN go build -mod vendor -o /usr/local/bin/api_mp_callback nautilus/cmd/api_mp_callback", "0f64daff4be906c26a21c1204184758d": "RUN go build -mod vendor -o /usr/local/bin/job_mysql_migrate nautilus/cmd/job_mysql_migrate", "966079d1043381f83498c21b57d4b77f": "RUN go build -mod vendor -o /usr/local/bin/svc_mp nautilus/cmd/svc_mp", "2db2c0bae67059b12b6aa12661802e76": "RUN go build -mod vendor -o /usr/local/bin/svc_mp_token nautilus/cmd/svc_mp_token", "915be35c1c62c2c0ec3c445024c37da7": "RUN go build -mod vendor -o /usr/local/bin/svc_user nautilus/cmd/svc_user", "deb75dc1022f1c7dc4be3e0fc67caebd": "RUN go build -mod vendor -o /usr/local/bin/web_redir nautilus/cmd/web_redir", "d05c3834790eca0ffe982a9c925c895e": "COPY /usr/local/bin/api_mp_callback /usr/local/bin/", "94e7ee6d5e0e180e1f586278bbb0241d": "COPY /usr/local/bin/job_mysql_migrate /usr/local/bin/", "d15405d8708a694d1371d25559464b5f": "COPY /usr/local/bin/svc_mp /usr/local/bin/", "2c8d6439e7e743921d4b93c79348dc89": "COPY /usr/local/bin/svc_mp_token /usr/local/bin/", "dd0955cd588f309bff42593f0b348ee9": "COPY /usr/local/bin/svc_user /usr/local/bin/", "192a0bed27bf3430f897ab9bcf836777": "COPY /usr/local/bin/web_redir /usr/local/bin/", "4d45db8d3d95e9f4640c5748b0cf9c59": "FROM --platform=$BUILDPLATFORM golang:1.17-alpine AS builder", "9b47f439ea877dfd3ca791013442f024": "ARG TARGETPLATFORM=\"\"", "14263c7c19376834d563ceb2b38f3d74": "ARG CGO_ENABLED=on", "cb28a2a1aace4a282241fd1bdd69ae7e": "ENV GOOS=\"$TARGETOS\" GOARCH=\"$TARGETARCH\"", "cd3fc6961e91dc97d55e0e7687bdb590": "RUN apk add --no-cache --virtual .build-deps curl build-base git libcap", "b2323ca5c6d4ee7fed2d25e0cc9fb007": "RUN mkdir -p /root/plugin", "5c691eb060dcd4fce4c3ebd826b0d134": "RUN cd /root/plugin", "828ff03234ff342354354a41b5bc91eb": "RUN curl -sSL https://github.com/teddysun/v2ray-plugin/archive/v$VERSION.tar.gz | tar xz --strip 1", "e987084c4970384327c81c36e5ae58a1": "RUN go build -v -trimpath -ldflags \"-X main.VERSION=v$VERSION -s -w -buildid=\" -o /v2ray-plugin", "db5c7e89e123085b4b0e806a4aa8121e": "RUN setcap 'cap_net_bind_service=+ep' /v2ray-plugin", "797b2749cfdbf008374d41aaa58574ac": "FROM alpine:3.17", "eb75b6dc66f33734e7689cf42f4223df": "COPY /v2ray-plugin /usr/bin/", "36ed7a925466bd03ed7abaec3ac2a42f": "CMD v2ray-plugin -version", "9dc7a028ab4fe8164244f32752b2d5b8": "WORKDIR /go/src/moul.io/cryptoguess", "14031f02b4871210a328b46294164bce": "COPY /go/bin/cryptoguess /bin/", "77f8de8b006290408f7d46527a0b61e0": "ENTRYPOINT [\"/bin/cryptoguess\"]", "095cbf5a616e35b67b89cc4700ca11bc": "ENV LC_CTYPE=\"en_US.UTF-8\"", "1cdd6ee60880f218bb0201ab063e2ab6": "RUN apt-get install -y locales", "b5a8a2a5613ef86cd518f09cafb40753": "RUN dpkg-reconfigure locales", "89f9f6aa631e7554fd39cd5ff3dc8387": "RUN apt-get install -y sudo curl ca-certificates openssh-client unzip python3-dev python3 libffi-dev openssl git vim build-essential python3-pip python3-setuptools python3.7-venv openjdk-8-jdk", "fa4f492a25f5330c050fe2abbd265b06": "CMD [\"./main\", \"8081\"]", "bb135ac46be31ccc9b24c2cd252cad80": "CMD [\"service\"]", "2a5ea115f91db8222f17d1f9f8d31aad": "ENTRYPOINT [\"/data/projects/fatecloud/kubefate\"]", "fc8212db59c29cbc166bb5d60f9b5e5b": "LABEL maintainer=\"Chirkov Dmitry <d.chirkov@me.com>\"", "b0ffaec06e13c02bae296f231211c50b": "WORKDIR /go/src/github.com/alanqchen/bear-post/backend", "517134832fb9dfca7d39aa3d222b82b7": "LABEL maintainer=\"Alan Chen\"", "89c6d88e5ae71255fbebae5f0ef2fc93": "CMD [ \"./main\" ]", "4760e5ab64aaf09512a94fd401cb6aba": "COPY /", "638b6881864b0dcf617cba21ef922db5": "RUN go install /go/src/gitlab.com/braneproject/branehub", "257e0379ffbbe8c67ccf04286c9af7b0": "ENTRYPOINT [\"branehub\"]", "012f16483d75cd94fd475787fe0506ae": "COPY /app/rss_sync /app/", "555f4ff6787275d848855080fc57de64": "LABEL Maintainer=\"Amit S Dalal <amit@amitdalal.me>\" Description=\"Lightweight container with dig, bash and curl && a runtime\"", "17b0b124aefc9ddda651e87ea9a5000d": "RUN addgroup -S appgroup", "2d19e1ef29b122eaf36367f2bc21ab77": "RUN adduser -S appuser -G appgroup", "84cf6fa1f1f32e86662e9f4a6a7a7a0a": "WORKDIR /go/src/github.com/bonde-redirect", "77f19f543bd723ad0a113834859522a2": "RUN go install github.com/bonde-redirect", "c26f18b3470405ddd83d90cf5f7e83fe": "ENTRYPOINT /go/bin/bonde-redirect", "9f52af005f56ce3d930439c308db5b71": "WORKDIR /go/src/github.com/pelletier/go-toml", "ad826f61ea02ae761040e24a77c01de4": "COPY /go/bin/tomll /usr/bin/", "fc21c9ab9b87e958a763e77e37e66c2a": "COPY /go/bin/tomljson /usr/bin/", "5afa724061b7ae07b723bffb21b9c374": "COPY /go/bin/jsontoml /usr/bin/", "23938c19753221c67f122fbfe3540791": "RUN go build github.com/cbeneke/hcloud-fip-controller", "c9fcbbdf4269b6415ab588980738ba0c": "COPY /hcloud-fip-controller /app/fip-controller", "a57dbbbd719c52bd05115adaec896d1c": "ENV SHADOWSOCKS_LIBEV_VERSION=\"v3.3.2\"", "f657d7732628ff31e84c9e498e0f2979": "ENTRYPOINT [\"/usr/sbin/update-ca-certificates & /bin/ip-api-proxy\"]", "ea6d47914af4cd30578871087614acc0": "RUN mkdir -p \"$GOPATH/src/github.com/lnsp/k8s-mattermost-informer\"", "7bbab3ff214715ef849744afb5fb88ae": "ADD . \"$GOPATH/src/github.com/lnsp/k8s-mattermost-informer\"", "58df1a9253299046f67974a8a49d0f2a": "RUN cd \"$GOPATH/src/github.com/lnsp/k8s-mattermost-informer\"", "ecef34162ae21d92e7128dfecdc5f4ba": "ADD . /go/src/github.com/UpdateHub/updatehub-ce-server", "d29acd59e7fb5bb7be9f511f7406e541": "WORKDIR /go/src/github.com/UpdateHub/updatehub-ce-server", "b7c18be2a1deec2422ab099fe5c700b3": "COPY /go/bin/updatehub-ce-server /usr/bin/", "c7e754bb0c08e5fc5416d5d7b16751c8": "ENTRYPOINT [\"/usr/bin/updatehub-ce-server\"]", "5e9c131c1341112cda8dc2106a8f584a": "RUN go get -d github.com/aergoio/aergo-esindexer", "b575f454d8e56e0ac210648c494f99dc": "RUN cd ${GOPATH}/src/github.com/aergoio/aergo-esindexer", "adb0df0443cd296da97f7144302295da": "COPY $HOME/go/src/github.com/aergoio/aergo-esindexer/bin/* /usr/local/bin/", "76b6fe1b7e35bf9f61f1091abf786291": "RUN CGO_ENABLED=0 GOOS=linux go build -o /proxy-server .", "c91e2d0d4abbb118c2373775bd3f7668": "RUN ls -l /gotty", "1dcd60c69f67d43467bb556bf49f0de9": "ENV KUBECTL_VERSION=\"v1.16.2\"", "8b0d241607ab59f747e47de5e4cf1776": "ENV K9S_VERSION=\"0.9.3\"", "fc024160b475127c73ade1abee59c54a": "RUN apt-get install -y --no-install-recommends curl ca-certificates jq iproute2 less bash-completion unzip sysstat acl net-tools iputils-ping telnet dnsutils wget vim git", "a781ea798e1bd2de8c834c510855eb79": "RUN git clone https://github.com/ahmetb/kubectx /opt/kubectx", "9924ae05896354fca152a2ad8a8327f5": "RUN chmod -R 755 /opt/kubectx", "5b984d2af1f076b5e584bb58572954fe": "RUN ln -s /opt/kubectx/kubectx /usr/local/bin/kubectx", "259e41cd4e7f8a06ccd1b303e34169cc": "RUN ln -s /opt/kubectx/kubens /usr/local/bin/kubens", "7ea6f575793ea77ddec0bddb163a1d81": "RUN git clone --depth 1 https://github.com/ahmetb/kubectl-aliases /opt/kubectl-aliases", "58a2ce8a4e622dae0d33ba0ccbd9484c": "RUN chmod -R 755 /opt/kubectl-aliases", "580f15af2a38726240685c86b76534c5": "RUN git clone --depth 1 https://github.com/junegunn/fzf /opt/fzf", "970536d6d62d4fda514d7770d54a054b": "RUN chmod -R 755 /opt/fzf", "701f1bddb82ba9f23583b3a530e0bf1a": "RUN /opt/fzf/install", "40be9519265337760b09d04a7336d3a7": "RUN ln -s /opt/fzf/bin/fzf /usr/local/bin/fzf", "5c8e8169fd7e8103c6e966cc0567b0f4": "RUN mkdir -p /tmp/k9s", "29cb890718d33fc15e5f9bab64abf138": "RUN cd /tmp/k9s", "d7f7903f264e7394cb9e8ee1cfb47e0c": "RUN wget https://github.com/derailed/k9s/releases/download/${K9S_VERSION}/k9s_${K9S_VERSION}_Linux_x86_64.tar.gz", "637b51ef1bfae169f3450e9e54e2e044": "RUN tar -xvf k9s_${K9S_VERSION}_Linux_x86_64.tar.gz", "5c412cfb808120cecbb4db50d071d181": "RUN chmod +x k9s", "4865ea7f21f77f6f19781be32e88afa4": "RUN mv k9s /usr/bin", "c86d927e26822f8da644bf1d932c7a52": "RUN DEBIAN_FRONTEND=noninteractive apt-get --purge remove -y git", "cb24e6c0454830dbbe748c9665cb07d9": "RUN chmod -R 755 /tmp", "7b806eb9cfc0f1ab8f3d7d3c40d66141": "RUN mkdir -p /opt/webkubectl", "edd0f9fd2e6c9757111bd1d20aef8f60": "COPY start-webkubectl.sh /opt/webkubectl", "21057f568ee136ac793afb2cd5ebdad8": "COPY start-session.sh /opt/webkubectl", "120c98ab9f5468979246afb63f7ac3f4": "COPY init-kubectl.sh /opt/webkubectl", "0211b0edcb534e0f1365f94467622ba1": "RUN chmod -R 700 /opt/webkubectl", "86c4c48fa274ec0d31c9605d37225154": "ENV KUBECTL_INSECURE_SKIP_TLS_VERIFY=\"true\"", "0dac70a8b1106521a190dde540c65e68": "ENV GOTTY_OPTIONS=\"--port 8080 --permit-write --permit-arguments\"", "a856201e8611bce61334708ef44d5cc2": "CMD [\"sh\",\"/opt/webkubectl/start-webkubectl.sh\"]", "78f5c4e93be49ef97e9b54e2b3011574": "ENV GOPROXY=\"https://mirrors.aliyun.com/goproxy/\"", "96db037f143601fc3bb889ddd9bc5e9c": "ADD . /jiode", "473da85f0b76ca470dc5fad8492c1c64": "WORKDIR /jiode", "df18a214a8c0e7cd35069b8224ecb6ef": "RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o jiode", "35e4059244194efe1dbfd63478f10278": "ENV PORT=\"3000\"", "63f2258aba0503ff026d5253ca9b8e60": "RUN echo \"http://mirrors.aliyun.com/alpine/v3.7/main/\" > /etc/apk/repositories", "d1ed8391f6d777c38fe3c78d32813e24": "RUN echo \"hosts: files dns\" > /etc/nsswitch.conf", "716334b114309bc401dc7a0313fea769": "WORKDIR /www", "b56ae1493ee52ed45ef543a89d36945f": "COPY /jiode/jiode /usr/bin/", "c096e438222b0e218012cf9fc09bd5d2": "RUN chmod +x /usr/bin/jiode", "5556f9d83c424aeabae2782c9221ab4c": "ENTRYPOINT [\"jiode\"]", "c53d4abe8bc403d1102c41856a24ce64": "RUN go get -u -v -d github.com/cbeneke/hcloud-fip-controller", "917586b1a8497595d522da8865aae68f": "ADD . /build/", "f4ad1a52a9e7264ae0ce0904abdf4dc6": "RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -ldflags '-extldflags \"-static\"' -o main .", "c9d01c95db3fcb85693657faa8f0cb7d": "RUN adduser -S -D -H -h /app user", "78fe19b953e6b2e2d64e33db438be68e": "COPY /build/main /app/", "d81c951d7c129bce18ef8b0ece0d9434": "ARG FFMPEG_VERSION=4.2.2", "1851e99c896fb275e277b17523a30ffd": "ARG PREFIX=/opt/ffmpeg", "05f689e6f30a095b11eba3aa9703a65f": "ARG LD_LIBRARY_PATH=/opt/ffmpeg/lib", "09568574cd2ea9cd6e10a8529138ab2d": "ARG MAKEFLAGS=\"-j4\"", "8c3750307b17dcf46b665de63aac1ddc": "RUN apk add --update build-base coreutils freetype-dev gcc lame-dev libogg-dev libass libass-dev libvpx-dev libvorbis-dev libwebp-dev libtheora-dev opus-dev pkgconf pkgconfig rtmpdump-dev wget x264-dev x265-dev yasm", "614ca79d746948e8996c3014e4aeeb08": "RUN echo http://dl-cdn.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories", "41fe64452f16c7da5b7a62c59b3e9ed8": "RUN apk add --update fdk-aac-dev", "874ffb00bd5034c73f2f0818a6fac690": "RUN cd /tmp/", "5bc7ada2c3e0af9fad2b30f80f3651bd": "RUN wget http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz", "2ed8908b4953010ccb344ff70e827733": "RUN tar zxf ffmpeg-${FFMPEG_VERSION}.tar.gz", "a5978dc9cf4efe897eb8be2fbc633183": "RUN rm ffmpeg-${FFMPEG_VERSION}.tar.gz", "eb31b16a624fe9e70ee6a13cf7ec6384": "RUN cd /tmp/ffmpeg-${FFMPEG_VERSION}", "cfb3912caa529d952bbe374d846f012f": "RUN ./configure --enable-version3 --enable-gpl --enable-nonfree --enable-small --enable-libmp3lame --enable-libx264 --enable-libx265 --enable-libvpx --enable-libtheora --enable-libvorbis --enable-libopus --enable-libfdk-aac --enable-libass --enable-libwebp --enable-librtmp --enable-postproc --enable-avresample --enable-libfreetype --disable-debug --disable-doc --disable-ffplay --extra-cflags=\"-I${PREFIX}/include\" --extra-ldflags=\"-L${PREFIX}/lib\" --extra-libs=\"-lpthread -lm\" --prefix=\"${PREFIX}\"", "7ca2f39b16decc4313fb80f4af621ec4": "RUN make distclean", "b6bdb2937b4e46fde1f29cb212ab58e0": "RUN rm -rf /var/cache/apk/* /tmp/*", "9b11d91dc0412007d4d5b5598b4b1bfd": "ENV MR_DOWNLOAD_DIR=\"/download\"", "3f7250a17fcfb08b95e60987e76363e1": "ENV PATH=\"/opt/ffmpeg/bin:$PATH\"", "702d36d275266f036203aa9906a62279": "RUN apk add --update --no-cache curl ca-certificates openssl pcre lame libogg libass libvpx libvorbis libwebp libtheora opus rtmpdump x264-dev x265-dev", "8327128bffadeb99df7be06987bd4f38": "COPY /opt/ffmpeg /opt/", "296b3ec9564955a52bc69b4a5a448cb8": "COPY /usr/lib/libfdk-aac.so.2 /usr/lib/", "25ad0f69bd5809103868ba033d77fcbf": "COPY static /app/", "54bcd2320cd3c5836bb191f97487d3af": "ENV ENV=\"pro\"", "4ac1ed2451e5e1edae0bc53766f98d70": "RUN cp .env.$ENV .env", "76aef4bc1ab44318d8fc3dd7cc5293b5": "RUN CGO_ENABLED=0 go build -o /bin/kubernetes-route53-sync .", "91847586407882261d129d4976cb109e": "COPY /bin/kubernetes-route53-sync /bin/", "4afc4e4ea062aeebab2a3c2b1e09a5e2": "RUN apk add --update protobuf protobuf-dev git", "df8ee4eabf9f94126b31e438285ae287": "RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o bosun .", "f7fe64382cb870bd78420175db6bdd27": "RUN chmod +x /opt/bin/start_bosun.sh", "3335244dcf814db9cf90af41c7aa86e6": "COPY app.go .", "f3c91439d87628a814044224444821f5": "COPY ./example.csv mapping.csv", "1890290d29dc2ef25bda5086d8b7128b": "RUN echo 'deb http://deb.debian.org/debian unstable main' > /etc/apt/sources.list.d/firefox.list", "7ce1d6c9ecdb21ab9d1b2a20035e0ed1": "RUN apt-get install -t unstable -y firefox", "5d620bc5b35e60ea5b13050ea75226dc": "RUN rm -fr /etc/apt/sources.list.d/firefox.list /var/lib/apt/lists/*", "3925075457bb0efe1985993f082b1d03": "RUN go build -o app-api .", "0abdc496e3cf7c23950afa41a8e5fbdb": "CMD /app/app-api", "5bd802ebfb197ef2b1914dd02197a9a7": "FROM golang:1.12.4-alpine3.9 as buildstage", "996da89663b48848bca8f85fadc5db3d": "WORKDIR /$GOPATH/src/github.com/platinasystems/tiles", "0e2dca7579aab3e1ca65c93b2513fc40": "ENV GITHUB_TOKEN=\"a556328a954548f9b3f8e5bf2bc2b9d84a30c479\"", "bdfeb6924d154e1a74cc165ae404a3af": "WORKDIR /$GOPATH/src/github.com/platinasystems", "dc9bf810a8a94fd90fd467bfa83503bc": "RUN git clone https://github.com/platinasystems/go-collector-system", "897ec3507db2a62988f2724141b7ea61": "WORKDIR go-collector-system", "0e3909ca35bb1dd579afc2953db0d09f": "RUN git fetch", "0e2e75fbbc65cf254a5f017e57685574": "RUN git reset --hard aa2d2f271278789e9dfbd1717e7e48b889571e29", "2feed437eed2374268aae04f151530c8": "RUN make build distMode=dir ignoreMissing=yes", "8aaaac23a254461173e2d2d6a8b85a84": "RUN COLLECTOR_DIR=$(ls dist/ | grep system)", "d48a1ebd3ebc123ebed1d09fd110eea1": "RUN cp dist/$COLLECTOR_DIR/system-collector /root/system-collector", "2c6e08a78aa14f8c3e67c29e9e5d8cf9": "RUN git clone https://github.com/platinasystems/turnkey-kubespray", "17ecc6cdba23a4e158f52cdb98b48b89": "WORKDIR turnkey-kubespray", "576276ab9fe6dfbc2eacdf4a3d95f092": "RUN git reset --hard 8febfc7fd450d09f08509a1ee1f5bc16853fa379", "481ae0ba55ca8a6b614a1d5f2c9b246e": "RUN cp -r /$GOPATH/src/github.com/platinasystems/turnkey-kubespray /root/", "791d9905b6e6c25d802d6d7f51db99d1": "RUN git clone https://github.com/platinasystems/ops.git", "78ed8031d5efcdcc44ff558841e03631": "WORKDIR ops", "3989d61d7e96bcee296c842b37581b97": "RUN git reset --hard c9f9f33de633405e1c46caecb2c7c5ddc8b3c10e", "077f3e8c7ae3b40cc3418b1a1eb76dee": "RUN cp -r /$GOPATH/src/github.com/platinasystems/ops /root/", "8d21edd23194f445ba0fb8215198d4c0": "RUN make build distMode=dir ignoreMissing=yes execMode=debug collectorPath=/root/system-collector turnkeyKubesprayPath=/root/turnkey-kubespray opsPath=/root/ops", "1ddd8493792371f1824f7dc47a5aaf80": "RUN mv dist/* /", "fe46576a27fdcd61b1826ed368b7df4a": "WORKDIR /$GOPATH/src/github.com", "aac3be5bf902039e37c87eadddc1ce9b": "RUN git clone https://github.com/platinasystems/installation", "a4ca48664e5792ef39f1d5c8a87ca337": "WORKDIR installation", "1bb1738c5c30c9ae499b5a4fbe3219d3": "RUN git reset --hard 8c9703fc6303622d3e046e794c2e871b5b52f094", "5877b1320f61addd1272993ba8807a12": "RUN cp -r product/docker/common/scripts /scripts", "429876c855b2125ca32e8c6ce4f955a2": "RUN echo \"deb http://ppa.launchpad.net/ansible/ansible/ubuntu trusty main\" >> /etc/apt/sources.list", "36db941f6625c8a72a3ef2315efa858e": "RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 93C4A3FD7BB9C367", "3e823f90ab8f716ea6f07e069d7a132c": "RUN apt-get install -y postgresql-client=9.4+165+deb8u3 python-pip xz-utils less rsync bash python-netaddr git supervisor", "178df8896054e89884a181e921974130": "RUN easy_install -U pip", "c8c4a54af805d92721a02ed2879d19ca": "RUN ln -s /usr/bin/rsync /usr/sbin/rsync", "431fc88344373abe1f1dbd21821cef31": "RUN ln -s /usr/bin/ssh /usr/sbin/ssh", "54f65776f482a795713a9c99b24846ca": "COPY /pccserver-* /home/", "3d09794a3cb134d6a274d47c0d393b75": "RUN MS_DIR=$(ls /home | grep pccserver)", "ca849f1dc05c1750c420ee45101a5142": "RUN export MS_DIR=$MS_DIR", "93ba2e00436250643dc077621228f6d6": "WORKDIR /home/$MS_DIR", "0cf96c728c8bf61e22d997b6eed10d0f": "COPY build/docker/ansible/ansible_2.7.10-1.deb .", "9cf9bc7fd68c84878a00e16c1153c340": "RUN dpkg -i ansible_2.7.10-1.deb || apt-get -f install -y", "908d1847c7cd41ef1b1ad633d70b5b88": "RUN rm ansible_2.7.10-1.deb", "e1d57794d7d26348b1352938f30909c7": "COPY build/docker/ansible/hosts.yml ansible/infra/inventory/sites", "408e22b10b75816cf87e4842e1cacd7b": "RUN mkdir -p scripts", "1fe687d50d1094d1772a795cc6322e5a": "COPY /scripts scripts", "1c087f5c762f70b2bd83cc83872b7825": "RUN chmod +x scripts/microservice/*", "9be60b000f6230e0c89c785a619e77b5": "COPY pccserver/sql/schema.sql scripts/db/", "99e846e447776df03fe6ae5e9fb4aa49": "ARG ENABLE_DEBUG=\"\"", "9743d60543d3ea21f0b9db74d7c0d910": "RUN chmod u+x scripts/debug/debug-env-setup.sh", "64a987d73f5fadfe00dce788ed55bef0": "RUN scripts/debug/debug-env-setup.sh -l go -d $ENABLE_DEBUG -i debian", "354be188f48d2388c4138d21f7e01a9b": "RUN bash setup_repo.sh", "e32a4fa154bb69a7f84cff4f0dab568b": "ENV ANSIBLE_VERBOSITY=\"0\"", "7bf7998905ce94e0ecaecd2090715772": "RUN echo \"deb http://archive.canonical.com/ubuntu bionic partner\" >> /etc/apt/sources.list", "1950a7f7a626974283c49dd98e61870b": "RUN apt-get install -y curl net-tools bash-completion iproute2 bridge-utils nano kmod dbus", "0dd7b4cd36317f2a5605b79fbf598191": "COPY pccserver/ansible/infra/network/tunnel/scripts/tunnel.sh scripts/tunnel/", "c7146b91f0731aadd3c2123284d39b7a": "RUN apt-get install -y openssh-server", "feca16433e28cb69260eebb0264b30cc": "RUN echo 'root:root' |chpasswd", "44183d5829403864b83f022c7a41d753": "RUN sed -ri 's/^#?GatewayPorts\\s+.*/GatewayPorts yes/' /etc/ssh/sshd_config", "73350655e77517833666658c8d0307c8": "RUN sed -ri 's/^#?PermitTunnel\\s+.*/PermitTunnel yes/' /etc/ssh/sshd_config", "68c71b56038ff78fc95402ce1e1e2653": "RUN sed -ri 's/^#?TCPKeepAlive\\s+.*/TCPKeepAlive yes/' /etc/ssh/sshd_config", "0131fe70a4bed4204a2cb91e15b59046": "RUN echo \"PermitTunnel yes\" >> /etc/ssh/sshd_config", "5db5e582e93738e4443ffecebdfdb0b6": "RUN echo \"AllowTCPForwarding yes\" >> /etc/ssh/sshd_config", "b7b2f1204aed540f849f31f6b89014cb": "RUN sed -ir 's/#{1,}?net.ipv4.ip_forward ?= ?(0|1)/net.ipv4.ip_forward = 1/g' /etc/sysctl.conf", "ad07b4d01793ec7b1a1555a40aee8db9": "RUN systemctl enable ssh", "b890dbfde04b1d9662b38028d9ed9651": "RUN service ssh restart", "1bacbdccd408021314261f994190f484": "COPY build/docker/supervisor/supervisord.conf /etc/supervisor/conf.d/", "54dd30ad24f475f98f6dd5ac52cd1bc3": "CMD [\"/usr/bin/supervisord\"]", "1bff26108addacb2517a71942e2492e8": "CMD [\"SpaceAPI-Server\", \"serve\"]", "68b64f497ba1c411058b7d90100c0f2c": "FROM golang:1.13 as build", "8612c21ea295e9335918e4353ac61b2f": "WORKDIR /go/src/github.com/m-lab/pusher", "7d424181e939164330b6701a3355e2db": "RUN go get -v -ldflags \"-X github.com/m-lab/go/prometheusx.GitShortCommit=$(git log -1 --format=%h)$(git diff --quiet || echo dirty)\" github.com/m-lab/pusher", "538101e86465184621f535961c9c854b": "FROM golang:1.12-alpine3.9 AS build-env", "03cd30ce6b161804bc2b23f26c4f3a05": "WORKDIR /app/cli", "5290fc4a82f55956ec9b2bb766fc9adf": "RUN go build -mod=vendor .", "3211ff647942de40cafe2d2ea8249e26": "COPY /app/cli/cli .", "8c158136700803102e8109149fd66e3f": "CMD [\"./cli\", \"start\"]", "d9c1b63928e863f441250fd7e9aea807": "RUN apk add --no-cache --update git ca-certificates", "640c1ebe806e318cb60979f4455f8cf2": "ENTRYPOINT [\"./gql\"]", "6846134852499bc6ba66ae5bce306c28": "RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -ldflags '-w -s' -o dynamicProxyEip", "7c8d0aec2720d066cf37644ceacc2b03": "ARG GOVERSION=1.11.1", "4a906871867320d403e8e23edfa0b71a": "FROM golang:$GOVERSION-alpine as builder", "68f1891b2ac7bd84582afd0316538bc7": "WORKDIR /go/src/github.com/kubernetes-incubator/external-storage", "b8c794e56b5a794db302b80a19d43b10": "RUN cd local-volume/provisioner; CGO_ENABLED=0 go build -a -ldflags '-extldflags \"-static\"' -o local-volume-provisioner ./cmd", "9dfe461439745d6eb1d59723f2b047b5": "FROM k8s.gcr.io/debian-base-amd64:0.4.0", "a8852a7ce2ef97f99385dee029aacfa8": "RUN clean-install util-linux e2fsprogs bash", "f481c2d14637821fc3a8b94c016b6ffa": "COPY /go/src/github.com/kubernetes-incubator/external-storage/local-volume/provisioner/local-volume-provisioner /local-provisioner", "738a66a1bf6e14bf3bf4c25166468241": "ADD local-volume/provisioner/deployment/docker/scripts /", "d9553b23fc03260fcda2ed30e2f0ccb4": "ENTRYPOINT [\"/local-provisioner\"]", "c080364c4a51edeca431d110823a72f9": "RUN cd /go/src/leogregianin/brcep", "fb8c6181e748fe590e6b259f5c47e2dd": "FROM golang:1.13.5-buster", "42680c493f46ad19d2c82e373059124e": "RUN adduser -D -u \"$UID\" -G sensoroni -g '' sensoroni", "a40cd4b027c24b3fa058dd13807777e0": "RUN apt install inkscape git -y", "b00b9e47a028030ec2deb1b1faeb1a4b": "RUN openssl genrsa -out api.rsa 4096", "0a692f9252a1491d252b36d48c91de4f": "RUN openssl rsa -in api.rsa -pubout > api.rsa.pub", "90e1d47d195c56f51fc2e390aacd4eaa": "RUN make -j $(nproc)", "75010f165654d79d19bbe95f1480ea0f": "WORKDIR /go/src/github.com/bertbaron/intravatar", "e8ebee15cfccbb5aab707f571b94634c": "RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o intravatar .", "2cf5965a5c00516d2bf1e479d4aa2b07": "COPY /go/src/github.com/bertbaron/intravatar/intravatar .", "7701ba7f92f77463c742ac17e38d31d3": "ENTRYPOINT [\"./intravatar\"]", "3ee4600808b237acf9ee1a936d073a85": "ENV domain=\"**none**\"", "69a9ce9733f625d4d04324a8427c36db": "FROM golang:1.14.2-buster", "a53053fed05e10ad4b917ee97922b188": "FROM golang AS downloader", "852d69fe8fdfa3120c5a8d84f913aa47": "RUN apt-get install --no-install-recommends -y bzip2", "d8ea8d20ccec33d6b9e7faa57f73ed7b": "RUN mkdir /firefox", "996f93c2a273e30991c7ba88c81ae35f": "WORKDIR /firefox", "f8b810982c3f249dfd3d91cbaafd75b3": "RUN wget -q -O - 'https://download.mozilla.org/?product=firefox-latest-ssl&os=linux64&lang=en-US' | tar jxvf - --strip-components 1", "27dca8a98b7283bfe1245b0ee82d55c9": "RUN apt-cache depends firefox-esr | grep Depends | cut -d ':' -f 2 | xargs apt-get install -y --no-install-recommends ca-certificates", "5982da0b327194eaf13dc0bbaf74e895": "COPY /firefox /", "796470888386dc4d61f2d5269f3045ee": "ADD .mozilla /profile_tmpl/", "913c6b941f4e28b608aec33d1de51fd7": "ADD start.sh /usr/local/bin/", "2ee5bad17e10fec64f8cd85a1fb99dde": "CMD /usr/local/bin/start.sh", "1bc509aed89061f3d952a214b9bf3be4": "FROM golang:1.19.5-alpine3.17", "79416a63c34ec7d28be9e2149805711c": "COPY . /go/src/cmd/", "b712800c61d0f136873890575df69357": "WORKDIR /go/src/cmd", "f795d668546239638023198f082b551b": "RUN go build -o main main.go", "3e25c00a2b2e0ada4dbee061ce54858e": "RUN apk add nodejs", "29a24b874ae85954bb199ac0d1f97c15": "RUN apk add npm", "81ba86d4d94a438f8852e2437fdaa2a9": "CMD ./main", "8bc7f06646500469baa06f5ca8ef642f": "FROM golang:1.18 AS build", "c4b21371dd1f27cdd329bfb5a982d99d": "FROM alpine:3.14", "c0def06fc5fae5016186c0c13fdeb65f": "COPY /go/bin/crawlab /go/bin/", "52b8a917b5e3c1fab16657d6cc9c1ab4": "RUN go get -v -ldflags \"-X github.com/m-lab/go/prometheusx.GitShortCommit=$(git log -1 --format=%h)\" github.com/m-lab/pusher", "9613208edcbd5e5fcaa2bf3a10eac109": "RUN curl -LO https://kubernetes-helm.storage.googleapis.com/helm-v2.6.2-linux-amd64.tar.gz", "1cec5c0c5b4c551f464e3dc86de9880e": "RUN tar -xzvf helm-v2.6.2-linux-amd64.tar.gz", "3f23b1ce8a826681f3d9df72bc5f7507": "RUN helm plugin install https://github.com/hypnoglow/helm-s3.git", "bb7f8318ce3a78c310655c98c71d0db6": "RUN mkdir /main", "23c46878ece1ddb04e9df50c8b352361": "RUN chmod 777 /main", "2df5c9c97cb35555a907d8e0152a98ec": "COPY /go/bin/ze3000 /main/", "270562521a11abbbf4388e88a49feff8": "CMD [\"/main/ze3000\"]", "7c904db1e0898f648d077881d073b931": "WORKDIR /home/stephan/src/trigger-proxy/", "7cfdc272d4bd00784083cd52b3daf306": "COPY example.csv mapping.csv", "3fde1eaf3750955e70800d4b4832200d": "COPY /home/stephan/src/trigger-proxy/app .", "6831f8557904508e7792fcb8831225f2": "COPY /home/stephan/src/trigger-proxy/mapping.csv .", "8068bebc911d5364de2c8675bf35b7a7": "FROM golang:1.12.9-alpine3.9", "cd6e084d8694ee055551f0bf0a3c9832": "WORKDIR /root/goreleaser", "f58b4e6786c03eed4ca47b8d44092c06": "RUN apk --no-cache --update add bash curl less groff jq python py-pip", "bcb550297474d85b55870fffe9fbe88e": "RUN pip install --no-cache-dir --upgrade pip", "00127bbcaa18ddd1f73fa500ec6e172b": "RUN pip install --no-cache-dir awscli==1.16.240", "b0cfa6fd6d67c9cfc818e34ce384ba4a": "RUN mkdir /root/.aws", "66664f87e59bdb2f6997280dcc0acafd": "RUN aws --version", "7362fc0b6689b85d6dd5d4bcb99d591d": "RUN apk add --update coreutils bash", "581a7556e624fc859df72cc5304ea016": "COPY aws-cleaner.sh /scrypt/", "42ec2af7abf23d141b369be5e1835b35": "RUN chmod +x /scrypt/aws-cleaner.sh", "3617ba766e959f4689bf1fff821b638c": "CMD /bin/ash", "caa750b32df6d91e1e0a9fef904c3bed": "ADD . /go/provisionize/", "287699e7b43554e55f1fe06ce3023a52": "WORKDIR /go/provisionize/cmd/provisionize", "f5a081eb6ee2b35c0347b1235d2b1504": "RUN CGOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -a -installsuffix cgo -o /go/bin/provisionize", "edf5c90a18a8f50bbe07305f29586a55": "CMD ./provisionize --config=/config/config.yml --zipkin-endpoint=$ZipkinEndpoint", "42fff37d7496bb434c3e6b452dafbbc5": "ENV PROTOC_VERSION=\"3.12.3\"", "f162446cbb828e8f64d767ca9fa36617": "RUN apt-get install unzip", "7bdc5703397821c3e47a6b3e8be75f2b": "RUN curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOC_VERSION}/protoc-${PROTOC_VERSION}-linux-x86_64.zip", "504b2ad8905616d5a5e46205c9b306d7": "RUN unzip -o protoc-${PROTOC_VERSION}-linux-x86_64.zip -d /usr/local bin/protoc", "de410de26ffa7a8e6e52df199ddea02f": "RUN unzip -o protoc-${PROTOC_VERSION}-linux-x86_64.zip -d /usr/local include/*", "b6f14551ba9eded8c7ec0296ff194d11": "RUN rm -rf protoc-${PROTOC_VERSION}-linux-x86_64.zip", "1a1262990bdd45c556816c56eec50915": "RUN go get -u google.golang.org/protobuf/cmd/protoc-gen-go", "36baef25a00302ae0434b085cfed53a0": "RUN go get github.com/chrusty/protoc-gen-jsonschema/cmd/protoc-gen-jsonschema", "24690081d25f9c0a767095d5271100e2": "RUN mkdir /workdir", "66e1148c58ba4d51282c88c124f4511a": "COPY conf/", "0a714d47ba88595225fe2cfa417aaaa0": "COPY /go/src/github.com/mintel/dex-k8s-authenticator/bin/dex-k8s-authenticator /app/bin/", "f1f81254fc633c70a980aa0eca19d370": "COPY /go/src/github.com/mintel/dex-k8s-authenticator/html /app/", "a082f36a41b90dfca2310c84dc26a5ae": "COPY /go/src/github.com/mintel/dex-k8s-authenticator/templates /app/", "ed73b95d204cd659b547f15c8374c0e5": "RUN mkdir /user", "ed06ab569e9382ae8c5364e0a8c627b9": "RUN echo 'nobody:x:65534:65534:nobody:/:' > /user/passwd", "62b5751a5cb741c62b3fa60fb7eaf5bd": "RUN echo 'nobody:x:65534:' > /user/group", "e8897a12fda3f17be45f0923462ad898": "RUN apk add --no-cache ca-certificates git gcc musl-dev sqlite-libs", "6e6bd6c09b4e2fe11bb2232af650396a": "RUN sh /src/build/docker.sh", "e15bb3b09565baa40606da374a3ed165": "RUN apk add --no-cache sqlite-libs", "9786f2909efe0c1f9b1798c3f9c49996": "RUN mkdir /db", "9783f9447092dea4edab9770f8157d90": "RUN chmod 777 /db", "895abc7c9662fe077f465084b9e4c15e": "COPY /user/group /user/passwd /etc/", "407bca4c9f81086c6a2952be700c8948": "COPY /backuper /", "48d9278950d4327a0000670668fba913": "COPY /src/migrations /", "0c48390e7e99b62c7ef44f5cc65d665d": "COPY /src/config/backuper.example.yml /etc/backuper/backuper.yml", "16e55a5ef5cd0a61a6b894bb38c494e2": "VOLUME \"/db\"", "b877b1aad791ff1ff7b350e66b4309ac": "ENTRYPOINT [\"/backuper\"]", "4c1bf9915baf71475a33b5add11866bf": "ARG PORT=\":8082\"", "e57b7bd092221ce33f6aa75f96055481": "ENV PORT=\"${PORT}\"", "4ad947b0e835d856c27da3637733d01b": "ARG DBLINK=\"http://127.0.0.1:8083/add\"", "f201123ca5529a599fdc380fa7624cdd": "ENV DBLINK=\"${DBLINK}\"", "d0fe8c94e122b8f03ed2548719ee82ef": "RUN apk add --no-cache upx", "a3401618f9516f4aa63f1f43e75469ac": "RUN upx -9 /go/bin/irma_bot", "4daf667bc90de0ebd184ab818a94c901": "RUN apk add --no-cache make git gcc protobuf musl-dev", "3d0a3569062e69574fcfb36e2cc54cad": "RUN go get github.com/golang/protobuf/proto", "e28bc1491bf3fe2d97dae29ab6ef95b6": "RUN go get github.com/golang/protobuf/protoc-gen-go", "4624581f69d97016cb7f83a2a0385fee": "RUN go get github.com/micro/protoc-gen-micro", "bedc53d7511ce8abed3e55e290633cbf": "RUN go get github.com/micro/go-micro", "fe1583aa1885efa93ed84dfb2cb2b4b6": "RUN go get github.com/micro/micro", "595aecdc619a0f3670bf6326c31a3533": "RUN go get github.com/go-bindata/go-bindata/...", "ffc73e3aadfc950659ec072dcf176d79": "RUN GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go install -mod vendor -gcflags \"-N -l\" ./cmd/flares", "31c75a3083224236bcd64cd24b1ad0c7": "ENTRYPOINT [\"flares\"]", "ace6267015226e50f4025037d244077e": "RUN go get github.com/astaxie/beego", "92e473a98111cd93f99fcee30929ac5c": "RUN go get github.com/beego/bee", "582ccec510288de92d06f35c92409888": "RUN cd /go/src/github.com/beego/bee", "14c86f709a833fd7e6e1570e548b2bc5": "WORKDIR /go/src/github.com/Qihoo360/wayne/src/backend", "f0b1a0217e082b2d1b8f1b78a3a824b6": "ENV host=\"localhost\"", "493d6ffb0a7fed6b5cbd93477b38b403": "CMD [\"./plathome\",\"--host 0.0.0.0\"]", "15c5cd15467d9cf844d82115dbef3e77": "COPY ./scripts/entrypoint.sh /usr/local/bin/", "9fcf23080815ab934c07c6c7a37f3f5e": "ADD . /go/src/github.com/m-lab/nodeinfo", "87d0a3f04cad285d671ad2b69da7b071": "RUN go get -v github.com/m-lab/nodeinfo", "e364ae6dbb326ce0f9f7560534015d61": "RUN /nodeinfo -once", "255f014a589821a000017e6d2b2e5696": "ARG BASE=/go/src/github.com/chneau/serve", "e48613863ac005309581223521f5c1d8": "ARG BASE=\"\"", "260897fa7d6200e489973a4d54dadb4f": "ADD . $BASE", "faa87f12f3848ca2d80257503778e30c": "RUN cd $BASE", "23fcd26f8ff90dbe8c3fcc275214783e": "RUN CGO_ENABLED=0 go build -o /serve -ldflags '-s -w -extldflags \"-static\"'", "a43f95b7aad60e947af17d38a8c1aa6c": "FROM alpine AS prod-ready", "80cdb7a775149b9a885b3ec1fca890fe": "COPY /serve /", "c9e4cc56810c5f54513e66422c7e4ce7": "ENTRYPOINT [ \"/serve\" ]", "791e0fd0dff52a50867bd0fcf4305640": "RUN curl -L \"https://github.com/cky2005/goproxy/archive/server.php-go.tar.gz\" | gzip -d | tar xv", "66602cd169d6db3743cd1851b780e502": "RUN cd goproxy-server.php-go", "0baddf3340d6d6c6fbbf1764d52dfb13": "RUN env CGO_ENABLED=0 go build -v -ldflags=\"-s -w\" -o /goproxy-php", "e89cf1589604420561cb1da20d379d3f": "COPY /goproxy-php /", "de319bf13d81e7b3ff9459c5b97e56ac": "ENTRYPOINT /goproxy-php", "3af44160c5697e833ceeb98b9b1dfcc2": "CMD ./bioject -config-file=/config/config.yml -db-file=/config/routes.db -zipkin-endpoint=$ZipkinEndpoint", "6834c32f799bc80e1a7ca5e41994637a": "ENTRYPOINT [\"/app/bin/dex-k8s-authenticator\"]", "f3f3f2fc90a5eedafac022ae90f882b6": "LABEL UcbPods.version=\"0.0.9\" maintainer=\"Alex\"", "12661e0fb4a7e41ebb1bd155634aa2f2": "RUN git clone https://github.com/edenhill/librdkafka.git librdkafka", "121c057fdca48e9e900917ef2447ee7c": "RUN cd librdkafka", "1f27c6eade6187620b32666c93034221": "RUN sudo make install", "f0094afd4ab8a10f505e23aa194a2079": "ENV NTM_HOME=\"$GOPATH/src/github.com/PharbersDeveloper/UcbServiceDeploy/deploy-config\"", "388b649944e7d33222ee01eb37699ede": "RUN go get github.com/golang/lint/golint github.com/aws/aws-sdk-go github.com/aws/aws-dax-go github.com/antlr/antlr4/runtime/Go/antlr github.com/aws/aws-lambda-go/lambda github.com/awslabs/aws-lambda-go-api-proxy/handlerfunc github.com/aws/aws-xray-sdk-go/... github.com/stretchr/testify github.com/gusaul/go-dynamock go.uber.org/zap github.com/satori/go.uuid github.com/asaskevich/govalidator github.com/gomodule/redigo/redis github.com/rafaeljusto/redigomock github.com/hubcash/cards github.com/newrelic/go-agent github.com/reddotpay/awskms github.com/reddotpay/redis github.com/reddotpay/logger github.com/reddotpay/api github.com/gorilla/schema github.com/pariz/gountries golang.org/x/net/context/ctxhttp github.com/hashicorp/go-retryablehttp", "7c3c6d694899f850161c39f2e60bc2bb": "LABEL version=\"1.0.12\"", "474ed4d9d5560612c4ca9c06a5ce65ef": "RUN apk --update add git perl", "d7e532e41b91f70dea708a9f1b1dc517": "ADD . /go/src/github.com/trollbot", "99c235707863983b8f3a1c1cbe14fe9e": "WORKDIR /go/src/github.com/trollbot", "b83887d992db44511b30e68e2d2b6598": "RUN go build -a -ldflags '-s' -installsuffix cgo -o trollBot", "9dd348d794559061649ee81f7d032c32": "ENV SLACK_TOKEN=\"<change_me>\"", "ec92745f0bdcf98d9e9687e490257122": "COPY /go/src/github.com/trollbot/trollBot /app", "0c6e640b2d7d28560804f53e4b549e1c": "CMD [\"/app/trollBot\"]", "cd5e93bb897d28f1edfd8a1af943f3bc": "LABEL org.label-schema.build-date=$BUILD_DATE org.label-schema.vcs-url=\"https://github.com/mgvazquez/trollBot.git\" org.label-schema.vcs-ref=$BUILD_VCS_REF org.label-schema.version=$BUILD_VERSION com.microscaling.license=MIT", "1400ddea1f1f7e059ead8fceb19ca6ff": "RUN mv ./dist/* /client", "226d9ea89a7e98830199ffafd1de6662": "FROM golang:1.12.0-alpine3.9", "5ae9a19c12b9d90aaeb7a199293431b0": "ADD ./Dgraph /app", "8e056a39ea6b2ac50326b0b0cd89ef74": "COPY . /go/src/github.com/malice-plugins/mcafee", "3814a114b23695f644fcd82237d683b5": "WORKDIR /go/src/github.com/malice-plugins/mcafee", "0f0d8e77b3ddf5e988d5f980e4aa05b0": "LABEL malice.plugin.repository = \"https://github.com/malice-plugins/mcafee.git\"", "0d2bc195047afafb7d7f57132a463f19": "RUN apt-get install -yq ca-certificates curl --no-install-recommends", "e37cf9b8f6b9e6006e1742c0b6e3979f": "RUN echo \"===> Install McAfee...\"", "7c6b30af00f2c8ca4341558d7f9e1578": "RUN mkdir -p /usr/local/uvscan", "96770c75530e0ba6101352272558a355": "RUN curl http://b2b-download.mcafee.com/products/evaluation/vcl/l64/vscl-l64-604-e.tar.gz | tar -xzf - -C /usr/local/uvscan", "a604218e55d3d0813e999fa9dde92cd6": "RUN apt-get purge -y --auto-remove ca-certificates curl", "e0635348c126b7b5c89dbe8c938db750": "RUN apt-get install -yq --no-install-recommends ca-certificates wget unzip", "a22e47278d74e174b6ec9e464c352fe6": "COPY update.sh /usr/local/uvscan/update", "09a08c96eec7122fb819fba17dd88649": "RUN /usr/local/uvscan/update", "bccfa9adf03670e77216abf6bc7363ae": "COPY /opt/genesis/genesis /opt/genesis/bin/", "4feac95bb2ede724b2c8c57a4be1d10a": "ENTRYPOINT [\"/opt/genesis/bin/genesis\"]", "087ec10d07518c0ce6f40034eaddf40b": "FROM golang:1.14.2 as builder", "3b5d0facdce42e3be354a5825d793298": "ENV DOCKER_HOST=\"unix:///var/run/docker.sock\"", "4447bb3e2ff661a3bb0017378603d0cd": "COPY ./entrypoint.sh /scripts/", "c07bb561d3dbd08e8be036de5756bfcd": "RUN chmod a+x /scripts/entrypoint.sh", "0cd37de20ac764d75ae1694355a928a1": "ENTRYPOINT [\"/scripts/entrypoint.sh\"]", "b3dca5f296fa199dbcaccf4ec75b2e9b": "RUN useradd -u 1000 golang", "3fd686b065a3a211f22961de47482314": "ENV ZIPKIN_ENDPOINT=\"\"", "27732435abab7c081c4ae4b781deae33": "ENV DATA_PATH=\"/data\"", "fdae01df4f8c37193bb6087e64936777": "ENV CONFIG_PATH=\"/config\"", "bb41d2518fb97f99c9d7da5608ffb134": "CMD ./bioject -config-file=\"$CONFIG_PATH/config.yml\" -db-file=\"$DataPath/routes.db\" -zipkin-endpoint=$ZipkinEndpoint", "6f677b3832ca8b6faee64e35ab3787b4": "WORKDIR /go/src/moul.io/golang-repo-template", "6f9018bf4978bb0822ebe09092f27280": "COPY /go/bin/golang-repo-template /bin/", "fcae89f97dacbeb9feaca5acb9b4da74": "ENTRYPOINT [\"/bin/golang-repo-template\"]", "adf154a15ff59f8f28f9213b6b6ebeb8": "RUN CGO_ENABLED=0 go build ./cmd/rss-middleware", "2bf6a1792a75b0beb7420922874be84a": "COPY /rss-middleware/rss-middleware /rss-middleware/", "ae392814cd56d9a9c5536ecf94016e95": "ENTRYPOINT ./rss-middleware -rss $RSS -qbittorrent $QBITTORRENT -qbittorrent-username $QBITTORRENT_USERNAME -qbittorrent-password $QBITTORRENT_PASSWORD -config-path /data -cron=\"$CRON\"", "e53be71ebab4342808d9a5238f34e9d1": "FROM golang:l-alpine", "576bd51245bd15395a9488b528e48117": "RUN mv linux-amd64/helm /usr/bin/", "870594ac6a684e65d294fe13f51b4d88": "RUN rm -rf linux-amd64/", "d424d5e49d5836cdddc6e153e201f8bc": "ENV ADDR=\"0.0.0.0\"", "5dcbe4fcc12b60d68ed5fa0d907c4f61": "RUN curl --silent -L https://github.com/jedisct1/dnscrypt-proxy/releases/download/2.0.25/dnscrypt-proxy-linux_arm-2.0.25.tar.gz > dnscrypt-proxy-linux_arm.tar.gz", "a0c7703da0aed0f9d8b38201cef33259": "RUN tar -xzf dnscrypt-proxy-linux_arm.tar.gz", "38fe488ee97b65d64a5c3a674f43fdfb": "RUN mv linux-arm/dnscrypt-proxy $GOPATH/bin/dnscrypt-proxy", "ee3974ac3d5a684bbe2f69d45cec868a": "RUN rm -rf dnscrypt-proxy-linux_arm.tar.gz linux-arm", "8152b0d8b631b6f4514d0a48ab64b331": "WORKDIR /go/src/github.com/sstarcher/helm_exporter", "8b69a6a92d156d359f2cd78662c014b8": "COPY . /go/src/github.com/sstarcher/helm_exporter", "b9c84ce7e9e9c6322a230e3059a19667": "RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o /go/bin/helm_exporter /go/src/github.com/sstarcher/helm_exporter/main.go", "a8691e0cbcbcc5695ed66976f73c3c89": "COPY /go/bin/helm_exporter /usr/local/bin/", "880edabe72eceef623af59b8865c3b37": "ENTRYPOINT [\"helm_exporter\"]", "8a7b9eaef3b56616f75dcf377afc5b8c": "COPY /go/bin/slack-docker /", "a8cd72a3b48e40632dea279afef26b17": "CMD [\"/slack-docker\"]", "9dffdaa6cd453acd1dc61aaaf463c53d": "ENV SERVER_POLL_TIMEOUT=\"15s\"", "e7edb1f46aa148c791f0b999d1e2c82d": "COPY $GOPATH/src/github.com/ah8ad3/gateway/dist/gateway /app", "e11196c8c1bc9a439092154b5f23836f": "COPY $GOPATH/src/github.com/ah8ad3/gateway/entrypoint.sh /app", "7f6362ae90a7c1794aef459d2a048c1f": "RUN mkdir -p /etc/nginx", "f30bb1651265d6f04dced7b42146bb87": "RUN cd /etc/nginx", "3eed3aedd6e8e36805b4832d97e4ddf3": "RUN mkdir -p /etc/bot-blocker/bots.d /etc/bot-blocker/conf.d", "abd7932b5890c2938a306a05cae93bbf": "RUN ln -s /etc/bot-blocker/bots.d .", "3477ffb73853680b13be39b14cd2f817": "RUN ln -s /etc/bot-blocker/conf.d bots-conf.d", "0198e40ea20fb170d4afbfeecef69505": "RUN touch /etc/nginx/bots.d/blockbots.conf", "fb9d02e95856a890fc50a33aaa40bdff": "RUN touch /etc/nginx/bots.d/ddos.conf", "e13f93e0c6f1cdabd3b98ecc9469a72a": "COPY /app/app /usr/local/bin/docker-signal", "29cce68453c836ccf44e518a62a0a1d5": "COPY /docker/passwd /docker/group /etc/", "243b7ecc42cfe66ea9157c9fbc700f05": "COPY /docker/mime.types /etc/nginx/", "b5ec6e0f973844b109d5adc5e8f7342f": "COPY /nginx.conf /etc/nginx/", "09c5c3336bd464eeec5a71cc94de9876": "COPY /docker/default.conf /etc/nginx/conf.d/", "ff73253b18aed71de8dc357ee0a53e49": "COPY /docker/cron-acme /docker/cron-bot-blocker /docker/update-bot-blocker /docker/cron-rotate-log /docker/rotate-log /usr/local/bin/", "213e0180299875ab17084c9998437657": "RUN rm -rf /etc/apk /etc/shadow /etc/shells /etc/ssl /lib /usr/lib", "73cae7fb935629dd3355e712950fd856": "ARG NGINX_CONFIG=\"    --sbin-path=/nginx     --conf-path=/etc/nginx/nginx.conf     --pid-path=/tmp/nginx.pid     --http-log-path=/dev/stdout     --error-log-path=/dev/stdout     --http-client-body-temp-path=/tmp/client_temp     --http-proxy-temp-path=/tmp/proxy_temp     --http-fastcgi-temp-path=/tmp/fastcgi_temp     --http-uwsgi-temp-path=/tmp/uwsgi_temp     --http-scgi-temp-path=/tmp/scgi_temp     --with-file-aio     --with-http_ssl_module     --with-http_v2_module     --with-stream     --with-stream_ssl_module     --with-http_stub_status_module     --with-threads\"", "0d5bdebe9a6a5225209aa65ffb19be01": "RUN apk add --update --no-cache ca-certificates coreutils openssl pcre zlib libaio bash curl git", "c1d61ad6882a86dc8e3defe1cf51baca": "RUN apk add --update --no-cache --virtual .build-deps gnupg1 build-base openssl-dev pcre-dev zlib-dev libaio-dev linux-headers libcap curl", "5b9afa6d16d90b3268e42a48ffb2f5b0": "RUN ./configure $NGINX_CONFIG", "51b7ce9084989cb6f310a537ddd991d2": "RUN rm -rf /tmp/nginx", "3565fa18d9e0a84bee02afa8f375d588": "RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o kube-dns-checker .", "96467adab5c97ad3ad7cbc19916016b6": "CMD [\"./kube-dns-checker\"]", "8774115469ea0a2aeba34ae14d168b5f": "VOLUME [\"/go/src/app\"]", "b4f6a6e804d704c68bdaac6c76a765c3": "FROM golang:1.14-alpine AS build", "6b82864ee6e915b37ce4c8eaa7516fac": "LABEL maintainer=\"Sean Condon <sean@opennetworking.org>, Adib Rastegarnia <adib@opennetworking.org> \"", "25fa3a759a113c56ef2a0770880fa5a0": "LABEL description=\"Builds a gNMI/gNOI simulator on a Debian distribution\"", "a7136a96dd2bce0969c8a063b550394c": "RUN apk add --update bash openssl curl", "ab694d4899bf38c4193a9ef9c84ada05": "RUN apk add git iputils net-tools psmisc procps sudo", "2cdd4bca241cb3b5a00cf9e846c45332": "RUN mkdir -p $GOPATH", "d29fd08b470dd54a28f7c2713d082aa5": "RUN GO111MODULE=on go get -u github.com/google/gnxi/gnmi_capabilities@6697a080bc2d3287d9614501a3298b3dcfea06df github.com/google/gnxi/gnmi_get@6697a080bc2d3287d9614501a3298b3dcfea06df github.com/google/gnxi/gnmi_set@6697a080bc2d3287d9614501a3298b3dcfea06df github.com/openconfig/gnmi/cmd/gnmi_cli@89b2bf29312cda887da916d0f3a32c1624b7935f github.com/google/gnxi/gnoi_target@6697a080bc2d3287d9614501a3298b3dcfea06df github.com/google/gnxi/gnoi_cert@6697a080bc2d3287d9614501a3298b3dcfea06df", "1976ee4e0e9853e659ba43f34ab8e908": "ENV ONOS_SIMULATORS_ROOT=\"$GOPATH/src/github.com/onosproject/simulators\"", "536a29efe33143de33175b13a03f1eaa": "ENV GO111MODULE=\"off\"", "f76a82dc34665d8ad620fdb7958b5044": "RUN mkdir -p $ONOS_SIMULATORS_ROOT/", "0236d1caed511f2627e029694c9d3ff9": "RUN cd $GOPATH/src/github.com/onosproject/simulators", "1a84e9ef632ad567ad1c5d63053aaf49": "RUN GO111MODULE=on go get github.com/onosproject/simulators/cmd/gnmi_target", "0dec19ea2cbb318869b14828ed381e13": "ENV GNMI_PORT=\"10161\"", "bc7db384eb2be106a2aeaf1945642330": "ENV GNOI_PORT=\"50001\"", "029d7f11fa861d3328ee1fd32e3b4f33": "ENV SIM_MODE=\"1\"", "dbe6d10320bbbb5b414ec84ccaa3ea11": "ENV HOME=\"/home/devicesim\"", "cbceaaae45e052c90ffb1f80c49caccf": "RUN mkdir $HOME", "deb86b88ae4fd5eb6ea409ebce7b82e3": "WORKDIR $HOME", "f80b3ac7886d57e0a8665c62b523a6da": "COPY /go/bin/ /usr/local/bin", "61ff378003f4ed88db0d81013c08d4c0": "COPY configs/target_configs target_configs", "ec48bb7a8f2e8f0dca3806f12f08e7b5": "COPY tools/scripts scripts", "2657a7029b33eccce4ba2086ddac2bd5": "COPY pkg/certs certs", "f0e314ed3cffbaf24451889ac09d9033": "RUN chmod +x ./scripts/run_targets.sh", "3ea2d4bd1837d0c5e17cecf7a2f42bd9": "CMD [\"./scripts/run_targets.sh\"]", "2a7ab7f10ff78770995c7cb28f0a5f92": "RUN mcstatus -h", "f51aeb5831995b5ddf1db566ad6284ad": "COPY bin/static-server bin/", "47cef9e8b302494fcbafa8fb8fa4b314": "RUN apk add --no-cache neovim git ca-certificates python3", "e0f959cc192208aa2bd67e0d89d7158a": "RUN apk add --no-cache wget fontconfig", "5efc6ef0a990e0b1cd7eaf4935b778b9": "RUN mkdir -p $HOME/.fonts $HOME/.config/fontconfig/conf.d", "e405edac70f39a2bcb6b4f68005570f0": "RUN wget -P $HOME/.fonts https://github.com/Lokaltog/powerline/raw/develop/font/PowerlineSymbols.otf", "fd12ca08cefc2373ae2dccd44b2d3fe5": "RUN wget -P $HOME/.config/fontconfig/conf.d/ https://github.com/Lokaltog/powerline/raw/develop/font/10-powerline-symbols.conf", "f66126fbe2ce049b447e1a73f3a4bcda": "RUN fc-cache -vf $HOME/.fonts/", "21210a1b3c051459ffdc30a495bcf8e1": "RUN echo \"set guifont=Droid\\\\ Sans\\\\ Mono\\\\ 10\"", "61043ed9f9bb7c852940cd926c28a01c": "RUN apk del --purge wget fontconfig", "3b9e39dc91004e0785b8389672bb29dc": "COPY install-vim-plugins /tmp/", "f344ea331df9b9223d12c5f5c5cca8b9": "COPY . /go/src/github.com/weiqiang333/kube-admission-image", "206b5e2b2de7377a7d61e58b53c5a4bd": "WORKDIR /go/src/github.com/weiqiang333/kube-admission-image", "6ba79e943d3066d1fbf5089f0da601f0": "RUN adduser -h /app -D web", "c8c6a2973be59ae66e0cdca6f0a95e84": "COPY /go/src/github.com/weiqiang333/kube-admission-image/kube-admission-image /app/", "084b7efcce61c8b5580e8c9fee72ef2b": "RUN chown -R web:web *", "34ab26d00278fa69df3b75b9db752e5c": "USER web", "d2dbd1d1aa186b5e0314cfa5d5030d77": "ENTRYPOINT [\"./kube-admission-image\"]", "927f7dfc3c243f8f3ba87856fd3a9ad0": "WORKDIR /go/src/github.com/gempir/gempbotgo", "3d9b20e64c104b7a03c6227a01b28cb9": "RUN go get github.com/gempir/go-twitch-irc", "2a0288f2b3c59142f63c2bda285f5f3f": "RUN go get github.com/stretchr/testify/assert", "1ad87d779bec2b5f9b3608173120c2bf": "RUN go get github.com/op/go-logging", "29a3de2e187d87b8f95fd107b2604807": "COPY /go/src/github.com/gempir/gempbotgo/app .", "b86d4586ebf015e3c0ca7b014767e179": "WORKDIR /xlog", "e88c37b05170ba1b92f05577be6deb8a": "RUN go build -o xlog -installsuffix cgo ./cmd/xlog", "b7c680c5a905b63072a49950d5245bd1": "COPY /xlog/xlog /bin/", "b33cf79da25336480ed0f2714325476e": "CMD [\"xlog\"]", "06db2d04a2352f3ba271fade8931e50a": "COPY /app/kube-dns-checker .", "b9424b064174ebd2cfdf50b74f0652f7": "CMD [\"./talltale\", \"--allow-editor\"]", "9a34dd7528f976881fb004d63f5dae4f": "FROM golang:1.12.7 as builder", "92335d63c8e9cf99a732965bdc646347": "COPY main_test.go .", "170b31810a49e39563eca68dba8081b1": "RUN GOOS=linux go get github.com/stretchr/testify/assert", "eceb9a8ca7e2f0493b8b390bc308a85e": "RUN GOOS=linux go test", "1bb9997f84b44983ce29cc705af03573": "ENV PKGVER=\"1.1.2\"", "b97b4b76c69c936cb185f9dc75efe73b": "RUN apk --no-cache add --update gnupg build-base libevent libevent-dev libressl libressl-dev xz-libs xz-dev", "daf04e838c9df4457df7eda30741407c": "RUN apk --no-cache add --update libevent libressl xz-libs pwgen", "7d9d8f6ec782f5e63c2c29d09e39ba47": "RUN mkdir -p github.com/iguagile", "63298233d0b4d0e6a09c7952238255f0": "RUN cd github.com/iguagile", "3dde060435f13337863646ea4b8ab2f2": "RUN git clone https://github.com/iguagile/iguagile-engine.git", "a23b796fe70e35396411f1a2e2029978": "RUN cd ./iguagile-engine", "1f646f0bffb98b0c28188de2317935b1": "RUN GOOS=linux CGO_ENABLED=0 go build -a -o out cmd/sample-1/main.go", "bcfb7248be928b2bcf9c5fd492105b10": "ENTRYPOINT [\"./hub\"]", "c3e27d851552939510adc4439d8ff45e": "FROM golang:1.11-alpine3.8 as build", "48c00ca353c0cfa95f9b046f5a1604bf": "ENV GATEWAY_NETWORKS=\"docker_gwbridge,bridge0\"", "0a7d03ae18d3a9c690983897dc75bf5e": "LABEL maintainer=\"Leon Jacobs <leonja511@gmail.com>\"", "40e757522a10aa607e5afd77a0b855d4": "RUN go build -o trauth", "addd81273171a91f62db68bda4b1a875": "COPY /src/trauth /", "476e321860b5a079dd00390a87d4dc91": "ENTRYPOINT [\"/trauth\"]", "283823d7ceebe77f28b5e72d1d1717a9": "COPY ./assets/build/app.go .", "16e914c4c4925295d0da9fe8ed2ddf88": "COPY ./assets/run/example.csv mapping.csv", "577dcd7a09fa97d444d6ef1707c402e0": "RUN apt-get install -y -f vim apt-utils git build-essential flex bison libgmp-dev libssl-dev cmake net-tools gcc libsnappy-dev zlib1g-dev libbz2-dev liblz4-dev libzstd-dev", "34c2d3a97899203923fdb52c539dc308": "RUN git clone https://github.com/yydfjt/docker-mefs.git", "ddc3df5400d999bfc7b1c11df36605e3": "RUN cd docker-mefs", "63124aa88fe6a23cc6a965d644b9c828": "RUN apt-get install -y --no-install-recommends git curl tree wget entr tmux ca-certificates nmap python-dev python3 python3-dev python3-pip ipython3 cmake libncurses5-dev apt-utils fontconfig fonts-powerline less bsdmainutils", "832eb41d861d6269dcc4c42db1b65b0e": "RUN go get github.com/gohugoio/hugo", "aa4da25364d074f40f2c5aef3aafaef8": "RUN go get github.com/cespare/reflex", "70054ae0246825bbc200eef0000ad9bb": "RUN go build -o /bin/telescopes ./cmd/telescopes", "aa03d7b1c40f21ec9d34e448f0d19d6d": "COPY /bin/telescopes /bin", "7e74e136f536883ee8d85f6a6f3fea0b": "RUN git checkout bd106408462ecef70debf51f1e6179de950c5812", "6f6d0b94cd57da05e048d791a6fa489e": "RUN go get github.com/kataras/iris", "f6cba552865cbfb459ec71a8df0becce": "RUN go get github.com/iris-contrib/middleware/cors", "c7f6cba16572fe581e56c913c7db651b": "RUN go get github.com/minio/minio/pkg/madmin", "c2612fd46dfd1392d6881a41d724c8f8": "RUN go get github.com/minio/minio-go/v6", "09d1c6fa0cda57fcbad6a6dbbb104c4b": "RUN sudo ./make.sh install", "9229690118827db26979ac99aca350f4": "COPY /go/bin/mondash /usr/local/bin/", "0c453ad146289fce98f3d32ead49f328": "ENTRYPOINT [\"/usr/local/bin/mondash\"]", "cb8aeb322033a68e8949a2f832fd414e": "ENTRYPOINT ./gindoid --debug --target=/doidata --templates=/tmpl --key=$tokenkey --port=10443", "4b68d9bd7966f99f92645e119925236f": "ARG ONOS_BUILD_VERSION=stable", "36c7c367b89bf5061aba7301603b0538": "RUN apt install -y make", "3fc65130410d0ef7ba0f0f5312a4999b": "RUN apk add git gcc libc-dev linux-headers", "256a488a41a2a3ca8d04b9e8632dcb9f": "LABEL UcbPods.version=\"0.0.16\" maintainer=\"Alex\"", "326b63d670af350bb5d84742776a5c72": "ENV DESIRED_VERSION=\"v3.0.3\"", "03a40b91202b0d6766b0deeed59927eb": "ENV HELM_DIFF_VERSION=\"v3.0.0-rc.7\"", "8052e2bd474530cf059e4e6e5707e48b": "RUN apk add --update openssl", "cb46a318a4233153d0bfaa21087c9934": "RUN apk add bash git openssh", "269c8d5cdc28b09267b9fab7db72cdea": "RUN wget -O get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3", "f08c2d7341f5a5c0166ecc43dbd10a8d": "RUN chmod +x get_helm.sh", "558d6512e23f4338163e69a8857532b6": "RUN ./get_helm.sh", "9dfd91a409bb2a192c18d76e889717ac": "RUN /usr/local/bin/helm plugin install https://github.com/databus23/helm-diff --version ${HELM_DIFF_VERSION}", "f635715531c8ceece6ac572f6e96bf53": "ENV KUBECTL_VERSION=\"v1.15.9\"", "b3a920a240fa2ea1bbafdb475d80767b": "COPY /usr/local/bin/helm /usr/local/bin/", "6692f5c70652f98b361d496b83ac98f3": "COPY /root/.local /root/", "b3312df545ad2bf6b2441d746f15a5fb": "COPY /root/.cache /root/", "4a6fea55f7b9b97a8733a3ba9ec9f86c": "FROM golang:alpine as reboot-api-build", "15dfd043ebc3bc4ab38a2a6e3f2219a8": "RUN /go/src/github.com/m-lab/reboot-service/build.sh", "7ba06c060e811235e4324008536cbdaa": "RUN git config --global user.email \"flares@github.com\"", "12ae5d70939f7c609373748c8dc81c3a": "RUN git config --global user.name \"Flares\"", "dfbf9475181abe05326f8d4b6913ac7e": "COPY /build/.env /usr/local/bin/", "b5bb4c6fc28712c88a0859776f8a5ac4": "WORKDIR $GOPATH/src/github.com/anderskvist/GoMQTT2Influx", "1b187d63b4572b270ec85824cf30a886": "CMD [\"GoMQTT2Influx\",\"/config.ini\"]", "9b169b40a73c422a04c398cd327c4906": "RUN mkdir -p /go/src/github.com/marqub/resiproxy/", "02047fb8422e95410220d45ce8e633d0": "WORKDIR /go/src/github.com/marqub/resiproxy/", "7bd625faa291686a73267f5dd7314e9f": "RUN make requirements", "dac496261a8e7ac3ba5707a2d5ae068a": "FROM alpine:latest as certs", "af7f87f5cf05009724fd46b0873bf6fb": "ENV PATH=\"/bin\"", "ef74f2c966fb4f2fb970bd14d79237df": "FROM debian:latest", "59489b8de36daafb760d20f686c4a5ae": "RUN apt-get -y install youtube-dl curl", "25ee6c5df37461bf5f6ad23f75ccff20": "RUN apk add --update git python3 python3-dev py3-pip build-base zip", "6b6ef32049bd45fb2722a134bbf76f28": "ENV TROJAN_URL=\"https://github.com/trojan-gfw/trojan/releases/download/v1.14.0/trojan-1.14.0-linux-amd64.tar.xz\"", "b53e1b047538e3beb9a586257f0fd095": "RUN wget ${TROJAN_URL}", "8ab4667176d19b420dc54a5802f42c2f": "RUN apt-get install xz-utils", "47de8cba0e286e87f9b29546f7fcb3a5": "RUN xz *.xz", "cfcb8609b5a352ef8fd3fcdaa5c6b2c7": "RUN tar -xvf *.tar", "11e11bdfdf61d71a107f398f2f33ef33": "RUN cp -f trojan/trojan trojan_server", "f89fd84fb6ddd9a794eded6329e0dde6": "COPY /go/bin/trojan_server /usr/local/sbin/trojan", "e04a3ab67aa59edde8e01ff674d702fd": "RUN cp -rf script/trojan_server.json /etc/", "ceea69da47053ecabc6b0efedd71f1ee": "RUN cp -rf script/trojanConsole /usr/local/sbin/", "66ab149c8295955dff7f2fc208865224": "RUN chmod a+x /usr/local/sbin/kcptunConsole /usr/local/sbin/shadowsocksRConsole /usr/local/sbin/brookConsole /usr/local/sbin/trojanConsole /usr/local/sbin/shadowsocksLibevConsole", "6cb4279bc9f8929da909000f77aec9a9": "WORKDIR /go/src/git.codecoop.org/systemli/ticker", "cdd5d832010cc6bb01fa33afae623674": "ADD . /go/src/git.codecoop.org/systemli/ticker", "0895d2319949a4de537fd55eefdab5d5": "ARG NGINX_VERSION=\"1.17.4\"", "732be43bccf157b953c7f0d39570d240": "COPY /go/src/github.com/toyo/epsp/cmd/p2pquake/html/635.html ./html/", "c75c0722464c7dc6083ad9dab10e9da4": "FROM golang:1.12.5-alpine3.9 AS apibuilder", "7a3ac99f1f58f85358a68cf5ac97e7cb": "FROM node:10.15.3-alpine AS frontendbuilder", "43181f467ee9b2377aa34c6e8b1bbaf0": "RUN ls -lah", "b0caf2f952cc5a7d0044c62198d2eb52": "RUN chmod a+x ./rtlamr*", "d2c496e253f4661b4ea20be004cef190": "RUN cd bin", "6045f5145871d914cfdafc2e01ea026e": "CMD [\"./rtlamr -server=$RTLSERVER | ./rtlamr-collect\"]", "5f719ae0584c70060a75a98b00608b0b": "COPY httptest.go /usr/local/bin/", "31ed91a2f37a4a24e925a5ad6d6e6f20": "RUN go build -o /usr/local/bin/httptest /usr/local/bin/httptest.go", "d2c05b249d2f625710afd07917f108ea": "ENTRYPOINT [\"/usr/local/bin/httptest\"]", "e2a262838ab7fa904434ccedea68af2d": "WORKDIR /go/src/github.com/gregbuehler/waypost", "5c42fc90c45bddd80308435ed2c24f3f": "RUN cd /go/src/github.com/gregbuehler/waypost", "e1bcb52f6eaba8e961ecd23060847f16": "RUN CGO_ENABLED=0 GOOS=linux make compile", "68904db56d0d0bc3aabc158ffc97ecab": "COPY go/src/github.com/gregbuehler/waypost/bin/waypost .", "a4662e842fb4e802b7fe0a6cec81fed7": "EXPOSE 53", "d24f5ab41964501b4f23ce9d85d5c998": "EXPOSE 5554", "bb4b253ecefa1802cb20191bd375b808": "ENTRYPOINT [ \"./waypost\" ]", "3f2a8e6c722934ed18af9b31b1a8683b": "CMD [ \"serve\"]", "7ed8c12a943fe34da115825cc0a30b77": "ADD https://raw.githubusercontent.com/OpenChirp/oc/master/configexamples/localhost-occonfig.toml /etc/occonfig.toml", "2cc32c31a5229fa21a3f52fdfafd7f03": "HEALTHCHECK CMD oc check -c || exit 1", "81058c39d5033146e5313d5d2790d4bf": "COPY /go/app/stargate /usr/local/bin/", "9de58ad2c6663ded4fc9bce6b7bf6903": "ENTRYPOINT [\"stargate\"]", "a1bbac672b17b2ad84ff2fbe2211e6ad": "CMD [\"./app --config=/etc/justlog.json\"]", "0556bbd120eec6fa0e86571b19f78f03": "FROM golang:1.12.4-stretch as builder", "a23de3f27fe7e23c016aa39e4dcaada0": "COPY . /ipwhois", "474da6cf772916b6a972ce4451f8a62a": "WORKDIR /ipwhois", "c2c26480ed750640b317f7f2fc33b96f": "RUN CGO_ENABLED=0 GOOS=linux go build -o ipwhois", "c0aa0923248097ad61c5fd1bc8f42fbb": "COPY /ipwhois .", "1de2ec46ae0d10e54bbb9ae73532519a": "CMD [\"./ipwhois\"]", "c93dc5e342575e1e01f54ec5974d2415": "WORKDIR $GOPATH/src/project_user-management_ms", "2e51f32ac652de7ab5de8c71832c6d7a": "COPY main.go /usr/src/telegram-gateway/", "1a135d0376a188b1ce9678118b375fb8": "COPY go.mod /usr/src/telegram-gateway/", "1a3b169d1e4e517b6f53d19f86c2225a": "COPY go.sum /usr/src/telegram-gateway/", "8d07069130241162d9c6296c233ed9ee": "RUN cd /usr/src/telegram-gateway", "aabaa9300e1de1e9ee4e332b6e243735": "RUN go build -v -o telegram-gateway -ldflags \"-X main.buildTime=$(date +\"%Y%m%d%H%M%S\")\"", "319ff891401ab2c6b699fa34b12fd977": "COPY /usr/src/telegram-gateway/telegram-gateway /usr/local/bin/", "0f97e44a2d018b972b7068ac04ee86b9": "CMD telegram-gateway", "4a23c34985cfba055b0993c7e7472dfa": "RUN cp /source/entrypoint.sh /entrypoint.sh", "dac1837709101ee0fec9f27fe09291b9": "RUN go build -o /usr/local/bin/golangci-linter", "7c3809aec3e4fe66baced1d6f90d31f1": "ARG PGVERSION=\"\"", "66d5903c643d14c07e4598cc30346103": "FROM golang:1.16-buster AS build_base", "2af201142340415d7094181e7fca2422": "WORKDIR /stolon", "0fde91fd7795b5c33f46c729488ca357": "FROM postgres:$PGVERSION", "f2b8dca7931d3f931a0c62556d9d9757": "RUN useradd -ms /bin/bash stolon", "c45ece7c69735ea1534d9acd63144ab3": "EXPOSE 5432", "73ecfed464de894f4e3a49af89cc0488": "COPY /stolon/bin/ /usr/local/bin", "e6f7f91ef41e2de3fa1730794d523ab8": "RUN chmod +x /usr/local/bin/stolon-keeper /usr/local/bin/stolon-sentinel /usr/local/bin/stolon-proxy /usr/local/bin/stolonctl", "f7549045867fed1e6273e78ea52b0bba": "RUN git clone https://github.com/yydfjt/docker-mefs-env.git", "f06c4f44da59527d9cd2a03478b30bf1": "RUN cd docker-mefs-env", "74cf62c6b660846139a87afd5e114e08": "COPY /src/static/* /static/", "bc4c26cc09dbfc6de3c0044805335117": "COPY /src/templates/* /templates/", "b5d15b76b92db338377be6862df98362": "RUN apk add bash", "78ba572cc615485663e567133c78e0d8": "FROM golang:1.16-alpine3.13 AS builder", "60d0978764cd39e0c6822e08f65665fc": "WORKDIR /go/src/github.com/golang-migrate/migrate", "d8b59bae31062e6e4c73d4603ca01db3": "RUN make build-docker", "2dbb7e21cd53047bc4a4c7d1caffa1db": "FROM alpine:3.13", "d8b53f48fedb339b642540cc6c44c280": "COPY /go/src/github.com/golang-migrate/migrate/build/migrate.linux-386 /usr/local/bin/migrate", "f8910316e6c9f96328a9b36b2d7ae9a8": "RUN ln -s /usr/local/bin/migrate /migrate", "af343b894151c0052f59217993d1c761": "ENTRYPOINT [\"migrate\"]", "d9c5daba32a92c9837a8fe8ef6788b8b": "RUN ./runtests.sh", "f50d7a75c5f7cf6c6bacc2a8732dc223": "COPY /go/src/panopticon/panopticon .", "66648fb41b17304d70502c73541ed3f1": "COPY ./docker-start.sh .", "4d6d43df8060456d0cf46dabb8d16e90": "CMD [\"/root/docker-start.sh\"]", "455c46ee93c5621604a16bfb0c6a088e": "RUN go get -u github.com/tomnomnom/unfurl; exit 0", "7c915ee01d4ef8996f945eee9e77d5b7": "RUN apt-get install -y --no-install-recommends --no-install-suggests libcurl4-openssl-dev libssl-dev jq ruby-full libcurl4-openssl-dev libxml2 libxml2-dev libxslt1-dev ruby-dev build-essential libgmp-dev zlib1g-dev libssl-dev libffi-dev python-dev python-setuptools libldns-dev python3-pip python-pip python-dnspython git rename nmap wget curl chromium-browser locales dnsutils", "ae50ad0960a8f95a94d20389862fcaad": "RUN addgroup --gid 1000 lazyrecon_user", "f6eea01b1416e33f39c578082ef649a8": "RUN adduser --uid 1000 --ingroup lazyrecon_user --home /home/lazyrecon_user --shell /bin/bash --disabled-password --gecos \"\" lazyrecon_user", "3971d0cf47a9aa1a30340fedae43853d": "COPY /go/bin/unfurl /bin/", "6fa465b623ac5e3bef2c72bc5fa790cc": "RUN chown -R lazyrecon_user:lazyrecon_user $HOME", "1e6a30900769edeec8607fcf64cf49ae": "RUN chown -R lazyrecon_user:lazyrecon_user /usr/local/lib/python3.6/dist-packages/tldextract/", "c8331e8d997cc4cddec95ac742c09fb4": "RUN USER=lazyrecon_user", "9ec389f43da4a49b1c3423688eae5076": "RUN GROUP=lazyrecon_user", "81c4f618d8be249f2a52cc7a799e6d79": "RUN curl -SsL https://github.com/boxboat/fixuid/releases/download/v0.4/fixuid-0.4-linux-amd64.tar.gz | tar -C /usr/local/bin -xzf -", "05d1743e96898165b733cfd235d9c18c": "RUN chown root:root /usr/local/bin/fixuid", "9daca4e4b7de05aa363d1e4a1694b9e9": "RUN chmod 4755 /usr/local/bin/fixuid", "8e9c58ab1c70b650b6f9b52d1227fa88": "RUN mkdir -p /etc/fixuid", "c6f63a0ed2d440a14b01e857f07a1c99": "RUN printf \"user: $USER\\ngroup: $GROUP\\npaths: \\n - /\\n - $TOOLS/lazyrecon/lazyrecon_results\\n\" > /etc/fixuid/config.yml", "356086de2f276f99b4cf654e3fabafc7": "USER lazyrecon_user:lazyrecon_user", "a6fcbdb0bb54ef7793f0928143c6dbf0": "RUN printf 'CHROMIUM_FLAGS=\"--no-sandbox --headless\"\\n' > $HOME/.chromium-browser.init", "e119e18e1cc2bb3d65f67eb21ab96917": "ENTRYPOINT [\"fixuid\", \"bash\", \"./lazyrecon.sh\"]", "99c342eea5383f329ea7f2a03415a4f3": "ENV MAIL=\"email@example.com\"", "9aa573ee665dec5b89824311bb48233f": "ENV SCEN=\"onlyLOG\"", "c978d2159d1e280648bcdcfb91c62fe1": "CMD /app/sakura_bot -e ${MAIL} -p ${PASS} -s ${SCEN}", "5d04b92ff552c358bce11a8c88209611": "COPY ./go.mod /app/", "ebe347c066061c22714c7998027e098f": "COPY ./go.sum /app/", "e685d7be136c28325888787de5cad0fe": "RUN go build ./cmd/discriminator", "a615de006623808c22efeb36fec4f71f": "ENV DISCRIMINATOR_TEMPLATES_PATH=\"/templates\"", "b67a1da21bb088c30c5783492f2d2ded": "ENV DISCRIMINATOR_TEMPLATES_EXTENSION=\".tmpl\"", "efffb2888f1400a0adc1a7739d89b44f": "ENV DISCRIMINATOR_CONTAINERS_LABEL=\"io.sidus.discriminator\"", "33816ecab5225ee89851f15d4b116ca0": "ENV DISCRIMINATOR_INCLUDE_STOPPED_CONTAINERS=\"false\"", "7665813965199ffff9922c5d4936b01c": "ENV DISCRIMINATOR_RUN_INTERVAL=\"5m\"", "a3c56f46de79de942f3a1ef1d9bac6e0": "ENV DISCRIMINATOR_LOG_LEVEL=\"info\"", "7da60d6048a4360f7a56badf2d93faab": "ENV DISCRIMINATOR_LOG_FORMAT=\"text\"", "a4f6ee2276f0693d865a20da8cc96902": "COPY /app/discriminator /", "8b2889d7f9ff15d0adad5e7b4b1b51a2": "ENTRYPOINT [\"/discriminator\"]", "989d4e90272d59a13e3a03670d268b03": "CMD [\"/opt/caddy\", \"-conf=/app/Caddyfile\"]", "137cf9313a152d011143acaec680c30d": "ENV TERRATEST_LOG_PARSER_VERSION=\"v0.13.13\"", "0840f80fb0df3e73e6968b3edecae920": "RUN apk add --update -t deps wget git bzr openssl bash", "9350e5659fa7088c6ded22c3c3296d89": "RUN wget -q -O /usr/local/bin/terratest_log_parser https://github.com/gruntwork-io/terratest/releases/download/${TERRATEST_LOG_PARSER_VERSION}/terratest_log_parser_linux_amd64", "c55f8bd9b9e63690e1a6bdc0e83534d6": "RUN chmod +x /usr/local/bin/terratest_log_parser", "cab4db6660cd8006079121dca6c67400": "COPY go.mod go.sum /app/", "3cbe38107862ef41c197512859ed36e2": "COPY test /app/", "5c02f68329f53884530953a067dcbd27": "CMD [\"./test/...\"]", "6da5394ec80feb079580f45c41f47da5": "RUN apt-get install -y --no-install-recommends --no-install-suggests libcurl4-openssl-dev libssl-dev jq ruby-full libcurl4-openssl-dev libxml2 libxml2-dev libxslt1-dev ruby-dev build-essential libgmp-dev zlib1g-dev libssl-dev libffi-dev python-dev python-setuptools libldns-dev python3-pip python-pip python-dnspython git rename nmap wget chromium-browser locales", "ccabcbd57bf15d008262627082ba4bd2": "RUN git clone https://github.com/soaringswine/lazyrecon.git", "94e46f617182050d8fe1e74017c31678": "RUN go build --mod=vendor --tags=\"release\" ngrok/main/ngrok", "0167007bf63bb80216a0edf1d2f9cf80": "COPY /app/ngrok .", "cb0a457b62d0ad16c57922c421056d77": "ADD client_start.sh .", "3379a743a3f25dea6e5e595627b0f99b": "CMD [\"./client_start.sh\"]", "50809bd58468cf70cb6260118fd3b5bd": "ARG GOLANG_BUILDER_VERSION=alpine", "8812a4bcf4602b6805ce230b328e4a97": "RUN adduser -D -g '' putiuser", "9f49c48a8725ae3b99f9dcd13c77cc47": "WORKDIR /app/puti", "53625f8712f4b292de9e3627e8c8c9ce": "COPY /puti/puti puti", "7a0c8630146ab5ba9f703d520a106d6a": "COPY /puti/console console", "19f3ec138b8e129ab47af9e122bfad49": "COPY /puti/assets assets", "89eca373a49abe2a96f15a6a7cd7a2a2": "COPY /puti/configs configs", "1983c330c245f4fa44fc24781f3b2271": "COPY /puti/theme theme", "14f26d849e19648beb3685ea101455c1": "COPY /puti/uploads uploads", "42d32b0e6203763f0695a378b5be283c": "COPY /puti/scripts/docker/docker-entrypoint.sh /usr/local/bin/", "8f0c7e2554516f856537aebb3f3de454": "RUN ln -s usr/local/bin/docker-entrypoint.sh /", "978472c12f92578743de36dcea11c353": "USER putiuser", "8c9aa92340fb65a086f0ca691ff100e3": "RUN curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.23.8", "a0bc8399bfb569658f7b72381b5da3b4": "ENV APP=\"github.com/fujiwaram/gopherTranslator\"", "e844d29ad667ed0cedbc5d46f30b702e": "ARG HOST=\"0.0.0.0\"", "875167fda07fa7a79b673944613f125d": "FROM alpine:latest as runtime", "bdf04dd19fe5ac253ab304465b3024b9": "CMD [\"./cli\"]", "f62a79559d21a797c19312a95e155c34": "FROM golang:1.12.9", "f9b8ee777f8d654ed1b721bd275d6616": "RUN git clone https://github.com/syncthing/syncthing /go/src/github.com/syncthing/syncthing", "8d9595ef4ae94a67d97decbb9b4370ca": "RUN git checkout tags/v0.14.45", "93acdad567a31e9ddb9d624b7a29641a": "RUN rm -f syncthing", "1e00aaf8e0193edff2d2d4d9978064c6": "RUN go build -o absol -v github.com/lordralex/absol/core", "a5262ccbc2a97af1bc88c2c3c6cbd47b": "COPY /build/absol /go/bin/", "7a1dd92bb17cc7994e251370c6248a4c": "ENTRYPOINT [\"/go/bin/absol\"]", "cc3fe7510c85113994fc21542d482a60": "CMD [\"alert\", \"cleaner\", \"factoids\", \"log\", \"twitch\"]", "bf71aa2539f8064fe7441ed1c68b0bdf": "ARG TOAD_VERSION=0.1.1", "3b0994a8b9678b342b5dcc8dd856ac30": "ENV GO111MODULE=\"on\" GOPROXY=\"https://goproxy.io\"", "bc351c5d0ab3654219c139a2bca19f87": "CMD /go/bin/clawiod -conf /go/src/github.com/clawio/clawiod/etc/clawiod.conf", "251fb7daa9619ddce5d9550031d23b00": "FROM golang:1.14-alpine3.11 as gcsfuse-builder", "821114902024c2cf502d4a5fce61601a": "RUN apk add --update --no-cache git", "f8f46305905f9723708149c400641e90": "RUN go get -v github.com/googlecloudplatform/gcsfuse", "32f4161c4fd047bb4f7467b4523dcea2": "RUN apk add --update --no-cache fuse ca-certificates", "a6550ef075b85fdd1dfb8a83cd0ac69c": "RUN apk add unison", "d15a32095555017db20fcfca7bd21cff": "RUN mkdir /gcs-mount", "8f2c7619ac27e65ef0c13dd0c910e1e0": "RUN mkdir /bucket-share", "e70c0e29cb6116e58f35d59c74ba7b43": "COPY /go/bin/gcsfuse /usr/local/bin/", "5d577502fc77281220c7f00c05608080": "COPY run.sh /app", "dbf96d110df5ea784b0c50ceab45154b": "CMD [\"./run.sh\"]", "e031076dfedb537d74ccde0defb9df18": "RUN mv ~/dotfiles/xterm-256color-italic.terminfo ~/", "0395d0204eb242064c96c3bc83961300": "RUN tic ~/xterm-256color-italic.terminfo", "7aff4389ff293cef8ef2dd663ed3bec4": "ENV LANG=\"C.UTF-8\" LC_ALL=\"C.UTF-8\" TERM=\"xterm-256color-italic\" NAME=\"nicobraun\" USER=\"bluebrown\" EMAIL=\"nico-braun@live.de\" TASKRC=\"~/dotfiles/taskrc\"", "b2c5f6acebcc61abedf473473664a9be": "FROM golang:1.12.1-alpine3.9", "2ed6cca36e07de544f5a6197c850a826": "COPY /go-fluentd/main go-graphql-srv", "308d366236ee7f4e0a89d9b0c5549638": "ENV GOPROXY=\"https://goproxy.cn\"", "24e2d099a2c416219e87599e4aaf4e2a": "ENV NEBULA_IMPORTER=\"/home/nebula-importer\"", "c6188f04ae25e34756b00bc391fa8bdf": "COPY . ${NEBULA_IMPORTER}", "82ef0868d1d368f9e6a8c9f258bd5474": "WORKDIR ${NEBULA_IMPORTER}", "287c2eb7e6ac3ccdae4b3301e1c89499": "RUN go build -o target/nebula-importer .", "f05e71d713ec3ba28b2e807475220d7d": "RUN cp target/nebula-importer /usr/local/bin/nebula-importer", "a48b3be83ba0979a86f2ea65d596df85": "COPY /usr/local/bin/nebula-importer /usr/local/bin/", "a1b8423cf1c30d183e788104076e2120": "ENTRYPOINT [\"nebula-importer\"]", "4d41e81968ebb71eaa2888eb26b900a1": "FROM golang:1-alpine as gcsfuse-build", "9b5052c605a7b1814bc24651aade299d": "RUN go get github.com/googlecloudplatform/gcsfuse", "459ef49a0cd50e1d97dedc4c0fd73e0e": "RUN chmod +x /go/bin/gcsfuse", "9e214069dd05e75f023e8c7f74c8fe95": "RUN apk add --no-cache python3 fuse", "f9653940e6afc7ab5552649549e32f00": "RUN ln -s /usr/bin/python3 /bin/python", "c2159e94128b052ddb6cfc257f7d6bbc": "RUN pip3 install pipenv --upgrade", "d1795e90cffaa0713b5be1ac2e1bcf7c": "COPY *.py /app/", "547cdf41094c8198a25dc9d8126be833": "COPY Pipfile /app/", "ff23945193d3e7a297e845a635a3a725": "VOLUME /app/sqls", "c010b930da01ac218f50a387ee41e231": "RUN pipenv install --system", "543b6de2a109950508b76e2bdeed1421": "ARG db_driver=\"\"", "da9e8432b4e82519c4d760285e7f648e": "RUN if [ \"$db_driver\" = \"postgres\" ]; then apk add --no-cache py3-psycopg2; fi", "105a35678f79c02032d0ddd0a05444ca": "RUN if [ \"$db_driver\" = \"mysql\" ]; then pipenv install --system pymysql; fi", "34b53738b4815559e98a99980e14f37a": "CMD gunicorn -b 0.0.0.0:8081 nerium:app --log-file=-", "42ee2f0d21b616d2587ba15f781f0836": "RUN make vendor lint", "bbb870edc3a7fca27af3b049e8ffe474": "ENV TLS_PORT=\"9443\" LIFECYCLE_PORT=\"9000\" TLS_CERT_FILE=\"/var/lib/secrets/cert.crt\" TLS_KEY_FILE=\"/var/lib/secrets/cert.key\"", "b700cd5b905b347343de83dd192c2656": "COPY ./conf /", "c82f6d09fb6966efb37bc3764631c2ec": "CMD [\"indexer\"]", "ef7b2b2c121d07e92fba35c0db0dcdc2": "FROM golang:1.13.8-alpine3.10", "c6c92f5571b57e8e62a2588b643c5227": "ENV PROTOBUF_GIT_TAG=\"v1.3.3\"", "387e150a7039469cf9e28b0492637dad": "ENV PATH=\"$PATH:/go/bin\"", "9afa642c44c025c6850efcf328cc18b6": "RUN apk add --no-cache git curl unzip zip make ca-certificates protobuf", "7c08f749eb8480aaf2eda210e1568dec": "RUN go get -d -u github.com/golang/protobuf/protoc-gen-go", "f1d0a3193a59bcca6eda56ffa12a518b": "RUN git -C /go/src/github.com/golang/protobuf checkout $PROTOBUF_GIT_TAG", "20996a4e645cc3d106f0e301f34c2ccc": "RUN go install github.com/golang/protobuf/protoc-gen-go", "697b40887024dc4610b47ef2b84039f6": "RUN chown -R golang:golang /go", "5e3d9c33f7ef28d4c00643ff555857a6": "RUN npm install --global gatsby-cli", "2ac22cd3a05ec59577a9f96d27e01813": "RUN GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o webhook -ldflags '-s -w -extldflags \"-static\"' .", "e4b06a029042517be98e3832c9a31d77": "ENTRYPOINT [ \"webhook\" ]", "22c811147052d9e234d7aa5d15009810": "FROM golang:1.13.10-alpine3.10 AS build", "ef54d85fa9783f7598488f36d1e1dc23": "CMD ./bioject -config-file=/config/config.yml -db-file=/config/routes.db", "ffec31a6fa506fedd0efadf320efda87": "RUN curl --silent --location https://deb.nodesource.com/setup_10.x | bash -", "45ff783db8f684b7433f949e54d65d85": "RUN apt-get install -y -f vim apt-utils git build-essential flex bison libgmp-dev libssl-dev cmake nodejs net-tools expect", "de648f2ce948567f00b13991a1bd2e44": "RUN make -j 24", "7a75886856d9d7a3fbfbb5a09c835d9f": "RUN echo \"install mefs-test\"", "f106fa7e4173a640d3c9b8bc5dfc2a0b": "RUN echo \"mefs-http-api-test version 0.0.62\"", "069391030bae9b86350e7cea8d718b92": "RUN mkdir -p $GOPATH/mefs-http-api-test", "ab0d55087780e1526512f5df05d106db": "RUN cd $GOPATH/mefs-http-api-test", "4ba92281fa779569b3fb1678f6281b0d": "RUN npm install mefs-http-client", "cbb5c0267dcdce5d4601e00da0768780": "RUN echo \"download github.com/golang/mock/gomock ...\"", "5f7dfdf13a43d71cfa22edf42f583b4f": "RUN go get -u github.com/golang/mock/gomock", "e73f094faf1ef07717513f155820fe1d": "RUN echo \"download github.com/onsi/gomega ...\"", "11ca7c270c9fe21e65b474ad8f19b599": "RUN go get -u github.com/onsi/gomega", "ddc35a53c7942c32636f622fa6c462db": "RUN echo \"download gopkg.in/check.v1 ...\"", "ef72488e416e432e49429f18b81572b9": "RUN go get -u gopkg.in/check.v1", "1ee9d7c845284338ac1454c5d9544e48": "RUN echo \"download github.com/onsi/ginkgo ...\"", "63da4162c5dfd780bba9b0b8e5df014c": "RUN go get -u github.com/onsi/ginkgo", "e2ada73671358e6eddc91b31e7531193": "RUN echo \"download github.com/jbenet/go-cienv ...\"", "338cfbdc3fe99ed0b605acd3bae7e41f": "RUN go get -u github.com/jbenet/go-cienv", "bfabc4d5dc249d31b10c839b64421485": "RUN echo \"download gopkg.in/cheggaaa/pb.v1 ...\"", "6663b9feb47e1f472e21d471620374a0": "RUN go get -u gopkg.in/cheggaaa/pb.v1", "a79e97be48a273cebef4df794aca9de9": "RUN echo \"download github.com/lucas-clemente/quic-clients ...\"", "13ef344b1f08dc34be39ef7ff28f8b4c": "RUN go get -u github.com/lucas-clemente/quic-clients", "ea28966cd903c862566a1d0b46b866ed": "RUN echo \"download github.com/smartystreets/goconvey/convey ...\"", "b2abb6b392d5b206b4dddce25a7dc14a": "RUN go get -u github.com/smartystreets/goconvey/convey", "37dc55f9e20109b6941cab1254083e66": "RUN echo \"download github.com/warpfork/go-wish ...\"", "fb6c608e477b93aba7c969767f79ca6e": "RUN go get -u github.com/warpfork/go-wish", "101b1543de1e2679bb253e7d03d91d3a": "RUN echo \"download github.com/stretchr/testify/assert ...\"", "edacf137a5ca75168c4ba8da1de25f38": "RUN go get -u github.com/stretchr/testify/assert", "ef4a099c1a662d85ce061106fdebc814": "RUN echo \"download github.com/dustin/go-humanize ...\"", "fec1218654e091a08fa0e0e5eb5a69aa": "RUN go get -u github.com/dustin/go-humanize", "18325127ed3a4580e179570ef84e6729": "RUN wget https://github.com/nnao45/dntk/releases/download/vvvv1.0.12/dntk-linux-amd64-vvvv1.0.12.tar.gz", "bd11621700ed50eed368359617e9fe8d": "RUN tar xvfz dntk-linux-amd64-vvvv1.0.12.tar.gz", "092ea9d5ba1ddd06c596057a01247ebb": "RUN go get -u -v github.com/lixiangyun/goproxy_deploy", "7b55868066c4b6963b82728d1682992f": "WORKDIR /gopath/src/github.com/lixiangyun/goproxy_deploy/server", "176696a31106f769f2b7d43895389023": "COPY /gopath/src/github.com/lixiangyun/goproxy_deploy/server/server ./", "86b23374f9788ee9b47330fe9d7322b0": "RUN chmod +x *", "211827e40515aa1a43c936e26f8887c6": "WORKDIR /main", "8eaace3d498a7ba8364262ff1bf81500": "ENV VERSION=\"v0.14.1\"", "c53d3611247126955f0b54919a5e25fc": "RUN apk add --no-cache --update ca-certificates supervisor", "292f3a6a849aba8f3df4577cd37c914b": "HEALTHCHECK CMD [\"wget\",\"--output-document=-\",\"--quiet\",\"--tries=1\",\"http://127.0.0.1:5000/login\"]", "3678cc53e5b39208144a8f56b6faf655": "ARG GOLANGCI_LINT_VERSION=1.23.8", "9b01b19db71311b10bb08ec6bbbdbb2a": "RUN curl -LO https://kubernetes-helm.storage.googleapis.com/helm-v2.8.1-linux-amd64.tar.gz", "c8bdbcbfd03c2c6bc845d57733aaeb3f": "RUN tar -xzvf helm-v2.8.1-linux-amd64.tar.gz", "a23eaf36817cd295dba645d251caa441": "RUN apt-get install -y cmake liblzma-dev", "44691e3115f312ef791e04efc305de04": "RUN apt-get install -y $buildDeps fuse3 unzip lzma", "b8f63c13305c2d7208993b4836c2a3ce": "RUN go build -o service-manager cmd/servicemanager/main.go", "50d6871f77b6ad604f8ac0b94eb0ec9c": "COPY /app/service-manager /home/", "90e3cbfa4f3a7a651b6bb0cb625d1890": "RUN chmod +x /home/service-manager", "8e2642fe758afa37be0b50a9d92f5d03": "CMD [\"/home/service-manager\"]", "6e05955dadf9422fa77b00f288af049d": "ENV HOME=\"/root\"", "3846f7dc0318b0ef1c54a5553648d907": "RUN apk add --update git make gcc curl musl-dev linux-headers", "03bf87729aa81cea341fb58c262e9e31": "RUN git clone --depth=1 https://github.com/ethereum/go-ethereum.git", "9066d197bd11118ce8ded133acb74e6e": "RUN cd go-ethereum", "880d6c451dd646bfe618f287ffe1469f": "RUN (git fetch --tags", "dc31024a86d2e0bf8b53de23db6829c8": "RUN latestTag=$(git describe --tags `git rev-list --tags --max-count=1`)", "8ccd8478ff2f2d54fa9ec09560812842": "RUN git checkout $latestTag)", "ee610289aac0991b5f76007b9be4535a": "RUN make geth", "6396abb4e413d8f800359b4f9e53b124": "RUN cp /go/go-ethereum/build/bin/geth /usr/local/bin/", "3321392aa97042c5d3b2916a7509ee8d": "RUN rm -rf /go-ethereum", "87b5038c78cd7d4a5a90cbcbe48ff240": "RUN apk del git go make gcc curl musl-dev linux-headers", "045e5b2d92edc08c609fa4fff27f3803": "ADD files/startscript.sh /root/", "dafe6f9a308acbe006cc1fe549a0f8ad": "RUN chmod +x /root/startscript.sh", "2d90e930b655b0f57869f5ba06558c12": "EXPOSE 8545", "45d22417052f10a097a3ee686ab860bf": "EXPOSE 30303", "0343bc705c6f8c3676c087c4e8701d66": "EXPOSE 30303/udp", "666dd5c30ad2de0d4204f9f46f296626": "ENTRYPOINT [\"/root/startscript.sh\"]", "9aa3c247b557d40826a1960121955aa7": "RUN mkdir -p /home/nebula", "668edeadb23c1469c375edd620152d1d": "WORKDIR /home/nebula", "60a29841e1bd5e19ba43442818b066d3": "WORKDIR /go/src/github.com/int128/slack-docker", "cdf8764f8c4c0cb4626edb0b2bde657b": "RUN chmod +x main", "e7042d955d90e35b6e8a3947e38c2b6e": "RUN set -ex; go get fortio.org/fortio; cd /go/src/fortio.org/fortio; git fetch --tags; git checkout latest_release; make submodule-sync; make official-build-version OFFICIAL_BIN=~/go/bin/fortio; setcap 'cap_net_bind_service=+ep' `which fortio`; fortio version", "ec37b0f2b4bb275ee5d50730e2552f61": "RUN apt-get update -qy", "f8910b0d66963b9aa80355ba4e30421a": "RUN apt-get install -qy apt-transport-https bc curl dnsutils git htop iftop inetutils-ping iotop mtr nethogs net-tools nmap pv strace sudo tmux traceroute vim wget", "fc1b02abca8499a4d7b1cb6fb5990464": "RUN echo \"deb [trusted=yes] https://repo.iovisor.org/apt/xenial xenial-nightly main\" | tee /etc/apt/sources.list.d/iovisor.list", "fe9dda46b7f6e31f85c0b11d6e1bb032": "RUN apt-get install -qy bcc-tools", "b5e46acc37a58c55ab0aa9413b0e1b1e": "COPY README.md .", "d725263296d08db91921bb38142f71c9": "FROM golang AS building", "3a5917517eea3f2b990bf42831a16c0f": "LABEL maintainer=\"jeferson@linuxtips.com.br\"", "f944d758d8c08f1f0d561cd0e2925668": "ENV exporter_version=\"0.18.1\"", "4280064817f15de73df67f06f400ccde": "RUN curl -LO https://github.com/prometheus/node_exporter/releases/download/v${exporter_version}/node_exporter-${exporter_version}.linux-amd64.tar.gz", "1f8eaee65c52233f9a43da25b44c082c": "RUN tar -xvzf node_exporter-${exporter_version}.linux-amd64.tar.gz", "fcd02ee589f0c9d7c305afdcd9d48ce3": "RUN cp node_exporter-${exporter_version}.linux-amd64/node_exporter /tmp/", "c24e7359e5bada9fbde3884e7edb9d86": "COPY /tmp/node_exporter /usr/local/bin/", "845d24d0e3343dac9e73033db8e8b620": "ENTRYPOINT node_exporter --path.procfs=/usr/proc --path.sysfs=/usr/sys --collector.filesystem.ignored-mount-points=\"^(/rootfs|/host|)/(sys|proc|dev|host|etc)($$|/)\" --collector.filesystem.ignored-fs-types=\"^(sys|proc|auto|cgroup|devpts|ns|au|fuse\\.lxc|mqueue)(fs|)$$\"", "db39daec3d7b216b4bb456bb6319a135": "EXPOSE 9100", "ab6a0e67c8da4fd4d7e27cc542dc432e": "RUN apk add git gcc libc-dev", "b35e897ffbd741da581ba8fdbedd656d": "COPY /build/bin/d2arena /app", "a5b23c1718dc74e6857640a197b9979d": "CMD [\"./d2arena\"]", "a87dc27a6faa26436f57b036577d4f0e": "RUN CGO_ENABLED=0 GOOS=linux go build -ldflags '-w -extldflags \"-static\"' -tags cb-tumblebug -o cb-tumblebug -v", "1bd8984b58fd5e3ee9804f6dbf9eb934": "RUN go get github.com/Pandentia/protoplex", "7372d4a2a3a2716b7efc05307ae1bec4": "COPY /nautilus/cmd/svc_id /bin/", "f6cae262b4ac1092242f9ea001a68b44": "RUN apt-get -y install youtube-dl", "237ace0609815eb862d2052d74241705": "RUN GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o /go/bin/deckhand", "7a381b3aca92c1cc9d79180572905109": "ENTRYPOINT [\"/go/bin/deckhand\"]", "fc28dacb36038d0c4e6a482c8ca9257f": "ADD main.go /app/", "17e442b482c79857bc0ec16181604408": "RUN go build -o /usr/local/bin/docker-explorer /app/main.go", "fc13d4356290ac6b116517306d6a27b4": "CMD [\"/usr/local/bin/docker-explorer\"]", "343d6452ced9ae3a755b1504e539048e": "RUN go install -v -ldflags \"-s -w\" github.com/minio/kes/cmd/release", "a03f84d585130a28933e5747762c42d2": "RUN go install -v -ldflags \"-s -w -X main.version=$(release)\" github.com/minio/kes/cmd/kes", "e417acee3c487f7aa33043ea418af0c8": "ARG UID=1000", "216eddbb9367750cd2dc522b3d28d618": "ARG GID=1000", "3f658313be299ee63d28e75a1b2d708d": "RUN chown sensoroni:sensoroni /opt/sensoroni/jobs", "78119144008f8b11756a734e08d52aae": "RUN chown sensoroni:sensoroni /opt/sensoroni/logs", "44789b43dced66d04b6aec186a87e8f9": "COPY /app/deployer /usr/local/bin/", "ba2e8799ea2f417e0a4053fe079168bc": "COPY /app/bin/xenserver /usr/local/bin/", "cd077b174113906b1956c1d05ca2a913": "RUN strip --strip-unneeded /pagespeed_exporter", "9733857f7a2c920886408c70753be42a": "ARG GOLANG_VERSION=1.13", "87a6defb78be1c5f9f39ab9fa62f0376": "FROM golang:$GOLANG_VERSION-alpine", "e32da91e6c1fa6d7d13894159ec9f0cc": "WORKDIR /bot", "e567dec95274bff8f05c7c118029898f": "CMD [\"./go-discord-irc\", \"--config\", \"config.yml\"]", "c6422e357c331664f3a750d81b51ddad": "RUN go get github.com/rzrbld/iris", "5da5e22c7ee9ec11d4f89c6dba68353f": "ENV PORT=\":8082\"", "6e3ebe7e84272cd7a91f16f4ba4bcad5": "ENV DBLINK=\"http://127.0.0.1:8083/add\"", "f97b4ea28e803f79d0c1ea8283372f65": "FROM golang:1.14-alpine AS development", "113ffd698e7d3c6eba41cfc72549848b": "COPY /chirpstack-application-server/build/chirpstack-application-server /usr/bin/", "53a9c4f6551ca0206e2f363d610ab285": "ENTRYPOINT [\"/usr/bin/chirpstack-application-server\"]", "2a8ca72b7c6e604f38a10bde00d790a7": "RUN go build -mod vendor -o target/nebula-importer", "eb80f9f2d2188ac949b00a9cc3aae6b8": "COPY config.example.yaml ./config.yaml", "1cd35f27da8aaef1ea2c79f5b05ce2e9": "COPY /usr/local/go/bin/go /usr/bin", "ba48551bddcbc9fc422d1af854dc4136": "FROM golang:1.13-alpine3.10 AS build", "2943ab0fdc667dac310ddfe98be92d7d": "FROM golang:1.20.4-alpine AS build-env", "6d2b0dd04caeea125120b76484fc80d1": "WORKDIR /app/v2", "fd6be9114dad1f36a4305c14deb8f5ff": "RUN go build ./cmd/nuclei", "46dbdc93c8b7006e50fd125afc788dcf": "FROM alpine:3.18.0", "36069a6d5d0a807defd9d62d1ddc6804": "RUN apk -U upgrade --no-cache", "861f7efb394dbc2a386b0a3e10f04d9d": "RUN apk add --no-cache bind-tools chromium ca-certificates", "4aaf0bc504c5da8337597c3b7f664a52": "COPY /app/v2/nuclei /usr/local/bin/", "ecb7c6c43cb4d16e7e1e174452809769": "ENTRYPOINT [\"nuclei\"]", "2a37708624c91395fc7592fba9a9ae9b": "FROM golang:1.13.1 as dev", "ff22fb36fbaf4dabc569f798b9849986": "ADD . /go/src/User-Management", "6c30755dcfdc78f921f3fe5e2753a8cc": "WORKDIR /go/src/User-Management", "109a652073caf493e7015a88b0a2cd34": "RUN CGO_ENABLED=0 GOOS=linux go build -o main.", "613c9bf5511358ee70335fbbe1abf0b7": "FROM alpine:3.9.2 as prod", "013cd812cc6bdecce689aca8c2f823e9": "EXPOSE 5005", "f9cf7d707b0672b22aa99d634a175bd5": "ENTRYPOINT [\"./usermanagement\"]", "09d0c1b10fab0657ce7fb55fca174320": "RUN go get github.com/xtaci/kcptun/client", "eef6805f45878fb5110f8aac55ad2150": "RUN go get github.com/xtaci/kcptun/server", "7cb2162498ebf79f495afa7595c1d86a": "RUN sed -e 's#/var/log/#/var/log/nginx/#g' -e 's#SecStatusEngine On#SecStatusEngine Off#g' /usr/share/modsecurity/modsecurity.conf > modsecurity-crs/owasp-modsecurity-detect.conf", "2d45f4dadef785288725cf584c6c72f6": "RUN echo 'SecAction \"id:900990, phase:1, nolog, pass, t:none, setvar:tx.crs_setup_version=310\"' >> modsecurity-crs/owasp-modsecurity-detect.conf", "ee8ae1bcb111b749e9fc5358307edda9": "RUN echo \"Include /usr/local/share/modsecurity-crs/rules/*.conf\" >> modsecurity-crs/owasp-modsecurity-detect.conf", "2d32f0d5ecfcc65e1fd287e4ea431798": "RUN sed -e 's#SecRuleEngine DetectionOnly#SecRuleEngine On#g' modsecurity-crs/owasp-modsecurity-detect.conf > modsecurity-crs/owasp-modsecurity-on.conf", "54f519cb81f1f747f41a2afa67dafd90": "RUN apk add --update git make gcc curl musl-dev linux-headers tar supervisor py-pip", "ac0d82d6a31194cb69da13265f107cfc": "RUN pip install s3cmd", "b76a34778e1e06e8f2aa2bb281e1b1e9": "RUN apk del git go make gcc curl musl-dev linux-headers py-pip", "da24001e0166922e3f7d159eb90c24e4": "ADD files/runner.sh /root/", "9d7d5dc15edc1d3db510b2b62d28d3fe": "ADD files/cron.txt /root/", "61e751955c99f76682861f5d6ed868ed": "ADD files/geth.supervisor.conf /etc/supervisord.conf", "2b18f24d9da0132d994454a0aeb44b2b": "RUN chmod +x /root/runner.sh", "b6fb3a7e3dff44822b10375c603eb781": "RUN /usr/bin/crontab /root/cron.txt", "e876d18c57047eb741b7bee9376bc5fc": "EXPOSE 9001", "b8f87d3510975e08d9768b03e3f247c8": "ENTRYPOINT [\"supervisord\", \"--nodaemon\"]", "45095d25c2232a322b185fea60ba0d99": "RUN go get -tags \"v0.13.10\" -u -v github.com/gobuffalo/buffalo/buffalo", "61db973d1c187ab26f9865acd6e96c1b": "ADD . /go/src/github.com/waltzofpearls/tetris-go", "400d6cc68a07659d0bae4164242256df": "WORKDIR /go/src/github.com/waltzofpearls/tetris-go", "f7e75eccb9f9e7be5cbde2239aa4c4b1": "RUN go get -tags \"v0.12.6\" -u -v github.com/gobuffalo/buffalo/buffalo", "a1795dcf7400a0169799de382f97c8fd": "ENV APP_DIR=\"${GOPATH}/src/${GO_DOMAIN}/${GO_GROUP}/${GO_PROJECT}\" USER_UID=\"1111\"", "b28837778bc6e2cb25ca74bb48fdccac": "RUN adduser -D -u ${USER_UID} ${GO_PROJECT}", "a025affc99a31fbee400b63aa0faf48c": "COPY . /opt/pilot", "7da02493f59afc9b74b3ae39b3246487": "COPY /pilot/pilot/gobgp_interface /opt/pilot/pilot/", "85fb166b27bb83bebb59e5699bb0f25e": "RUN cd /opt/pilot", "33c56d7f8058ddc1c0c75da2fb668161": "FROM golang:1.12.3-alpine AS builder", "3994463b47dbb072d8d6bda61cb0d732": "ENV GOFLAGS=\"-mod=readonly\"", "c463e62e4b454b2c512f9deb4df19a50": "RUN apk add --update --no-cache ca-certificates make git curl mercurial bzr", "69bbce1d6bc780ace5ef7c622b8cd8b0": "RUN BINARY_NAME=telescopes make build-release", "c1a28f026e4b5076fb7218c23d81460e": "FROM alpine:3.9.3", "4e1bfa59b3d1b542f412790fd4b43c15": "RUN apk add --update --no-cache ca-certificates tzdata bash curl", "4d63729b108a41245d18824e67e18e16": "COPY /build/build/release/telescopes /bin", "2c320b5f316de1a2570a15354007a050": "CMD [\"/bin/telescopes\"]", "1465efcb290948239dbe4a9c306f87ee": "RUN apk add --update make git nodejs npm curl", "50ce7437d2dd0df69e00403a01807c90": "ENTRYPOINT ./rss-middleware -rss $RSS -qbittorrent $QBITTORRENT -qbittorrent-username $QBITTORRENT_USERNAME -qbittorrent-password $QBITTORRENT_PASSWORD -cron=\"$CRON\"", "48640867f7f937b250091c7503e00ee0": "RUN apk add --no-cache open-vm-tools util-linux e2fsprogs xfsprogs", "b8ceef4cc7972cbf1df8dc7826fcfa98": "RUN ls /tmp/gotty/bin/gotty", "5da3de99933fc4137aa0ab7467ce11f1": "COPY /tmp/gotty/bin/gotty /usr/bin/", "b9c9c563229ab0d00aa7f839f70a89d2": "RUN apt-get -y install curl python", "1c68db4e0cad3d19cbc0423836e62b39": "COPY /chirpstack-gateway-bridge/build/chirpstack-gateway-bridge /usr/bin/", "890ba899ef6221ead4f62a9cd3f720f0": "ENTRYPOINT [\"/usr/bin/chirpstack-gateway-bridge\"]", "34a0be7921ddd6712ea590efb688a592": "ENTRYPOINT ./tuku -port ${PORT:-0} -file ${FILE} -filter $(echo $FILTER | awk '{print $0}')", "788fd41354e541c8098fb6e3f52ef8e7": "FROM golang:1.11.2", "60d178139435f415d64263e4e5740779": "FROM golang:1.13.1-alpine3.10 AS build", "c8c20ded3e3aa93f2d4aba0f51a15e8f": "ENV DESIRED_VERSION=\"v3.0.2\"", "e741f4581014184b1ce92e90870176ae": "ENV KUBECTL_VERSION=\"v1.15.6\"", "b9b8af49be3346f0097011cc7511336f": "CMD [\"skirmish\"]", "dae4c39c2aaabd1d0d9d5905d7ccb109": "ENV RUTHIE_CLICKHOUSE_ADDR=\"\" RUTHIE_CLICKHOUSE_ALTADDRS=\"\" RUTHIE_REDIS_ADDR=\"\" RUTHIE_CONSUMER_NAME=\"\" RUTHIE_BATCH=\"10000\" RUTHIE_PERIOD=\"60000000000\" RUTHIE_SHARDS_COUNT=\"10\" RUTHIE_PREFETCH_COUNT=\"30000\" RUTHIE_PENDING_BUFFER_SIZE=\"1000000\" RUTHIE_PIPE_BUFFER_SIZE=\"50000\" RUTHIE_QUEUE_NAME=\"ruthie\"", "39718ae990214a4320df1152f3ee0582": "FROM golang:1.14-buster as builder", "c05e784f8dbe42aa1e6590c515bf21fb": "LABEL version=\"1.0.8\"", "d86335f0f9587a6bd53291a6abf8a258": "WORKDIR ${GOPATH}/src/github.com/aergoio/aergo-esindexer", "e76ee2be886648fdd0d7e7ed6399b4db": "ARG GIT_TAG=\"\"", "7bd12a4ca1675f83fa9f438e5b825ad8": "RUN git checkout ${GIT_TAG}", "7d3f2d3ca04a4f902620fba3d5f3f922": "RUN go get github.com/golang/lint/golint github.com/aws/aws-sdk-go github.com/aws/aws-dax-go github.com/antlr/antlr4/runtime/Go/antlr github.com/aws/aws-lambda-go/lambda github.com/stretchr/testify github.com/gusaul/go-dynamock go.uber.org/zap github.com/satori/go.uuid github.com/asaskevich/govalidator github.com/reddotpay/awskms github.com/gomodule/redigo/redis github.com/hubcash/cards", "a03a73802aeab07bf407fc0e0431e5cd": "COPY templates /", "7c8a746782c9f1e9f5bb3391bd20a8d8": "RUN apk add postgresql-client", "923ecc4608e2cf23320c311720ddc8f1": "ARG CACHE_TAG=latest", "fcd31f184c93e81c62fc50dfb1c25cd0": "RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -ldflags \"-X main.version=${CACHE_TAG}\" .", "1f3d2ad30f1787c520d36142c503f0af": "FROM golang:1.9.3-alpine3.7 as backend", "e679f7da07978bdaacf77097a3e13836": "RUN apk add ca-certificates curl git make tzdata", "40a7a5ba7ac30ffd2ece088e5bb39e0a": "ADD Gopkg.* Makefile /go/src/github.com/banzaicloud/telescopes/", "b976d85fd3951c48d9d2c8634abb61ae": "RUN GO111MODULE=on CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o remote-vsc-k8s .", "868809c7eda6afb5bc5e6b2ea1220638": "VOLUME [\"/root\", \"/home\"]", "ed9b61a9816531488263a3b0a049d72c": "COPY /root/remote-vsc-k8s .", "f10fb62f2fc38420509ea5aab099bfc4": "CMD [\"./remote-vsc-k8s\"]", "d18a3949d9caea6a15613ffbe1988cc3": "RUN apk add -U --no-cache git gcc musl-dev", "8caec79dda3a46b79af979bfee84325a": "COPY /go/bin/liman /", "1a947830c5d27ce1204b687fa378d23f": "COPY /go/src/liman/public /", "676db41371f53161870ce2136d5176fd": "COPY /go/src/liman/templates /", "fde03eca14cd2bdbecff9ca8824d764f": "RUN apk add -U --no-cache ca-certificates docker", "35d439e4d7249938523181a486346200": "CMD /liman", "4e36620940093b102de471a2efb334be": "RUN CGO_ENABLED=0 go test ./...", "002b8d782ee09db101cb9801f7e5c89b": "RUN CGO_ENABLED=0 GOOS=linux go build -a -o certificates main.go", "f3ad469e0751ef8e68562fe57c32c792": "RUN apk add --no-cache git gcc libc-dev", "3155331440b00dd5e7007284d1fa398c": "RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO111MODULE=on go build -a -o app -ldflags \"-X 'main.CompileDate=`date -u`'\" cmd/main.go", "aa309cdcea1df3376a7067c4877f2a65": "RUN git checkout v0.5.2-beta", "e3b99355529ababe818f98e14d3a4864": "CMD /go/bin/clawiod", "aa0737af92db7efacc794a9936b5df2b": "ENV HUGO_VERSION=\"0.68.3\"", "0f8945a86bdab896e95b7c3c4df528b6": "ENV VNU_VERSION=\"20.3.16\"", "50c4addb00e11ce7feaf1991445d2f5b": "RUN apk add --update --no-cache ca-certificates git libc6-compat libstdc++ openjdk8-jre-base", "8c70f1109ec9775c1dadb7b25e2136f8": "COPY . /go/src/github.com/malice-plugins/escan", "ef12f966a9726f73983b1c205090b33d": "WORKDIR /go/src/github.com/malice-plugins/escan", "47366f9169f8fe0b938a35f0faed2ffd": "LABEL malice.plugin.repository = \"https://github.com/malice-plugins/escan.git\"", "0d7d04d4bac0c0ffb5644a280a050781": "ENV ESCAN=\"7.0-20\"", "a8f47a86caefc1585063d631438410be": "RUN buildDeps='wget ca-certificates gdebi'", "9db2578f89c96d1c992aecb94339f22b": "RUN apt-get install -yq $buildDeps libc6-i386 --no-install-recommends", "fcb65304eba7e681761286b3d77e6849": "RUN echo \"===> Install eScan AV...\"", "90a1fcd499839cad082a3620b8c06488": "RUN wget -q -P /tmp http://www.microworldsystems.com/download/linux/soho/deb/escan-antivirus-wks-${ESCAN}.amd64.deb", "27a39c89ad510d10a7aaf84ab5984654": "RUN DEBIAN_FRONTEND=noninteractive gdebi -n /tmp/escan-antivirus-wks-${ESCAN}.amd64.deb", "d6f99892e48893814ba45c3e6ea177c0": "RUN apt-get remove -y $buildDeps", "08271cb1ce27eff93d6dfeec38f9507b": "RUN apt-get install -yq --no-install-recommends ca-certificates wget", "8ba4d906aeb43b1dd5bebcffde93af0e": "RUN escan --update", "48419da84895a4f96ad325aaa5d56d35": "WORKDIR $GOPATH/src/bootjp/vrc_panoprama_picture_manage", "dda357bf431c564a0a45ba7650df1c4f": "MAINTAINER Jian-Long Huang <huang@jianlong.org>", "58fa4f2c8c46a23956111f0ffb1d240c": "CMD ./bin/webserver", "9009fe5ee2d36b9176a1cbffc4e6e1e5": "RUN go get github.com/iamipanda/ygopro-data", "af8ca3bb41e4d3bda0b75b38eee06e72": "ARG GOTARGET=\"service/*.go\"", "c07d9b3667ab97e51aa7d7ef8996d3ec": "ENV GOTARGET=\"${GOTARGET}\"", "fad66d3c662a1c9ef37f571fee951877": "ENV ALIYUNCLI_VERSION=\"3.0.30\"", "6711696ddb863a0d4bf159bb67cb0f8d": "RUN tar zxf aliyun-cli.tar.gz", "da3098627f26241b2c3c12a10002aa24": "RUN git clone https://github.com/aliyun/aliyun-openapi-meta", "df99fac35983550d028a5666dd29ddd1": "RUN echo '0 0,4,8,12,16,20 * * * /usr/local/bin/ghbackup.sh' > /etc/crontabs/root", "ca1f248231eb0946f7076794dcec48a1": "ENTRYPOINT [\"/bin/bash\",\"run.sh\"]", "e0f037fa0514f2ea8ac94d9649cb0894": "FROM golang:1.13.5 AS build-env", "45ee034d8828396299c7fd95306efae8": "ENV WORKDIR_PATH=\"/go/src/github.com/kazz187/fargate-td\"", "38224b9e567264f818bb2697ecac3750": "ADD . ${WORKDIR_PATH}", "80772fac775d4573417ddae216a52238": "WORKDIR ${WORKDIR_PATH}/cmd/fargate-td", "14875213d9ff24dbac7cbf7195db8216": "RUN CGO_ENABLED=0 go build -o /bin/", "0e01146413fec30b5a44ab575e73e6e1": "RUN strip /bin/fargate-td", "2a90ae07a8bf6b00c264d35007dd387c": "COPY /bin/fargate-td /usr/local/bin/", "3396c2c47c85ce87e3e7310f2c77d234": "CMD [ \"/usr/local/bin/fargate-td\" ]", "7cc7373b627e3a5211dc37b7c7d4ac6a": "COPY auth /usr/src/", "e2237e8917e8a78ec8dee56b713337a9": "RUN git checkout tags/v1.3.1", "bd93ebb2939d64a7a4f951c1cf90afe2": "ARG PKG_PATH=$GOPATH/src/${PKG_NAME}", "bc5ff58bf4563c91f004486881e9812d": "RUN apk --no-cache add bash inotify-tools", "405de8323268b0250320d752f3c27bbf": "COPY /go/bin ./bin/", "1acfc887167dc5eade9f8edd64ff9a19": "ENTRYPOINT [ \"./entrypoint.sh\", \"-c\", \"/home/app/values/config.yaml\" ]"}